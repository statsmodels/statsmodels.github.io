{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Dynamic factors and coincident indices\n",
    "\n",
    "Factor models generally try to find a small number of unobserved \"factors\" that influence a substantial portion of the variation in a larger number of observed variables, and they are related to dimension-reduction techniques such as principal components analysis. Dynamic factor models explicitly model the transition dynamics of the unobserved factors, and so are often applied to time-series data.\n",
    "\n",
    "Macroeconomic coincident indices are designed to capture the common component of the \"business cycle\"; such a component is assumed to simultaneously affect many macroeconomic variables. Although the estimation and use of coincident indices (for example the [Index of Coincident Economic Indicators](http://www.newyorkfed.org/research/regional_economy/coincident_summary.html)) pre-dates dynamic factor models, in several influential papers Stock and Watson (1989, 1991) used a dynamic factor model to provide a theoretical foundation for them.\n",
    "\n",
    "Below, we follow the treatment found in Kim and Nelson (1999), of the Stock and Watson (1991) model, to formulate a dynamic factor model, estimate its parameters via maximum likelihood, and create a coincident index."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Macroeconomic data\n",
    "\n",
    "The coincident index is created by considering the comovements in four macroeconomic variables (versions of these variables are available on [FRED](https://research.stlouisfed.org/fred2/); the ID of the series used below is given in parentheses):\n",
    "\n",
    "- Industrial production (IPMAN)\n",
    "- Real aggregate income (excluding transfer payments) (W875RX1)\n",
    "- Manufacturing and trade sales (CMRMTSPL)\n",
    "- Employees on non-farm payrolls (PAYEMS)\n",
    "\n",
    "In all cases, the data is at the monthly frequency and has been seasonally adjusted; the time-frame considered is 1972 - 2005."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-17T10:28:59.229056Z",
     "iopub.status.busy": "2023-10-17T10:28:59.227993Z",
     "iopub.status.idle": "2023-10-17T10:29:00.353172Z",
     "shell.execute_reply": "2023-10-17T10:29:00.352444Z"
    }
   },
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import statsmodels.api as sm\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "np.set_printoptions(precision=4, suppress=True, linewidth=120)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-17T10:29:00.357090Z",
     "iopub.status.busy": "2023-10-17T10:29:00.356541Z",
     "iopub.status.idle": "2023-10-17T10:29:01.529194Z",
     "shell.execute_reply": "2023-10-17T10:29:01.528519Z"
    }
   },
   "outputs": [],
   "source": [
    "from pandas_datareader.data import DataReader\n",
    "\n",
    "# Get the datasets from FRED\n",
    "start = '1979-01-01'\n",
    "end = '2014-12-01'\n",
    "indprod = DataReader('IPMAN', 'fred', start=start, end=end)\n",
    "income = DataReader('W875RX1', 'fred', start=start, end=end)\n",
    "sales = DataReader('CMRMTSPL', 'fred', start=start, end=end)\n",
    "emp = DataReader('PAYEMS', 'fred', start=start, end=end)\n",
    "# dta = pd.concat((indprod, income, sales, emp), axis=1)\n",
    "# dta.columns = ['indprod', 'income', 'sales', 'emp']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Note**: in a recent update on FRED (8/12/15) the time series CMRMTSPL was truncated to begin in 1997; this is probably a mistake due to the fact that CMRMTSPL is a spliced series, so the earlier period is from the series HMRMT and the latter period is defined by CMRMT.\n",
    "\n",
    "This has since (02/11/16) been corrected, however the series could also be constructed by hand from HMRMT and CMRMT, as shown below (process taken from the notes in the Alfred xls file)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-17T10:29:01.532720Z",
     "iopub.status.busy": "2023-10-17T10:29:01.532063Z",
     "iopub.status.idle": "2023-10-17T10:29:01.535695Z",
     "shell.execute_reply": "2023-10-17T10:29:01.535127Z"
    }
   },
   "outputs": [],
   "source": [
    "# HMRMT = DataReader('HMRMT', 'fred', start='1967-01-01', end=end)\n",
    "# CMRMT = DataReader('CMRMT', 'fred', start='1997-01-01', end=end)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-17T10:29:01.539340Z",
     "iopub.status.busy": "2023-10-17T10:29:01.538077Z",
     "iopub.status.idle": "2023-10-17T10:29:01.542746Z",
     "shell.execute_reply": "2023-10-17T10:29:01.542200Z"
    }
   },
   "outputs": [],
   "source": [
    "# HMRMT_growth = HMRMT.diff() / HMRMT.shift()\n",
    "# sales = pd.Series(np.zeros(emp.shape[0]), index=emp.index)\n",
    "\n",
    "# # Fill in the recent entries (1997 onwards)\n",
    "# sales[CMRMT.index] = CMRMT\n",
    "\n",
    "# # Backfill the previous entries (pre 1997)\n",
    "# idx = sales.loc[:'1997-01-01'].index\n",
    "# for t in range(len(idx)-1, 0, -1):\n",
    "#     month = idx[t]\n",
    "#     prev_month = idx[t-1]\n",
    "#     sales.loc[prev_month] = sales.loc[month] / (1 + HMRMT_growth.loc[prev_month].values)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-17T10:29:01.546766Z",
     "iopub.status.busy": "2023-10-17T10:29:01.545705Z",
     "iopub.status.idle": "2023-10-17T10:29:01.552907Z",
     "shell.execute_reply": "2023-10-17T10:29:01.552339Z"
    }
   },
   "outputs": [],
   "source": [
    "dta = pd.concat((indprod, income, sales, emp), axis=1)\n",
    "dta.columns = ['indprod', 'income', 'sales', 'emp']\n",
    "dta.index.freq = dta.index.inferred_freq"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-17T10:29:01.557048Z",
     "iopub.status.busy": "2023-10-17T10:29:01.555949Z",
     "iopub.status.idle": "2023-10-17T10:29:02.481721Z",
     "shell.execute_reply": "2023-10-17T10:29:02.480903Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAABMYAAAINCAYAAADV8nOBAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjguMCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy81sbWrAAAACXBIWXMAAA9hAAAPYQGoP6dpAAEAAElEQVR4nOzdd3gUVdvH8e9ueg8hIQUCBAi99w5qBAQRFAtFRUCwAIJYEBUVGw88NrCA+CqID9gFARVBQFEMvffQaxIgPSFtd98/BhYiSEvZlN/nuvbKzsyZmXs3IZzce859TDabzYaIiIiIiIiIiEgZY3Z0ACIiIiIiIiIiIo6gxJiIiIiIiIiIiJRJSoyJiIiIiIiIiEiZpMSYiIiIiIiIiIiUSUqMiYiIiIiIiIhImaTEmIiIiIiIiIiIlElKjImIiIiIiIiISJmkxJiIiIiIiIiIiJRJzo4O4EZYrVZOnDiBj48PJpPJ0eGIiIhICWGz2UhNTSUsLAyzWZ8PFkfq54mIiMiNuNF+XolMjJ04cYLw8HBHhyEiIiIl1NGjR6lUqZKjw5DLUD9PRERE8uN6+3klMjHm4+MDGC/W19fXwdGIiIhISZGSkkJ4eLi9LyHFj/p5IiIiciNutJ9XIhNj54fV+/r6qsMkIiIi101T9Iov9fNEREQkP663n6fiGiIiIiIiIiIiUiYpMSYiIiIiIiIiImWSEmMiIiIiIiIiIlImlcgaY9fCZrORm5uLxWJxdChyjouLC05OTo4OQ0REREo49fOKBycnJ5ydnVWzT0RESrRSmRjLzs7m5MmTZGRkODoUuYjJZKJSpUp4e3s7OhQREREpodTPK148PT0JDQ3F1dXV0aGIiEhZl5N5Q6eVusSY1Wrl4MGDODk5ERYWhqurqz7FKgZsNhunTp3i2LFjREZGauSYiJRKGdm5zF1zhPWHEulcK4i7m1XC2UlVC0QKivp5xYfNZiM7O5tTp05x8OBBIiMjMZv1+05ERBwkbgd8fPsNnVrqEmPZ2dlYrVbCw8Px9PR0dDhykaCgIA4dOkROTo4SYyJS6lisNh76bB1rDyUAsHhHLH/uO82H/Zs6ODKR0kP9vOLFw8MDFxcXDh8+THZ2Nu7u7o4OSUREyiKrFRaNgbNnbuj0UpcYO0+fWBU/+kRXREqLvXGp/LYrDrPJRIuq5Zj0yx57QszbzZl+LcP5bNUhftp6kgdbn6FVtfIOjlikdFE/r/jQ90JERBxuy5dwdDU4ewCp1316qU2MiYiIFCSbzcbve05xMjmTVxftIDPHetl242+vw30tKpORbWHOmiO88fMuvn20DW7OGikrIiIiImXA2k/g8Cq46xNwcince2UkwNLxxvMOY4DnrvsS+oinGOncuTOjR4++4fMPHTqEyWRi8+bNBRbT9Zg1axb+/v4OubeISGGbs+YIg2at4/l528jMsdKksj/1K/oCUDfUl6durcn42+tyb/NwAEZFReLt5szWY8k88eUmrFabI8MXERERESkaPz8NO+bB7p8K/17LJkDGGQiqAy0evqFLaMRYMfLDDz/g4lLI2VQREblup9OymLx4t337gdZVePH2OriYzWw5lkSdUF/cXfKOCKvg487HDzRj0Mx1/LojjiU74+hWP6SoQxeRYqJz5840btyY9957z9GhiIiIFJ6zSReeW3ML9157foENs4znPd6+4dFpSowVIwEBAY4OAYvFgslkUr0IEZGLvL8shpTMXOqF+bJgRHuczBdqJjapXO5fz2tXI5BB7avy8R8H+Hb9USXGRMowfQAqIiJlQuLBC88LMzF2YhPMf8x43no4VG0HKSk3dCllP4qRi6dSVq1alTfffJPBgwfj4+ND5cqVmTFjRp72a9eupUmTJri7u9O8eXM2bdqU5/jvv/+OyWTip59+omHDhri7u9O6dWu2b99ub3N++uOCBQuoW7cubm5uHDlyhMTERB588EHKlSuHp6cnt912GzExMXmuP2vWLCpXroynpyd33nknZ87c2AoQIiLFWWJ6Nl+vPwrAuNvq5EmKXYvzUytX7IknLiWzwOMTkZIhICAAHx8fR4chIiJSuBIuSoxdPHqsIB3fADN7wNlECGsKUS/n63JlIjFms9nIyM4t8ofNlr96Mm+//bY94fX444/z2GOPsWfPHgDS0tK4/fbbqVu3Lhs2bOCVV17h6aefvux1nnnmGd5++23WrVtHUFAQPXv2JCcnx348IyODSZMm8X//93/s2LGDChUq8NBDD7F+/XoWLFhAdHQ0NpuN7t27289bs2YNQ4YMYcSIEWzevJmbbrqJ119/PV+vV0SkuLBabbz3215+3RHLzFUHycyxUi/Ml3Y1rn91yepB3jSvUg6rDT5Yvq8QohUp42w2yE4v+sd19vOu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JiIiIiIiIiIiZZISYyIiIiIiIiIiUiYpMSYiIiIiIiIiImWSEmMiIiIiIiIiIlImKTEmIiIiIiIiIiJlkhJjIiIiIiIiIiJSJikxJiIiIiIiIiIiZZISYyIiIiIiIiIiUiYpMSYiIiIiIiIiImWSEmMiIiIiIiIiIlImKTEmIiIiIiIiIiJlkhJjIiIiIiIiIiJSJikxJiIiIiIiIiIiZZISYyIiIiIiIiIiUiYpMSYiIiIiIiIiImVSiU+MrVy5kp49exIWFobJZGL+/PnXfQ2bzcZbb71FzZo1cXNzo2LFirzxxhsFH6yIiIiIiIiIiBQbzo4OIL/S09Np1KgRgwcP5q677rqha4waNYolS5bw1ltv0aBBAxISEkhISCjgSEVEREREREREpDgx2Ww2m6ODKCgmk4l58+bRu3dv+76srCxeeOEFvvzyS5KSkqhfvz6TJk2ic+fOAOzatYuGDRuyfft2atWq5ZjARURERERERESkyJX4qZRXM2LECKKjo/nqq6/YunUr99xzD926dSMmJgaAhQsXUq1aNRYtWkRERARVq1bl4Ycf1ogxEREREREREZFSrlQnxo4cOcLMmTP59ttv6dChA9WrV+fpp5+mffv2zJw5E4ADBw5w+PBhvv32W2bPns2sWbPYsGEDd999t4OjFxERERERERGRwlTia4xdybZt27BYLNSsWTPP/qysLMqXLw+A1WolKyuL2bNn29t9+umnNGvWjD179mh6pYiIiIiIiIhIKVWqE2NpaWk4OTmxYcMGnJyc8hzz9vYGIDQ0FGdn5zzJszp16gDGiDMlxkRERERERERESqdSnRhr0qQJFouF+Ph4OnTocNk27dq1Izc3l/3791O9enUA9u7dC0CVKlWKLFYRERERERERESlaJX5VyrS0NPbt2wcYibB33nmHm266iYCAACpXrsz999/PqlWrePvtt2nSpAmnTp1i2bJlNGzYkB49emC1WmnRogXe3t689957WK1Whg8fjq+vL0uWLHHwqxMRERERERERkcJS4hNjv//+OzfddNMl+wcOHMisWbPIycnh9ddfZ/bs2Rw/fpzAwEBat27NhAkTaNCgAQAnTpxg5MiRLFmyBC8vL2677TbefvttAgICivrliIiIiIiIiIhIESnxiTEREREREREREZEbYXZ0ACIiIiIiIiIiIo6gxJiIiIiI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9MgjjwR0rn3R1zpJ0uLFi1VZWalt27apoqJC8+bN04IFC1ReXt7lnA8//LDS09P9OidfC0SNPv30U82YMUNjxozRvn37VFpaqiNHjig3NzdQ0+yzvtbp4sWLysrKksvl0q5du/TWW2+ppaVFd955p9rb27ucMxJ7yUmNwr2X9uzZo7y8PP373//W66+/rtbWVmVlZXV6Pf385z/X9u3bVVJSoj179ujTTz/VvHnzPNvdbrdmz56tlpYW7d27Vy+88IKKi4v1i1/8ost49fX1Wrx4saZPnx6Q+flKoOq0YcMG5efn65e//KWOHDmitWvXKi8vT9u3bw/ofHvDFzXqcN999yknJ+dLx2ttbdXChQt10003+Xwu6Iqc5ww5zztynjPkPO/Ied6R85wh5zkTVlnPQoAk27p1q+fflZWVJskOHz7sec7tdtuwYcPsueee6/E8kydPtvvuu8/z7/z8fLv++us77bNt2zYbNGiQNTQ0+G4CAdLbOg0ePNg2btzY6VwpKSldavnqq6/a+PHj7ciRIybJysvL/TIPf/JXjZ599llLTU01t9vt2f7ee++ZJDt27JifZuM/vanTjh07LCoqys6fP+/Zp76+3lwul73++uudzh+pveSkRv2tl86cOWOSbM+ePWZ2eb4xMTFWUlLi2ef99983SVZWVmZml/sjKirKamtrPfts2LDBkpKSrLm5udP5c3Jy7NFHH7U1a9bYpEmT/D8hP/FXnaZOnWoPPvhgp7FWrlxpN954o7+n5HO9qdGVvPXIww8/bIsWLbKioiJLTk729eXjS5DznCHneUfOc4ac5x05zxlynjPkPGdCOeuF5D3GmpubJUmDBg3yPBcVFaXY2Fj961//6vaYAwcO6ODBg/rBD37Q6TxXnkOS4uLi1NTUpAMHDvjhygPLaZ2mTZuml156SWfPnlV7e7tefPFFNTU16Xvf+55nn7q6Oi1dulSbNm1SfHx8wObgb76qUXNzswYOHKioqP9/ycTFxUlSjz0ZTpzUqbm5WS6XS7GxsZ59Bg0apKioqE41iOReclKj/tZL58+flySlpKRIuvxe3NraqhkzZnj2GT9+vEaOHKmysjJJUllZmb71rW8pLS3Ns092drYaGhp05MgRz3NFRUU6efKk1qxZE4ip4B7quQAAC15JREFU+JW/6tTT77m3335bra2tfp2Tr/Wm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",
      "text/plain": [
       "<Figure size 1500x600 with 4 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "dta.loc[:, 'indprod':'emp'].plot(subplots=True, layout=(2, 2), figsize=(15, 6));"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Stock and Watson (1991) report that for their datasets, they could not reject the null hypothesis of a unit root in each series (so the series are integrated), but they did not find strong evidence that the series were co-integrated.\n",
    "\n",
    "As a result, they suggest estimating the model using the first differences (of the logs) of the variables, demeaned and standardized."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-17T10:29:02.485386Z",
     "iopub.status.busy": "2023-10-17T10:29:02.485143Z",
     "iopub.status.idle": "2023-10-17T10:29:02.504042Z",
     "shell.execute_reply": "2023-10-17T10:29:02.503359Z"
    }
   },
   "outputs": [],
   "source": [
    "# Create log-differenced series\n",
    "dta['dln_indprod'] = (np.log(dta.indprod)).diff() * 100\n",
    "dta['dln_income'] = (np.log(dta.income)).diff() * 100\n",
    "dta['dln_sales'] = (np.log(dta.sales)).diff() * 100\n",
    "dta['dln_emp'] = (np.log(dta.emp)).diff() * 100\n",
    "\n",
    "# De-mean and standardize\n",
    "dta['std_indprod'] = (dta['dln_indprod'] - dta['dln_indprod'].mean()) / dta['dln_indprod'].std()\n",
    "dta['std_income'] = (dta['dln_income'] - dta['dln_income'].mean()) / dta['dln_income'].std()\n",
    "dta['std_sales'] = (dta['dln_sales'] - dta['dln_sales'].mean()) / dta['dln_sales'].std()\n",
    "dta['std_emp'] = (dta['dln_emp'] - dta['dln_emp'].mean()) / dta['dln_emp'].std()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Dynamic factors\n",
    "\n",
    "A general dynamic factor model is written as:\n",
    "\n",
    "$$\n",
    "\\begin{align}\n",
    "y_t & = \\Lambda f_t + B x_t + u_t \\\\\n",
    "f_t & = A_1 f_{t-1} + \\dots + A_p f_{t-p} + \\eta_t \\qquad \\eta_t \\sim N(0, I)\\\\\n",
    "u_t & = C_1 u_{t-1} + \\dots + C_q u_{t-q} + \\varepsilon_t \\qquad \\varepsilon_t \\sim N(0, \\Sigma)\n",
    "\\end{align}\n",
    "$$\n",
    "\n",
    "where $y_t$ are observed data, $f_t$ are the unobserved factors (evolving as a vector autoregression), $x_t$ are (optional) exogenous variables, and $u_t$ is the error, or \"idiosyncratic\", process ($u_t$ is also optionally allowed to be autocorrelated). The $\\Lambda$ matrix is often referred to as the matrix of \"factor loadings\". The variance of the factor error term is set to the identity matrix to ensure identification of the unobserved factors.\n",
    "\n",
    "This model can be cast into state space form, and the unobserved factor estimated via the Kalman filter. The likelihood can be evaluated as a byproduct of the filtering recursions, and maximum likelihood estimation used to estimate the parameters."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Model specification\n",
    "\n",
    "The specific dynamic factor model in this application has 1 unobserved factor which is assumed to follow an AR(2) process. The innovations $\\varepsilon_t$ are assumed to be independent (so that $\\Sigma$ is a diagonal matrix) and the error term associated with each equation, $u_{i,t}$ is assumed to follow an independent AR(2) process.\n",
    "\n",
    "Thus the specification considered here is:\n",
    "\n",
    "$$\n",
    "\\begin{align}\n",
    "y_{i,t} & = \\lambda_i f_t + u_{i,t} \\\\\n",
    "u_{i,t} & = c_{i,1} u_{1,t-1} + c_{i,2} u_{i,t-2} + \\varepsilon_{i,t} \\qquad & \\varepsilon_{i,t} \\sim N(0, \\sigma_i^2) \\\\\n",
    "f_t & = a_1 f_{t-1} + a_2 f_{t-2} + \\eta_t \\qquad & \\eta_t \\sim N(0, I)\\\\\n",
    "\\end{align}\n",
    "$$\n",
    "\n",
    "where $i$ is one of: `[indprod, income, sales, emp ]`.\n",
    "\n",
    "This model can be formulated using the `DynamicFactor` model built-in to statsmodels. In particular, we have the following specification:\n",
    "\n",
    "- `k_factors = 1` - (there is 1 unobserved factor)\n",
    "- `factor_order = 2` - (it follows an AR(2) process)\n",
    "- `error_var = False` - (the errors evolve as independent AR processes rather than jointly as a VAR - note that this is the default option, so it is not specified below)\n",
    "- `error_order = 2` - (the errors are autocorrelated of order 2: i.e. AR(2) processes)\n",
    "- `error_cov_type = 'diagonal'` - (the innovations are uncorrelated; this is again the default)\n",
    "\n",
    "Once the model is created, the parameters can be estimated via maximum likelihood; this is done using the `fit()` method.\n",
    "\n",
    "**Note**: recall that we have demeaned and standardized the data; this will be important in interpreting the results that follow.\n",
    "\n",
    "**Aside**: in their empirical example, Kim and Nelson (1999) actually consider a slightly different model in which the employment variable is allowed to also depend on lagged values of the factor - this model does not fit into the built-in `DynamicFactor` class, but can be accommodated by using a subclass to implement the required new parameters and restrictions - see Appendix A, below."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Parameter estimation\n",
    "\n",
    "Multivariate models can have a relatively large number of parameters, and it may be difficult to escape from local minima to find the maximized likelihood. In an attempt to mitigate this problem, I perform an initial maximization step (from the model-defined starting parameters) using the modified Powell method available in Scipy (see the minimize documentation for more information). The resulting parameters are then used as starting parameters in the standard LBFGS optimization method."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-17T10:29:02.507416Z",
     "iopub.status.busy": "2023-10-17T10:29:02.507172Z",
     "iopub.status.idle": "2023-10-17T10:29:41.751679Z",
     "shell.execute_reply": "2023-10-17T10:29:41.749963Z"
    }
   },
   "outputs": [],
   "source": [
    "# Get the endogenous data\n",
    "endog = dta.loc['1979-02-01':, 'std_indprod':'std_emp']\n",
    "\n",
    "# Create the model\n",
    "mod = sm.tsa.DynamicFactor(endog, k_factors=1, factor_order=2, error_order=2)\n",
    "initial_res = mod.fit(method='powell', disp=False)\n",
    "res = mod.fit(initial_res.params, disp=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Estimates\n",
    "\n",
    "Once the model has been estimated, there are two components that we can use for analysis or inference:\n",
    "\n",
    "- The estimated parameters\n",
    "- The estimated factor"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Parameters\n",
    "\n",
    "The estimated parameters can be helpful in understanding the implications of the model, although in models with a larger number of observed variables and / or unobserved factors they can be difficult to interpret.\n",
    "\n",
    "One reason for this difficulty is due to identification issues between the factor loadings and the unobserved factors. One easy-to-see identification issue is the sign of the loadings and the factors: an equivalent model to the one displayed below would result from reversing the signs of all factor loadings and the unobserved factor.\n",
    "\n",
    "Here, one of the easy-to-interpret implications in this model is the persistence of the unobserved factor: we find that exhibits substantial persistence."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-17T10:29:41.767614Z",
     "iopub.status.busy": "2023-10-17T10:29:41.767367Z",
     "iopub.status.idle": "2023-10-17T10:29:41.802557Z",
     "shell.execute_reply": "2023-10-17T10:29:41.801889Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                             Statespace Model Results                                            \n",
      "=================================================================================================================\n",
      "Dep. Variable:     ['std_indprod', 'std_income', 'std_sales', 'std_emp']   No. Observations:                  431\n",
      "Model:                                 DynamicFactor(factors=1, order=2)   Log Likelihood               -1434.087\n",
      "                                                          + AR(2) errors   AIC                           2904.174\n",
      "Date:                                                   Tue, 17 Oct 2023   BIC                           2977.364\n",
      "Time:                                                           10:29:41   HQIC                          2933.072\n",
      "Sample:                                                       02-01-1979                                         \n",
      "                                                            - 12-01-2014                                         \n",
      "Covariance Type:                                                     opg                                         \n",
      "====================================================================================================\n",
      "                                       coef    std err          z      P>|z|      [0.025      0.975]\n",
      "----------------------------------------------------------------------------------------------------\n",
      "loading.f1.std_indprod              -1.0149      0.021    -47.449      0.000      -1.057      -0.973\n",
      "loading.f1.std_income               -0.3019      0.011    -28.057      0.000      -0.323      -0.281\n",
      "loading.f1.std_sales                -0.5334      0.021    -25.040      0.000      -0.575      -0.492\n",
      "loading.f1.std_emp                  -0.3075      0.012    -25.671      0.000      -0.331      -0.284\n",
      "sigma2.std_indprod                7.648e-07    2.4e-06      0.319      0.750   -3.94e-06    5.47e-06\n",
      "sigma2.std_income                    0.8759      0.016     54.132      0.000       0.844       0.908\n",
      "sigma2.std_sales                     0.5783      0.025     22.821      0.000       0.529       0.628\n",
      "sigma2.std_emp                       0.3712      0.008     46.230      0.000       0.356       0.387\n",
      "L1.f1.f1                             0.2570      0.017     14.860      0.000       0.223       0.291\n",
      "L2.f1.f1                             0.2574      0.012     20.894      0.000       0.233       0.282\n",
      "L1.e(std_indprod).e(std_indprod) -2.224e-07   9.88e-10   -225.127      0.000   -2.24e-07    -2.2e-07\n",
      "L2.e(std_indprod).e(std_indprod)     1.0000   4.38e-08   2.28e+07      0.000       1.000       1.000\n",
      "L1.e(std_income).e(std_income)      -0.1828      0.018    -10.116      0.000      -0.218      -0.147\n",
      "L2.e(std_income).e(std_income)      -0.0931      0.010     -8.901      0.000      -0.114      -0.073\n",
      "L1.e(std_sales).e(std_sales)        -0.4767      0.008    -58.375      0.000      -0.493      -0.461\n",
      "L2.e(std_sales).e(std_sales)        -0.3398      0.012    -28.847      0.000      -0.363      -0.317\n",
      "L1.e(std_emp).e(std_emp)             0.3350      0.011     30.856      0.000       0.314       0.356\n",
      "L2.e(std_emp).e(std_emp)             0.4723      0.021     21.976      0.000       0.430       0.514\n",
      "========================================================================================================\n",
      "Ljung-Box (L1) (Q):     18.65, 0.31, 1.82, 0.06   Jarque-Bera (JB):   2745489.17, 11878.30, 26.43, 44.79\n",
      "Prob(Q):                 0.00, 0.58, 0.18, 0.80   Prob(JB):                       0.00, 0.00, 0.00, 0.00\n",
      "Heteroskedasticity (H):  0.00, 4.71, 0.66, 1.75   Skew:                       -19.10, -1.24, 0.08, -0.11\n",
      "Prob(H) (two-sided):     0.00, 0.00, 0.01, 0.00   Kurtosis:                    392.13, 28.60, 4.20, 4.56\n",
      "========================================================================================================\n",
      "\n",
      "Warnings:\n",
      "[1] Covariance matrix calculated using the outer product of gradients (complex-step).\n",
      "[2] Covariance matrix is singular or near-singular, with condition number 3.18e+17. Standard errors may be unstable.\n"
     ]
    }
   ],
   "source": [
    "print(res.summary(separate_params=False))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Estimated factors\n",
    "\n",
    "While it can be useful to plot the unobserved factors, it is less useful here than one might think for two reasons:\n",
    "\n",
    "1. The sign-related identification issue described above.\n",
    "2. Since the data was differenced, the estimated factor explains the variation in the differenced data, not the original data.\n",
    "\n",
    "It is for these reasons that the coincident index is created (see below).\n",
    "\n",
    "With these reservations, the unobserved factor is plotted below, along with the NBER indicators for US recessions. It appears that the factor is successful at picking up some degree of business cycle activity."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-17T10:29:41.805538Z",
     "iopub.status.busy": "2023-10-17T10:29:41.805296Z",
     "iopub.status.idle": "2023-10-17T10:29:42.298931Z",
     "shell.execute_reply": "2023-10-17T10:29:42.298136Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1300x300 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(figsize=(13,3))\n",
    "\n",
    "# Plot the factor\n",
    "dates = endog.index._mpl_repr()\n",
    "ax.plot(dates, res.factors.filtered[0], label='Factor')\n",
    "ax.legend()\n",
    "\n",
    "# Retrieve and also plot the NBER recession indicators\n",
    "rec = DataReader('USREC', 'fred', start=start, end=end)\n",
    "ylim = ax.get_ylim()\n",
    "ax.fill_between(dates[:-3], ylim[0], ylim[1], rec.values[:-4,0], facecolor='k', alpha=0.1);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Post-estimation\n",
    "\n",
    "Although here we will be able to interpret the results of the model by constructing the coincident index, there is a useful and generic approach for getting a sense for what is being captured by the estimated factor. By taking the estimated factors as given, regressing them (and a constant) each (one at a time) on each of the observed variables, and recording the coefficients of determination ($R^2$ values), we can get a sense of the variables for which each factor explains a substantial portion of the variance and the variables for which it does not.\n",
    "\n",
    "In models with more variables and more factors, this can sometimes lend interpretation to the factors (for example sometimes one factor will load primarily on real variables and another on nominal variables).\n",
    "\n",
    "In this model, with only four endogenous variables and one factor, it is easy to digest a simple table of the $R^2$ values, but in larger models it is not. For this reason, a bar plot is often employed; from the plot we can easily see that the factor explains most of the variation in industrial production index and a large portion of the variation in sales and employment, it is less helpful in explaining income."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-17T10:29:42.303983Z",
     "iopub.status.busy": "2023-10-17T10:29:42.302584Z",
     "iopub.status.idle": "2023-10-17T10:29:42.553246Z",
     "shell.execute_reply": "2023-10-17T10:29:42.552611Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x200 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "res.plot_coefficients_of_determination(figsize=(8,2));"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Coincident Index\n",
    "\n",
    "As described above, the goal of this model was to create an interpretable series which could be used to understand the current status of the macroeconomy. This is what the coincident index is designed to do. It is constructed below. For readers interested in an explanation of the construction, see Kim and Nelson (1999) or Stock and Watson (1991).\n",
    "\n",
    "In essence, what is done is to reconstruct the mean of the (differenced) factor. We will compare it to the coincident index on published by the Federal Reserve Bank of Philadelphia (USPHCI on FRED)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-17T10:29:42.557031Z",
     "iopub.status.busy": "2023-10-17T10:29:42.556542Z",
     "iopub.status.idle": "2023-10-17T10:29:43.038447Z",
     "shell.execute_reply": "2023-10-17T10:29:43.037670Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1300x300 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "usphci = DataReader('USPHCI', 'fred', start='1979-01-01', end='2014-12-01')['USPHCI']\n",
    "usphci.plot(figsize=(13,3));"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-17T10:29:43.042782Z",
     "iopub.status.busy": "2023-10-17T10:29:43.042528Z",
     "iopub.status.idle": "2023-10-17T10:29:43.050989Z",
     "shell.execute_reply": "2023-10-17T10:29:43.050287Z"
    }
   },
   "outputs": [],
   "source": [
    "dusphci = usphci.diff()[1:].values\n",
    "def compute_coincident_index(mod, res):\n",
    "    # Estimate W(1)\n",
    "    spec = res.specification\n",
    "    design = mod.ssm['design']\n",
    "    transition = mod.ssm['transition']\n",
    "    ss_kalman_gain = res.filter_results.kalman_gain[:,:,-1]\n",
    "    k_states = ss_kalman_gain.shape[0]\n",
    "\n",
    "    W1 = np.linalg.inv(np.eye(k_states) - np.dot(\n",
    "        np.eye(k_states) - np.dot(ss_kalman_gain, design),\n",
    "        transition\n",
    "    )).dot(ss_kalman_gain)[0]\n",
    "\n",
    "    # Compute the factor mean vector\n",
    "    factor_mean = np.dot(W1, dta.loc['1972-02-01':, 'dln_indprod':'dln_emp'].mean())\n",
    "    \n",
    "    # Normalize the factors\n",
    "    factor = res.factors.filtered[0]\n",
    "    factor *= np.std(usphci.diff()[1:]) / np.std(factor)\n",
    "\n",
    "    # Compute the coincident index\n",
    "    coincident_index = np.zeros(mod.nobs+1)\n",
    "    # The initial value is arbitrary; here it is set to\n",
    "    # facilitate comparison\n",
    "    coincident_index[0] = usphci.iloc[0] * factor_mean / dusphci.mean()\n",
    "    for t in range(0, mod.nobs):\n",
    "        coincident_index[t+1] = coincident_index[t] + factor[t] + factor_mean\n",
    "    \n",
    "    # Attach dates\n",
    "    coincident_index = pd.Series(coincident_index, index=dta.index).iloc[1:]\n",
    "    \n",
    "    # Normalize to use the same base year as USPHCI\n",
    "    coincident_index *= (usphci.loc['1992-07-01'] / coincident_index.loc['1992-07-01'])\n",
    "    \n",
    "    return coincident_index"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Below we plot the calculated coincident index along with the US recessions and the comparison coincident index USPHCI."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-17T10:29:43.054237Z",
     "iopub.status.busy": "2023-10-17T10:29:43.054006Z",
     "iopub.status.idle": "2023-10-17T10:29:43.498189Z",
     "shell.execute_reply": "2023-10-17T10:29:43.497509Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1300x300 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(figsize=(13,3))\n",
    "\n",
    "# Compute the index\n",
    "coincident_index = compute_coincident_index(mod, res)\n",
    "\n",
    "# Plot the factor\n",
    "dates = endog.index._mpl_repr()\n",
    "ax.plot(dates, coincident_index, label='Coincident index')\n",
    "ax.plot(usphci.index._mpl_repr(), usphci, label='USPHCI')\n",
    "ax.legend(loc='lower right')\n",
    "\n",
    "# Retrieve and also plot the NBER recession indicators\n",
    "ylim = ax.get_ylim()\n",
    "ax.fill_between(dates[:-3], ylim[0], ylim[1], rec.values[:-4,0], facecolor='k', alpha=0.1);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Appendix 1: Extending the dynamic factor model\n",
    "\n",
    "Recall that the previous specification was described by:\n",
    "\n",
    "$$\n",
    "\\begin{align}\n",
    "y_{i,t} & = \\lambda_i f_t + u_{i,t} \\\\\n",
    "u_{i,t} & = c_{i,1} u_{1,t-1} + c_{i,2} u_{i,t-2} + \\varepsilon_{i,t} \\qquad & \\varepsilon_{i,t} \\sim N(0, \\sigma_i^2) \\\\\n",
    "f_t & = a_1 f_{t-1} + a_2 f_{t-2} + \\eta_t \\qquad & \\eta_t \\sim N(0, I)\\\\\n",
    "\\end{align}\n",
    "$$\n",
    "\n",
    "Written in state space form, the previous specification of the model had the following observation equation:\n",
    "\n",
    "$$\n",
    "\\begin{bmatrix}\n",
    "y_{\\text{indprod}, t} \\\\\n",
    "y_{\\text{income}, t} \\\\\n",
    "y_{\\text{sales}, t} \\\\\n",
    "y_{\\text{emp}, t} \\\\\n",
    "\\end{bmatrix} = \\begin{bmatrix}\n",
    "\\lambda_\\text{indprod} & 0 & 1 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\\\\n",
    "\\lambda_\\text{income}  & 0 & 0 & 1 & 0 & 0 & 0 & 0 & 0 & 0 \\\\\n",
    "\\lambda_\\text{sales}   & 0 & 0 & 0 & 1 & 0 & 0 & 0 & 0 & 0 \\\\\n",
    "\\lambda_\\text{emp}     & 0 & 0 & 0 & 0 & 1 & 0 & 0 & 0 & 0 \\\\\n",
    "\\end{bmatrix}\n",
    "\\begin{bmatrix}\n",
    "f_t \\\\\n",
    "f_{t-1} \\\\\n",
    "u_{\\text{indprod}, t} \\\\\n",
    "u_{\\text{income}, t} \\\\\n",
    "u_{\\text{sales}, t} \\\\\n",
    "u_{\\text{emp}, t} \\\\\n",
    "u_{\\text{indprod}, t-1} \\\\\n",
    "u_{\\text{income}, t-1} \\\\\n",
    "u_{\\text{sales}, t-1} \\\\\n",
    "u_{\\text{emp}, t-1} \\\\\n",
    "\\end{bmatrix}\n",
    "$$\n",
    "\n",
    "and transition equation:\n",
    "\n",
    "$$\n",
    "\\begin{bmatrix}\n",
    "f_t \\\\\n",
    "f_{t-1} \\\\\n",
    "u_{\\text{indprod}, t} \\\\\n",
    "u_{\\text{income}, t} \\\\\n",
    "u_{\\text{sales}, t} \\\\\n",
    "u_{\\text{emp}, t} \\\\\n",
    "u_{\\text{indprod}, t-1} \\\\\n",
    "u_{\\text{income}, t-1} \\\\\n",
    "u_{\\text{sales}, t-1} \\\\\n",
    "u_{\\text{emp}, t-1} \\\\\n",
    "\\end{bmatrix} = \\begin{bmatrix}\n",
    "a_1 & a_2 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\\\\n",
    "1   & 0   & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\\\\n",
    "0   & 0   & c_{\\text{indprod}, 1} & 0 & 0 & 0 & c_{\\text{indprod}, 2} & 0 & 0 & 0 \\\\\n",
    "0   & 0   & 0 & c_{\\text{income}, 1} & 0 & 0 & 0 & c_{\\text{income}, 2} & 0 & 0 \\\\\n",
    "0   & 0   & 0 & 0 & c_{\\text{sales}, 1} & 0 & 0 & 0 & c_{\\text{sales}, 2} & 0 \\\\\n",
    "0   & 0   & 0 & 0 & 0 & c_{\\text{emp}, 1} & 0 & 0 & 0 & c_{\\text{emp}, 2} \\\\\n",
    "0   & 0   & 1 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\\\\n",
    "0   & 0   & 0 & 1 & 0 & 0 & 0 & 0 & 0 & 0 \\\\\n",
    "0   & 0   & 0 & 0 & 1 & 0 & 0 & 0 & 0 & 0 \\\\\n",
    "0   & 0   & 0 & 0 & 0 & 1 & 0 & 0 & 0 & 0 \\\\\n",
    "\\end{bmatrix} \n",
    "\\begin{bmatrix}\n",
    "f_{t-1} \\\\\n",
    "f_{t-2} \\\\\n",
    "u_{\\text{indprod}, t-1} \\\\\n",
    "u_{\\text{income}, t-1} \\\\\n",
    "u_{\\text{sales}, t-1} \\\\\n",
    "u_{\\text{emp}, t-1} \\\\\n",
    "u_{\\text{indprod}, t-2} \\\\\n",
    "u_{\\text{income}, t-2} \\\\\n",
    "u_{\\text{sales}, t-2} \\\\\n",
    "u_{\\text{emp}, t-2} \\\\\n",
    "\\end{bmatrix}\n",
    "+ R \\begin{bmatrix}\n",
    "\\eta_t \\\\\n",
    "\\varepsilon_{t}\n",
    "\\end{bmatrix}\n",
    "$$\n",
    "\n",
    "the `DynamicFactor` model handles setting up the state space representation and, in the `DynamicFactor.update` method, it fills in the fitted parameter values into the appropriate locations."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The extended specification is the same as in the previous example, except that we also want to allow employment to depend on lagged values of the factor. This creates a change to the $y_{\\text{emp},t}$ equation. Now we have:\n",
    "\n",
    "$$\n",
    "\\begin{align}\n",
    "y_{i,t} & = \\lambda_i f_t + u_{i,t} \\qquad & i \\in \\{\\text{indprod}, \\text{income}, \\text{sales} \\}\\\\\n",
    "y_{i,t} & = \\lambda_{i,0} f_t + \\lambda_{i,1} f_{t-1} + \\lambda_{i,2} f_{t-2} + \\lambda_{i,2} f_{t-3} + u_{i,t} \\qquad & i = \\text{emp} \\\\\n",
    "u_{i,t} & = c_{i,1} u_{i,t-1} + c_{i,2} u_{i,t-2} + \\varepsilon_{i,t} \\qquad & \\varepsilon_{i,t} \\sim N(0, \\sigma_i^2) \\\\\n",
    "f_t & = a_1 f_{t-1} + a_2 f_{t-2} + \\eta_t \\qquad & \\eta_t \\sim N(0, I)\\\\\n",
    "\\end{align}\n",
    "$$\n",
    "\n",
    "Now, the corresponding observation equation should look like the following:\n",
    "\n",
    "$$\n",
    "\\begin{bmatrix}\n",
    "y_{\\text{indprod}, t} \\\\\n",
    "y_{\\text{income}, t} \\\\\n",
    "y_{\\text{sales}, t} \\\\\n",
    "y_{\\text{emp}, t} \\\\\n",
    "\\end{bmatrix} = \\begin{bmatrix}\n",
    "\\lambda_\\text{indprod} & 0 & 0 & 0 & 1 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\\\\n",
    "\\lambda_\\text{income}  & 0 & 0 & 0 & 0 & 1 & 0 & 0 & 0 & 0 & 0 & 0 \\\\\n",
    "\\lambda_\\text{sales}   & 0 & 0 & 0 & 0 & 0 & 1 & 0 & 0 & 0 & 0 & 0 \\\\\n",
    "\\lambda_\\text{emp,1}   & \\lambda_\\text{emp,2} & \\lambda_\\text{emp,3} & \\lambda_\\text{emp,4} & 0 & 0 & 0 & 1 & 0 & 0 & 0 & 0 \\\\\n",
    "\\end{bmatrix}\n",
    "\\begin{bmatrix}\n",
    "f_t \\\\\n",
    "f_{t-1} \\\\\n",
    "f_{t-2} \\\\\n",
    "f_{t-3} \\\\\n",
    "u_{\\text{indprod}, t} \\\\\n",
    "u_{\\text{income}, t} \\\\\n",
    "u_{\\text{sales}, t} \\\\\n",
    "u_{\\text{emp}, t} \\\\\n",
    "u_{\\text{indprod}, t-1} \\\\\n",
    "u_{\\text{income}, t-1} \\\\\n",
    "u_{\\text{sales}, t-1} \\\\\n",
    "u_{\\text{emp}, t-1} \\\\\n",
    "\\end{bmatrix}\n",
    "$$\n",
    "\n",
    "Notice that we have introduced two new state variables, $f_{t-2}$ and $f_{t-3}$, which means we need to update the  transition equation:\n",
    "\n",
    "$$\n",
    "\\begin{bmatrix}\n",
    "f_t \\\\\n",
    "f_{t-1} \\\\\n",
    "f_{t-2} \\\\\n",
    "f_{t-3} \\\\\n",
    "u_{\\text{indprod}, t} \\\\\n",
    "u_{\\text{income}, t} \\\\\n",
    "u_{\\text{sales}, t} \\\\\n",
    "u_{\\text{emp}, t} \\\\\n",
    "u_{\\text{indprod}, t-1} \\\\\n",
    "u_{\\text{income}, t-1} \\\\\n",
    "u_{\\text{sales}, t-1} \\\\\n",
    "u_{\\text{emp}, t-1} \\\\\n",
    "\\end{bmatrix} = \\begin{bmatrix}\n",
    "a_1 & a_2 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\\\\n",
    "1   & 0   & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\\\\n",
    "0   & 1   & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\\\\n",
    "0   & 0   & 1 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\\\\n",
    "0   & 0   & 0 & 0 & c_{\\text{indprod}, 1} & 0 & 0 & 0 & c_{\\text{indprod}, 2} & 0 & 0 & 0 \\\\\n",
    "0   & 0   & 0 & 0 & 0 & c_{\\text{income}, 1} & 0 & 0 & 0 & c_{\\text{income}, 2} & 0 & 0 \\\\\n",
    "0   & 0   & 0 & 0 & 0 & 0 & c_{\\text{sales}, 1} & 0 & 0 & 0 & c_{\\text{sales}, 2} & 0 \\\\\n",
    "0   & 0   & 0 & 0 & 0 & 0 & 0 & c_{\\text{emp}, 1} & 0 & 0 & 0 & c_{\\text{emp}, 2} \\\\\n",
    "0   & 0   & 0 & 0 & 1 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\\\\n",
    "0   & 0   & 0 & 0 & 0 & 1 & 0 & 0 & 0 & 0 & 0 & 0 \\\\\n",
    "0   & 0   & 0 & 0 & 0 & 0 & 1 & 0 & 0 & 0 & 0 & 0 \\\\\n",
    "0   & 0   & 0 & 0 & 0 & 0 & 0 & 1 & 0 & 0 & 0 & 0 \\\\\n",
    "\\end{bmatrix} \n",
    "\\begin{bmatrix}\n",
    "f_{t-1} \\\\\n",
    "f_{t-2} \\\\\n",
    "f_{t-3} \\\\\n",
    "f_{t-4} \\\\\n",
    "u_{\\text{indprod}, t-1} \\\\\n",
    "u_{\\text{income}, t-1} \\\\\n",
    "u_{\\text{sales}, t-1} \\\\\n",
    "u_{\\text{emp}, t-1} \\\\\n",
    "u_{\\text{indprod}, t-2} \\\\\n",
    "u_{\\text{income}, t-2} \\\\\n",
    "u_{\\text{sales}, t-2} \\\\\n",
    "u_{\\text{emp}, t-2} \\\\\n",
    "\\end{bmatrix}\n",
    "+ R \\begin{bmatrix}\n",
    "\\eta_t \\\\\n",
    "\\varepsilon_{t}\n",
    "\\end{bmatrix}\n",
    "$$\n",
    "\n",
    "This model cannot be handled out-of-the-box by the `DynamicFactor` class, but it can be handled by creating a subclass when alters the state space representation in the appropriate way."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "First, notice that if we had set `factor_order = 4`, we would almost have what we wanted. In that case, the last line of the observation equation would be:\n",
    "\n",
    "$$\n",
    "\\begin{bmatrix}\n",
    "\\vdots \\\\\n",
    "y_{\\text{emp}, t} \\\\\n",
    "\\end{bmatrix} = \\begin{bmatrix}\n",
    "\\vdots &  &  &  &  &  &  &  &  &  &  & \\vdots \\\\\n",
    "\\lambda_\\text{emp,1}   & 0 & 0 & 0 & 0 & 0 & 0 & 1 & 0 & 0 & 0 & 0 \\\\\n",
    "\\end{bmatrix}\n",
    "\\begin{bmatrix}\n",
    "f_t \\\\\n",
    "f_{t-1} \\\\\n",
    "f_{t-2} \\\\\n",
    "f_{t-3} \\\\\n",
    "\\vdots\n",
    "\\end{bmatrix}\n",
    "$$\n",
    "\n",
    "\n",
    "and the first line of the transition equation would be:\n",
    "\n",
    "$$\n",
    "\\begin{bmatrix}\n",
    "f_t \\\\\n",
    "\\vdots\n",
    "\\end{bmatrix} = \\begin{bmatrix}\n",
    "a_1 & a_2 & a_3 & a_4 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\\\\n",
    "\\vdots &  &  &  &  &  &  &  &  &  &  & \\vdots \\\\\n",
    "\\end{bmatrix} \n",
    "\\begin{bmatrix}\n",
    "f_{t-1} \\\\\n",
    "f_{t-2} \\\\\n",
    "f_{t-3} \\\\\n",
    "f_{t-4} \\\\\n",
    "\\vdots\n",
    "\\end{bmatrix}\n",
    "+ R \\begin{bmatrix}\n",
    "\\eta_t \\\\\n",
    "\\varepsilon_{t}\n",
    "\\end{bmatrix}\n",
    "$$\n",
    "\n",
    "Relative to what we want, we have the following differences:\n",
    "\n",
    "1. In the above situation, the $\\lambda_{\\text{emp}, j}$ are forced to be zero for $j > 0$, and we want them to be estimated as parameters.\n",
    "2. We only want the factor to transition according to an AR(2), but under the above situation it is an AR(4).\n",
    "\n",
    "Our strategy will be to subclass `DynamicFactor`, and let it do most of the work (setting up the state space representation, etc.) where it assumes that `factor_order = 4`. The only things we will actually do in the subclass will be to fix those two issues.\n",
    "\n",
    "First, here is the full code of the subclass; it is discussed below. It is important to note at the outset that none of the methods defined below could have been omitted. In fact, the methods `__init__`, `start_params`, `param_names`, `transform_params`, `untransform_params`, and `update` form the core of all state space models in statsmodels, not just the `DynamicFactor` class."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-17T10:29:43.502810Z",
     "iopub.status.busy": "2023-10-17T10:29:43.501720Z",
     "iopub.status.idle": "2023-10-17T10:29:43.514120Z",
     "shell.execute_reply": "2023-10-17T10:29:43.513521Z"
    }
   },
   "outputs": [],
   "source": [
    "from statsmodels.tsa.statespace import tools\n",
    "class ExtendedDFM(sm.tsa.DynamicFactor):\n",
    "    def __init__(self, endog, **kwargs):\n",
    "            # Setup the model as if we had a factor order of 4\n",
    "            super(ExtendedDFM, self).__init__(\n",
    "                endog, k_factors=1, factor_order=4, error_order=2,\n",
    "                **kwargs)\n",
    "\n",
    "            # Note: `self.parameters` is an ordered dict with the\n",
    "            # keys corresponding to parameter types, and the values\n",
    "            # the number of parameters of that type.\n",
    "            # Add the new parameters\n",
    "            self.parameters['new_loadings'] = 3\n",
    "\n",
    "            # Cache a slice for the location of the 4 factor AR\n",
    "            # parameters (a_1, ..., a_4) in the full parameter vector\n",
    "            offset = (self.parameters['factor_loadings'] +\n",
    "                      self.parameters['exog'] +\n",
    "                      self.parameters['error_cov'])\n",
    "            self._params_factor_ar = np.s_[offset:offset+2]\n",
    "            self._params_factor_zero = np.s_[offset+2:offset+4]\n",
    "\n",
    "    @property\n",
    "    def start_params(self):\n",
    "        # Add three new loading parameters to the end of the parameter\n",
    "        # vector, initialized to zeros (for simplicity; they could\n",
    "        # be initialized any way you like)\n",
    "        return np.r_[super(ExtendedDFM, self).start_params, 0, 0, 0]\n",
    "    \n",
    "    @property\n",
    "    def param_names(self):\n",
    "        # Add the corresponding names for the new loading parameters\n",
    "        #  (the name can be anything you like)\n",
    "        return super(ExtendedDFM, self).param_names + [\n",
    "            'loading.L%d.f1.%s' % (i, self.endog_names[3]) for i in range(1,4)]\n",
    "\n",
    "    def transform_params(self, unconstrained):\n",
    "            # Perform the typical DFM transformation (w/o the new parameters)\n",
    "            constrained = super(ExtendedDFM, self).transform_params(\n",
    "            unconstrained[:-3])\n",
    "\n",
    "            # Redo the factor AR constraint, since we only want an AR(2),\n",
    "            # and the previous constraint was for an AR(4)\n",
    "            ar_params = unconstrained[self._params_factor_ar]\n",
    "            constrained[self._params_factor_ar] = (\n",
    "                tools.constrain_stationary_univariate(ar_params))\n",
    "\n",
    "            # Return all the parameters\n",
    "            return np.r_[constrained, unconstrained[-3:]]\n",
    "\n",
    "    def untransform_params(self, constrained):\n",
    "            # Perform the typical DFM untransformation (w/o the new parameters)\n",
    "            unconstrained = super(ExtendedDFM, self).untransform_params(\n",
    "                constrained[:-3])\n",
    "\n",
    "            # Redo the factor AR unconstrained, since we only want an AR(2),\n",
    "            # and the previous unconstrained was for an AR(4)\n",
    "            ar_params = constrained[self._params_factor_ar]\n",
    "            unconstrained[self._params_factor_ar] = (\n",
    "                tools.unconstrain_stationary_univariate(ar_params))\n",
    "\n",
    "            # Return all the parameters\n",
    "            return np.r_[unconstrained, constrained[-3:]]\n",
    "\n",
    "    def update(self, params, transformed=True, **kwargs):\n",
    "        # Peform the transformation, if required\n",
    "        if not transformed:\n",
    "            params = self.transform_params(params)\n",
    "        params[self._params_factor_zero] = 0\n",
    "        \n",
    "        # Now perform the usual DFM update, but exclude our new parameters\n",
    "        super(ExtendedDFM, self).update(params[:-3], transformed=True, **kwargs)\n",
    "\n",
    "        # Finally, set our new parameters in the design matrix\n",
    "        self.ssm['design', 3, 1:4] = params[-3:]\n",
    "        "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "So what did we just do?\n",
    "\n",
    "**`__init__`**\n",
    "\n",
    "The important step here was specifying the base dynamic factor model which we were operating with. In particular, as described above, we initialize with `factor_order=4`, even though we will only end up with an AR(2) model for the factor. We also performed some general setup-related tasks.\n",
    "\n",
    "**`start_params`**\n",
    "\n",
    "`start_params` are used as initial values in the optimizer. Since we are adding three new parameters, we need to pass those in. If we had not done this, the optimizer would use the default starting values, which would be three elements short.\n",
    "\n",
    "**`param_names`**\n",
    "\n",
    "`param_names` are used in a variety of places, but especially in the results class. Below we get a full result summary, which is only possible when all the parameters have associated names.\n",
    "\n",
    "**`transform_params`** and **`untransform_params`**\n",
    "\n",
    "The optimizer selects possibly parameter values in an unconstrained way. That's not usually desired (since variances cannot be negative, for example), and `transform_params` is used to transform the unconstrained values used by the optimizer to constrained values appropriate to the model. Variances terms are typically squared (to force them to be positive), and AR lag coefficients are often constrained to lead to a stationary model. `untransform_params` is used for the reverse operation (and is important because starting parameters are usually specified in terms of values appropriate to the model, and we need to convert them to parameters appropriate to the optimizer before we can begin the optimization routine).\n",
    "\n",
    "Even though we do not need to transform or untransform our new parameters (the loadings can in theory take on any values), we still need to modify this function for two reasons:\n",
    "\n",
    "1. The version in the `DynamicFactor` class is expecting 3 fewer parameters than we have now. At a minimum, we need to handle the three new parameters.\n",
    "2. The version in the `DynamicFactor` class constrains the factor lag coefficients to be stationary as though it was an AR(4) model. Since we actually have an AR(2) model, we need to re-do the constraint. We also set the last two autoregressive coefficients to be zero here.\n",
    "\n",
    "**`update`**\n",
    "\n",
    "The most important reason we need to specify a new `update` method is because we have three new parameters that we need to place into the state space formulation. In particular we let the parent `DynamicFactor.update` class handle placing all the parameters except the three new ones in to the state space representation, and then we put the last three in manually."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-17T10:29:43.518833Z",
     "iopub.status.busy": "2023-10-17T10:29:43.517475Z",
     "iopub.status.idle": "2023-10-17T10:29:53.570281Z",
     "shell.execute_reply": "2023-10-17T10:29:53.569647Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Optimization terminated successfully.\n",
      "         Current function value: 4.731939\n",
      "         Iterations: 660\n",
      "         Function evaluations: 1065\n",
      "                                             Statespace Model Results                                            \n",
      "=================================================================================================================\n",
      "Dep. Variable:     ['std_indprod', 'std_income', 'std_sales', 'std_emp']   No. Observations:                  431\n",
      "Model:                                 DynamicFactor(factors=1, order=4)   Log Likelihood               -2039.466\n",
      "                                                          + AR(2) errors   AIC                           4124.932\n",
      "Date:                                                   Tue, 17 Oct 2023   BIC                           4218.452\n",
      "Time:                                                           10:29:53   HQIC                          4161.857\n",
      "Sample:                                                       02-01-1979                                         \n",
      "                                                            - 12-01-2014                                         \n",
      "Covariance Type:                                                     opg                                         \n",
      "====================================================================================================\n",
      "                                       coef    std err          z      P>|z|      [0.025      0.975]\n",
      "----------------------------------------------------------------------------------------------------\n",
      "loading.f1.std_indprod              -0.9067      0.021    -43.974      0.000      -0.947      -0.866\n",
      "loading.f1.std_income               -0.2494      0.045     -5.589      0.000      -0.337      -0.162\n",
      "loading.f1.std_sales                -0.5049      0.026    -19.087      0.000      -0.557      -0.453\n",
      "loading.f1.std_emp                  -0.3235      0.030    -10.658      0.000      -0.383      -0.264\n",
      "sigma2.std_indprod                9.106e-12      0.006   1.64e-09      1.000      -0.011       0.011\n",
      "sigma2.std_income                    0.9052      0.029     30.762      0.000       0.848       0.963\n",
      "sigma2.std_sales                     0.5894      0.034     17.260      0.000       0.523       0.656\n",
      "sigma2.std_emp                       0.3441      0.014     24.737      0.000       0.317       0.371\n",
      "L1.f1.f1                             0.2274      0.041      5.584      0.000       0.148       0.307\n",
      "L2.f1.f1                             0.2861      0.047      6.084      0.000       0.194       0.378\n",
      "L3.f1.f1                                  0   3.67e-11          0      1.000    -7.2e-11     7.2e-11\n",
      "L4.f1.f1                                  0   3.67e-11          0      1.000    -7.2e-11     7.2e-11\n",
      "L1.e(std_indprod).e(std_indprod)    -0.3277   4.24e-11  -7.72e+09      0.000      -0.328      -0.328\n",
      "L2.e(std_indprod).e(std_indprod)     0.5763   1.74e-11    3.3e+10      0.000       0.576       0.576\n",
      "L1.e(std_income).e(std_income)      -0.1848      0.022     -8.416      0.000      -0.228      -0.142\n",
      "L2.e(std_income).e(std_income)      -0.0896      0.047     -1.899      0.058      -0.182       0.003\n",
      "L1.e(std_sales).e(std_sales)        -0.4270      0.043     -9.964      0.000      -0.511      -0.343\n",
      "L2.e(std_sales).e(std_sales)        -0.1947      0.049     -3.941      0.000      -0.292      -0.098\n",
      "L1.e(std_emp).e(std_emp)             0.2392      0.034      7.000      0.000       0.172       0.306\n",
      "L2.e(std_emp).e(std_emp)             0.4488      0.035     13.006      0.000       0.381       0.516\n",
      "loading.L1.f1.std_emp               -0.1246      0.031     -3.990      0.000      -0.186      -0.063\n",
      "loading.L2.f1.std_emp               -0.1061      0.028     -3.755      0.000      -0.161      -0.051\n",
      "loading.L3.f1.std_emp               -0.1190      0.030     -3.999      0.000      -0.177      -0.061\n",
      "====================================================================================================\n",
      "Ljung-Box (L1) (Q):     0.43, 0.03, 0.04, 6.29   Jarque-Bera (JB):   250.38, 9954.42, 20.23, 4653.64\n",
      "Prob(Q):                0.51, 0.85, 0.84, 0.01   Prob(JB):                    0.00, 0.00, 0.00, 0.00\n",
      "Heteroskedasticity (H): 0.77, 4.66, 0.47, 0.38   Skew:                       0.13, -1.00, 0.21, 0.81\n",
      "Prob(H) (two-sided):    0.11, 0.00, 0.00, 0.00   Kurtosis:                  6.72, 26.46, 3.97, 19.02\n",
      "====================================================================================================\n",
      "\n",
      "Warnings:\n",
      "[1] Covariance matrix calculated using the outer product of gradients (complex-step).\n",
      "[2] Covariance matrix is singular or near-singular, with condition number 1.09e+17. Standard errors may be unstable.\n"
     ]
    }
   ],
   "source": [
    "# Create the model\n",
    "extended_mod = ExtendedDFM(endog)\n",
    "initial_extended_res = extended_mod.fit(maxiter=1000, disp=False)\n",
    "extended_res = extended_mod.fit(initial_extended_res.params, method='nm', maxiter=1000)\n",
    "print(extended_res.summary(separate_params=False))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Although this model increases the likelihood, it is not preferred by the AIC and BIC measures which penalize the additional three parameters.\n",
    "\n",
    "Furthermore, the qualitative results are unchanged, as we can see from the updated $R^2$ chart and the new coincident index, both of which are practically identical to the previous results."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-17T10:29:53.573899Z",
     "iopub.status.busy": "2023-10-17T10:29:53.573493Z",
     "iopub.status.idle": "2023-10-17T10:29:53.736504Z",
     "shell.execute_reply": "2023-10-17T10:29:53.735722Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x200 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "extended_res.plot_coefficients_of_determination(figsize=(8,2));"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-10-17T10:29:53.741353Z",
     "iopub.status.busy": "2023-10-17T10:29:53.739986Z",
     "iopub.status.idle": "2023-10-17T10:29:54.058478Z",
     "shell.execute_reply": "2023-10-17T10:29:54.057729Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1300x300 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(figsize=(13,3))\n",
    "\n",
    "# Compute the index\n",
    "extended_coincident_index = compute_coincident_index(extended_mod, extended_res)\n",
    "\n",
    "# Plot the factor\n",
    "dates = endog.index._mpl_repr()\n",
    "ax.plot(dates, coincident_index, '-', linewidth=1, label='Basic model')\n",
    "ax.plot(dates, extended_coincident_index, '--', linewidth=3, label='Extended model')\n",
    "ax.plot(usphci.index._mpl_repr(), usphci, label='USPHCI')\n",
    "ax.legend(loc='lower right')\n",
    "ax.set(title='Coincident indices, comparison')\n",
    "\n",
    "# Retrieve and also plot the NBER recession indicators\n",
    "ylim = ax.get_ylim()\n",
    "ax.fill_between(dates[:-3], ylim[0], ylim[1], rec.values[:-4,0], facecolor='k', alpha=0.1);"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
