{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Prediction (out of sample)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-26T12:05:06.640410Z",
     "iopub.status.busy": "2025-09-26T12:05:06.638418Z",
     "iopub.status.idle": "2025-09-26T12:05:08.128348Z",
     "shell.execute_reply": "2025-09-26T12:05:08.127535Z"
    }
   },
   "outputs": [],
   "source": [
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-26T12:05:08.131331Z",
     "iopub.status.busy": "2025-09-26T12:05:08.131005Z",
     "iopub.status.idle": "2025-09-26T12:05:09.376451Z",
     "shell.execute_reply": "2025-09-26T12:05:09.375637Z"
    }
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "import statsmodels.api as sm\n",
    "\n",
    "plt.rc(\"figure\", figsize=(16, 8))\n",
    "plt.rc(\"font\", size=14)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Artificial data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-26T12:05:09.379772Z",
     "iopub.status.busy": "2025-09-26T12:05:09.379346Z",
     "iopub.status.idle": "2025-09-26T12:05:09.386576Z",
     "shell.execute_reply": "2025-09-26T12:05:09.385786Z"
    }
   },
   "outputs": [],
   "source": [
    "nsample = 50\n",
    "sig = 0.25\n",
    "x1 = np.linspace(0, 20, nsample)\n",
    "X = np.column_stack((x1, np.sin(x1), (x1 - 5) ** 2))\n",
    "X = sm.add_constant(X)\n",
    "beta = [5.0, 0.5, 0.5, -0.02]\n",
    "y_true = np.dot(X, beta)\n",
    "y = y_true + sig * np.random.normal(size=nsample)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Estimation "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-26T12:05:09.389471Z",
     "iopub.status.busy": "2025-09-26T12:05:09.389193Z",
     "iopub.status.idle": "2025-09-26T12:05:09.407888Z",
     "shell.execute_reply": "2025-09-26T12:05:09.406525Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                            OLS Regression Results                            \n",
      "==============================================================================\n",
      "Dep. Variable:                      y   R-squared:                       0.982\n",
      "Model:                            OLS   Adj. R-squared:                  0.981\n",
      "Method:                 Least Squares   F-statistic:                     846.0\n",
      "Date:                Fri, 26 Sep 2025   Prob (F-statistic):           3.14e-40\n",
      "Time:                        12:05:09   Log-Likelihood:                -1.3168\n",
      "No. Observations:                  50   AIC:                             10.63\n",
      "Df Residuals:                      46   BIC:                             18.28\n",
      "Df Model:                           3                                         \n",
      "Covariance Type:            nonrobust                                         \n",
      "==============================================================================\n",
      "                 coef    std err          t      P>|t|      [0.025      0.975]\n",
      "------------------------------------------------------------------------------\n",
      "const          5.0291      0.088     56.968      0.000       4.851       5.207\n",
      "x1             0.4927      0.014     36.192      0.000       0.465       0.520\n",
      "x2             0.5406      0.054     10.100      0.000       0.433       0.648\n",
      "x3            -0.0191      0.001    -15.985      0.000      -0.022      -0.017\n",
      "==============================================================================\n",
      "Omnibus:                        3.082   Durbin-Watson:                   1.649\n",
      "Prob(Omnibus):                  0.214   Jarque-Bera (JB):                2.311\n",
      "Skew:                           0.517   Prob(JB):                        0.315\n",
      "Kurtosis:                       3.199   Cond. No.                         221.\n",
      "==============================================================================\n",
      "\n",
      "Notes:\n",
      "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n"
     ]
    }
   ],
   "source": [
    "olsmod = sm.OLS(y, X)\n",
    "olsres = olsmod.fit()\n",
    "print(olsres.summary())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## In-sample prediction"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-26T12:05:09.468373Z",
     "iopub.status.busy": "2025-09-26T12:05:09.468030Z",
     "iopub.status.idle": "2025-09-26T12:05:09.475318Z",
     "shell.execute_reply": "2025-09-26T12:05:09.474602Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[ 4.5514101   5.04191244  5.49079466  5.86859559  6.15648647  6.34936441\n",
      "  6.45669079  6.50093682  6.51389153  6.53143897  6.58766253  6.70924515\n",
      "  6.91108537  7.19384957  7.54386248  7.93535397  8.33469301  8.70591318\n",
      "  9.01662183  9.24332209  9.37527338  9.41625601  9.38395011  9.30703084\n",
      "  9.22045712  9.15972801  9.15505028  9.22637554  9.38012227  9.60812122\n",
      "  9.88895768 10.19148977 10.47996502 10.71989438 10.88371868 10.95533651\n",
      " 10.93274965 10.82839137 10.66708367 10.48195911 10.3090172  10.18120982\n",
      " 10.12302728 10.14647465 10.24909938 10.41439419 10.61450925 10.81482775\n",
      " 10.9796534  11.07807519]\n"
     ]
    }
   ],
   "source": [
    "ypred = olsres.predict(X)\n",
    "print(ypred)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Create a new sample of explanatory variables Xnew, predict and plot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-26T12:05:09.478782Z",
     "iopub.status.busy": "2025-09-26T12:05:09.478221Z",
     "iopub.status.idle": "2025-09-26T12:05:09.485976Z",
     "shell.execute_reply": "2025-09-26T12:05:09.485272Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[11.07838392 10.93720485 10.67573751 10.34229292 10.00046537  9.71356235\n",
      "  9.52910463  9.46719153  9.51557994  9.63268179]\n"
     ]
    }
   ],
   "source": [
    "x1n = np.linspace(20.5, 25, 10)\n",
    "Xnew = np.column_stack((x1n, np.sin(x1n), (x1n - 5) ** 2))\n",
    "Xnew = sm.add_constant(Xnew)\n",
    "ynewpred = olsres.predict(Xnew)  # predict out of sample\n",
    "print(ynewpred)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Plot comparison"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-26T12:05:09.488759Z",
     "iopub.status.busy": "2025-09-26T12:05:09.488464Z",
     "iopub.status.idle": "2025-09-26T12:05:09.750601Z",
     "shell.execute_reply": "2025-09-26T12:05:09.749823Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x7f243c329180>"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1600x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "fig, ax = plt.subplots()\n",
    "ax.plot(x1, y, \"o\", label=\"Data\")\n",
    "ax.plot(x1, y_true, \"b-\", label=\"True\")\n",
    "ax.plot(np.hstack((x1, x1n)), np.hstack((ypred, ynewpred)), \"r\", label=\"OLS prediction\")\n",
    "ax.legend(loc=\"best\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Predicting with Formulas"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Using formulas can make both estimation and prediction a lot easier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-26T12:05:09.753679Z",
     "iopub.status.busy": "2025-09-26T12:05:09.753371Z",
     "iopub.status.idle": "2025-09-26T12:05:09.764320Z",
     "shell.execute_reply": "2025-09-26T12:05:09.763532Z"
    }
   },
   "outputs": [],
   "source": [
    "from statsmodels.formula.api import ols\n",
    "\n",
    "data = {\"x1\": x1, \"y\": y}\n",
    "\n",
    "res = ols(\"y ~ x1 + np.sin(x1) + I((x1-5)**2)\", data=data).fit()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We use the `I` to indicate use of the Identity transform. Ie., we do not want any expansion magic from using `**2`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-26T12:05:09.767129Z",
     "iopub.status.busy": "2025-09-26T12:05:09.766845Z",
     "iopub.status.idle": "2025-09-26T12:05:09.776057Z",
     "shell.execute_reply": "2025-09-26T12:05:09.775274Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Intercept           5.029133\n",
       "x1                  0.492746\n",
       "np.sin(x1)          0.540580\n",
       "I((x1 - 5) ** 2)   -0.019109\n",
       "dtype: float64"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "res.params"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now we only have to pass the single variable and we get the transformed right-hand side variables automatically"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-26T12:05:09.778831Z",
     "iopub.status.busy": "2025-09-26T12:05:09.778572Z",
     "iopub.status.idle": "2025-09-26T12:05:09.788200Z",
     "shell.execute_reply": "2025-09-26T12:05:09.787474Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    11.078384\n",
       "1    10.937205\n",
       "2    10.675738\n",
       "3    10.342293\n",
       "4    10.000465\n",
       "5     9.713562\n",
       "6     9.529105\n",
       "7     9.467192\n",
       "8     9.515580\n",
       "9     9.632682\n",
       "dtype: float64"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "res.predict(exog=dict(x1=x1n))"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.18"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
