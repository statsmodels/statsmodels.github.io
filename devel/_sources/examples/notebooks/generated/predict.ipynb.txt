{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Prediction (out of sample)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-12T18:16:40.280890Z",
     "iopub.status.busy": "2023-12-12T18:16:40.280588Z",
     "iopub.status.idle": "2023-12-12T18:16:41.321397Z",
     "shell.execute_reply": "2023-12-12T18:16:41.320687Z"
    }
   },
   "outputs": [],
   "source": [
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-12T18:16:41.325520Z",
     "iopub.status.busy": "2023-12-12T18:16:41.325064Z",
     "iopub.status.idle": "2023-12-12T18:16:42.794348Z",
     "shell.execute_reply": "2023-12-12T18:16:42.793466Z"
    }
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "import statsmodels.api as sm\n",
    "\n",
    "plt.rc(\"figure\", figsize=(16, 8))\n",
    "plt.rc(\"font\", size=14)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Artificial data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-12T18:16:42.798829Z",
     "iopub.status.busy": "2023-12-12T18:16:42.798351Z",
     "iopub.status.idle": "2023-12-12T18:16:42.806055Z",
     "shell.execute_reply": "2023-12-12T18:16:42.805326Z"
    }
   },
   "outputs": [],
   "source": [
    "nsample = 50\n",
    "sig = 0.25\n",
    "x1 = np.linspace(0, 20, nsample)\n",
    "X = np.column_stack((x1, np.sin(x1), (x1 - 5) ** 2))\n",
    "X = sm.add_constant(X)\n",
    "beta = [5.0, 0.5, 0.5, -0.02]\n",
    "y_true = np.dot(X, beta)\n",
    "y = y_true + sig * np.random.normal(size=nsample)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Estimation "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-12T18:16:42.810082Z",
     "iopub.status.busy": "2023-12-12T18:16:42.809714Z",
     "iopub.status.idle": "2023-12-12T18:16:42.830773Z",
     "shell.execute_reply": "2023-12-12T18:16:42.829968Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                            OLS Regression Results                            \n",
      "==============================================================================\n",
      "Dep. Variable:                      y   R-squared:                       0.989\n",
      "Model:                            OLS   Adj. R-squared:                  0.988\n",
      "Method:                 Least Squares   F-statistic:                     1354.\n",
      "Date:                Tue, 12 Dec 2023   Prob (F-statistic):           7.42e-45\n",
      "Time:                        18:16:42   Log-Likelihood:                 9.6767\n",
      "No. Observations:                  50   AIC:                            -11.35\n",
      "Df Residuals:                      46   BIC:                            -3.705\n",
      "Df Model:                           3                                         \n",
      "Covariance Type:            nonrobust                                         \n",
      "==============================================================================\n",
      "                 coef    std err          t      P>|t|      [0.025      0.975]\n",
      "------------------------------------------------------------------------------\n",
      "const          4.9196      0.071     69.432      0.000       4.777       5.062\n",
      "x1             0.5117      0.011     46.824      0.000       0.490       0.534\n",
      "x2             0.4406      0.043     10.257      0.000       0.354       0.527\n",
      "x3            -0.0208      0.001    -21.644      0.000      -0.023      -0.019\n",
      "==============================================================================\n",
      "Omnibus:                        1.919   Durbin-Watson:                   2.040\n",
      "Prob(Omnibus):                  0.383   Jarque-Bera (JB):                1.849\n",
      "Skew:                          -0.401   Prob(JB):                        0.397\n",
      "Kurtosis:                       2.505   Cond. No.                         221.\n",
      "==============================================================================\n",
      "\n",
      "Notes:\n",
      "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n"
     ]
    }
   ],
   "source": [
    "olsmod = sm.OLS(y, X)\n",
    "olsres = olsmod.fit()\n",
    "print(olsres.summary())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## In-sample prediction"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-12T18:16:42.834889Z",
     "iopub.status.busy": "2023-12-12T18:16:42.834521Z",
     "iopub.status.idle": "2023-12-12T18:16:42.842489Z",
     "shell.execute_reply": "2023-12-12T18:16:42.840789Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[ 4.40043907  4.86547275  5.29485403  5.66457045  5.95927551  6.17481009\n",
      "  6.31888574  6.40981772  6.47351586  6.53922761  6.63473283  6.78177956\n",
      "  6.99251096  7.26747016  7.59551105  7.95562955  8.32041454  8.6605514\n",
      "  8.94963833  9.1685241   9.30845453  9.37251079  9.37510316  9.33960347\n",
      "  9.29450516  9.26874193  9.28693396  9.3653429   9.50920017  9.71184739\n",
      "  9.95583038 10.21576679 10.46251641 10.66796874 10.80966156 10.87447132\n",
      " 10.86076937 10.7786895  10.64846301 10.49709477 10.35392635 10.24581535\n",
      " 10.19272273 10.20443327 10.27894801 10.40281262 10.55332794 10.70227937\n",
      " 10.82057247 10.88301306]\n"
     ]
    }
   ],
   "source": [
    "ypred = olsres.predict(X)\n",
    "print(ypred)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Create a new sample of explanatory variables Xnew, predict and plot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-12T18:16:42.846134Z",
     "iopub.status.busy": "2023-12-12T18:16:42.845804Z",
     "iopub.status.idle": "2023-12-12T18:16:42.852987Z",
     "shell.execute_reply": "2023-12-12T18:16:42.852016Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10.85912865 10.71732827 10.47489068 10.17119203  9.85806517  9.58710918\n",
      "  9.39705612  9.30428803  9.2988261   9.34677378]\n"
     ]
    }
   ],
   "source": [
    "x1n = np.linspace(20.5, 25, 10)\n",
    "Xnew = np.column_stack((x1n, np.sin(x1n), (x1n - 5) ** 2))\n",
    "Xnew = sm.add_constant(Xnew)\n",
    "ynewpred = olsres.predict(Xnew)  # predict out of sample\n",
    "print(ynewpred)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Plot comparison"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-12T18:16:42.856289Z",
     "iopub.status.busy": "2023-12-12T18:16:42.855954Z",
     "iopub.status.idle": "2023-12-12T18:16:43.400192Z",
     "shell.execute_reply": "2023-12-12T18:16:43.399455Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x7f90d6476ce0>"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1600x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "fig, ax = plt.subplots()\n",
    "ax.plot(x1, y, \"o\", label=\"Data\")\n",
    "ax.plot(x1, y_true, \"b-\", label=\"True\")\n",
    "ax.plot(np.hstack((x1, x1n)), np.hstack((ypred, ynewpred)), \"r\", label=\"OLS prediction\")\n",
    "ax.legend(loc=\"best\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Predicting with Formulas"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Using formulas can make both estimation and prediction a lot easier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-12T18:16:43.404185Z",
     "iopub.status.busy": "2023-12-12T18:16:43.403755Z",
     "iopub.status.idle": "2023-12-12T18:16:43.412514Z",
     "shell.execute_reply": "2023-12-12T18:16:43.411868Z"
    }
   },
   "outputs": [],
   "source": [
    "from statsmodels.formula.api import ols\n",
    "\n",
    "data = {\"x1\": x1, \"y\": y}\n",
    "\n",
    "res = ols(\"y ~ x1 + np.sin(x1) + I((x1-5)**2)\", data=data).fit()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We use the `I` to indicate use of the Identity transform. Ie., we do not want any expansion magic from using `**2`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-12T18:16:43.415654Z",
     "iopub.status.busy": "2023-12-12T18:16:43.415251Z",
     "iopub.status.idle": "2023-12-12T18:16:43.424284Z",
     "shell.execute_reply": "2023-12-12T18:16:43.423647Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Intercept           4.919591\n",
       "x1                  0.511677\n",
       "np.sin(x1)          0.440603\n",
       "I((x1 - 5) ** 2)   -0.020766\n",
       "dtype: float64"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "res.params"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now we only have to pass the single variable and we get the transformed right-hand side variables automatically"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-12T18:16:43.435131Z",
     "iopub.status.busy": "2023-12-12T18:16:43.434645Z",
     "iopub.status.idle": "2023-12-12T18:16:43.441766Z",
     "shell.execute_reply": "2023-12-12T18:16:43.441153Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    10.859129\n",
       "1    10.717328\n",
       "2    10.474891\n",
       "3    10.171192\n",
       "4     9.858065\n",
       "5     9.587109\n",
       "6     9.397056\n",
       "7     9.304288\n",
       "8     9.298826\n",
       "9     9.346774\n",
       "dtype: float64"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "res.predict(exog=dict(x1=x1n))"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
