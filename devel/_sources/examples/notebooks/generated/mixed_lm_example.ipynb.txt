{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Linear Mixed Effects Models"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-25T16:02:41.467225Z",
     "iopub.status.busy": "2025-01-25T16:02:41.467006Z",
     "iopub.status.idle": "2025-01-25T16:02:45.355530Z",
     "shell.execute_reply": "2025-01-25T16:02:45.354815Z"
    }
   },
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import statsmodels.api as sm\n",
    "import statsmodels.formula.api as smf\n",
    "from statsmodels.tools.sm_exceptions import ConvergenceWarning"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Note**: The R code and the results in this notebook has been converted to markdown so that R is not required to build the documents. The R results in the notebook were computed using R 3.5.1 and lme4 1.1."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "```ipython\n",
    "%load_ext rpy2.ipython\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "```ipython\n",
    "%R library(lme4)\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "```\n",
    "array(['lme4', 'Matrix', 'tools', 'stats', 'graphics', 'grDevices',\n",
    "       'utils', 'datasets', 'methods', 'base'], dtype='<U9')\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Comparing R lmer to statsmodels MixedLM\n",
    "=======================================\n",
    "\n",
    "The statsmodels implementation of linear mixed models (MixedLM) closely follows the approach outlined in Lindstrom and Bates (JASA 1988).  This is also the approach followed in the  R package LME4.  Other packages such as Stata, SAS, etc. should also be consistent with this approach, as the basic techniques in this area are mostly mature.\n",
    "\n",
    "Here we show how linear mixed models can be fit using the MixedLM procedure in statsmodels.  Results from R (LME4) are included for comparison.\n",
    "\n",
    "Here are our import statements:"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Growth curves of pigs\n",
    "\n",
    "These are longitudinal data from a factorial experiment. The outcome variable is the weight of each pig, and the only predictor variable we will use here is \"time\".  First we fit a model that expresses the mean weight as a linear function of time, with a random intercept for each pig. The model is specified using formulas. Since the random effects structure is not specified, the default random effects structure (a random intercept for each group) is automatically used. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-25T16:02:45.361410Z",
     "iopub.status.busy": "2025-01-25T16:02:45.361077Z",
     "iopub.status.idle": "2025-01-25T16:02:46.732070Z",
     "shell.execute_reply": "2025-01-25T16:02:46.728769Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "         Mixed Linear Model Regression Results\n",
      "========================================================\n",
      "Model:            MixedLM Dependent Variable: Weight    \n",
      "No. Observations: 861     Method:             REML      \n",
      "No. Groups:       72      Scale:              11.3669   \n",
      "Min. group size:  11      Log-Likelihood:     -2404.7753\n",
      "Max. group size:  12      Converged:          Yes       \n",
      "Mean group size:  12.0                                  \n",
      "--------------------------------------------------------\n",
      "             Coef.  Std.Err.    z    P>|z| [0.025 0.975]\n",
      "--------------------------------------------------------\n",
      "Intercept    15.724    0.788  19.952 0.000 14.179 17.268\n",
      "Time          6.943    0.033 207.939 0.000  6.877  7.008\n",
      "Group Var    40.395    2.149                            \n",
      "========================================================\n",
      "\n"
     ]
    }
   ],
   "source": [
    "data = sm.datasets.get_rdataset(\"dietox\", \"geepack\").data\n",
    "md = smf.mixedlm(\"Weight ~ Time\", data, groups=data[\"Pig\"])\n",
    "mdf = md.fit(method=[\"lbfgs\"])\n",
    "print(mdf.summary())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Here is the same model fit in R using LMER:"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "```ipython\n",
    "%%R\n",
    "data(dietox, package='geepack')\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "```ipython\n",
    "%R print(summary(lmer('Weight ~ Time + (1|Pig)', data=dietox)))\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "```\n",
    "Linear mixed model fit by REML ['lmerMod']\n",
    "Formula: Weight ~ Time + (1 | Pig)\n",
    "   Data: dietox\n",
    "\n",
    "REML criterion at convergence: 4809.6\n",
    "\n",
    "Scaled residuals: \n",
    "    Min      1Q  Median      3Q     Max \n",
    "-4.7118 -0.5696 -0.0943  0.4877  4.7732 \n",
    "\n",
    "Random effects:\n",
    " Groups   Name        Variance Std.Dev.\n",
    " Pig      (Intercept) 40.39    6.356   \n",
    " Residual             11.37    3.371   \n",
    "Number of obs: 861, groups:  Pig, 72\n",
    "\n",
    "Fixed effects:\n",
    "            Estimate Std. Error t value\n",
    "(Intercept) 15.72352    0.78805   19.95\n",
    "Time         6.94251    0.03339  207.94\n",
    "\n",
    "Correlation of Fixed Effects:\n",
    "     (Intr)\n",
    "Time -0.275\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Note that in the statsmodels summary of results, the fixed effects and random effects parameter estimates are shown in a single table.  The random effect for animal is labeled \"Intercept RE\" in the statsmodels output above.  In the LME4 output, this effect is the pig intercept under the random effects section.\n",
    "\n",
    "There has been a lot of debate about whether the standard errors for random effect variance and covariance parameters are useful.  In LME4, these standard errors are not displayed, because the authors of the package believe they are not very informative.  While there is good reason to question their utility, we elected to include the standard errors in the summary table, but do not show the corresponding Wald confidence intervals.\n",
    "\n",
    "Next we fit a model with two random effects for each animal: a random intercept, and a random slope (with respect to time).  This means that each pig may have a different baseline weight, as well as growing at a different rate. The formula specifies that \"Time\" is a covariate with a random coefficient.  By default, formulas always include an intercept (which could be suppressed here using \"0 + Time\" as the formula)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-25T16:02:46.734978Z",
     "iopub.status.busy": "2025-01-25T16:02:46.734722Z",
     "iopub.status.idle": "2025-01-25T16:02:47.499555Z",
     "shell.execute_reply": "2025-01-25T16:02:47.498738Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "           Mixed Linear Model Regression Results\n",
      "===========================================================\n",
      "Model:             MixedLM  Dependent Variable:  Weight    \n",
      "No. Observations:  861      Method:              REML      \n",
      "No. Groups:        72       Scale:               6.0372    \n",
      "Min. group size:   11       Log-Likelihood:      -2217.0475\n",
      "Max. group size:   12       Converged:           Yes       \n",
      "Mean group size:   12.0                                    \n",
      "-----------------------------------------------------------\n",
      "                 Coef.  Std.Err.   z    P>|z| [0.025 0.975]\n",
      "-----------------------------------------------------------\n",
      "Intercept        15.739    0.550 28.603 0.000 14.660 16.817\n",
      "Time              6.939    0.080 86.925 0.000  6.783  7.095\n",
      "Group Var        19.503    1.561                           \n",
      "Group x Time Cov  0.294    0.153                           \n",
      "Time Var          0.416    0.033                           \n",
      "===========================================================\n",
      "\n"
     ]
    }
   ],
   "source": [
    "md = smf.mixedlm(\"Weight ~ Time\", data, groups=data[\"Pig\"], re_formula=\"~Time\")\n",
    "mdf = md.fit(method=[\"lbfgs\"])\n",
    "print(mdf.summary())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Here is the same model fit using LMER in R:"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "```ipython\n",
    "%R print(summary(lmer(\"Weight ~ Time + (1 + Time | Pig)\", data=dietox)))\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "```\n",
    "Linear mixed model fit by REML ['lmerMod']\n",
    "Formula: Weight ~ Time + (1 + Time | Pig)\n",
    "   Data: dietox\n",
    "\n",
    "REML criterion at convergence: 4434.1\n",
    "\n",
    "Scaled residuals: \n",
    "    Min      1Q  Median      3Q     Max \n",
    "-6.4286 -0.5529 -0.0416  0.4841  3.5624 \n",
    "\n",
    "Random effects:\n",
    " Groups   Name        Variance Std.Dev. Corr\n",
    " Pig      (Intercept) 19.493   4.415        \n",
    "          Time         0.416   0.645    0.10\n",
    " Residual              6.038   2.457        \n",
    "Number of obs: 861, groups:  Pig, 72\n",
    "\n",
    "Fixed effects:\n",
    "            Estimate Std. Error t value\n",
    "(Intercept) 15.73865    0.55012   28.61\n",
    "Time         6.93901    0.07982   86.93\n",
    "\n",
    "Correlation of Fixed Effects:\n",
    "     (Intr)\n",
    "Time 0.006 \n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The random intercept and random slope are only weakly correlated $(0.294 / \\sqrt{19.493 * 0.416} \\approx 0.1)$.  So next we fit a model in which the two random effects are constrained to be uncorrelated:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-25T16:02:47.504499Z",
     "iopub.status.busy": "2025-01-25T16:02:47.504271Z",
     "iopub.status.idle": "2025-01-25T16:02:47.513939Z",
     "shell.execute_reply": "2025-01-25T16:02:47.513301Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.10324316832591753"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "0.294 / (19.493 * 0.416) ** 0.5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-25T16:02:47.520543Z",
     "iopub.status.busy": "2025-01-25T16:02:47.516256Z",
     "iopub.status.idle": "2025-01-25T16:02:48.292599Z",
     "shell.execute_reply": "2025-01-25T16:02:48.291939Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "           Mixed Linear Model Regression Results\n",
      "===========================================================\n",
      "Model:             MixedLM  Dependent Variable:  Weight    \n",
      "No. Observations:  861      Method:              REML      \n",
      "No. Groups:        72       Scale:               6.0283    \n",
      "Min. group size:   11       Log-Likelihood:      -2217.3481\n",
      "Max. group size:   12       Converged:           Yes       \n",
      "Mean group size:   12.0                                    \n",
      "-----------------------------------------------------------\n",
      "                 Coef.  Std.Err.   z    P>|z| [0.025 0.975]\n",
      "-----------------------------------------------------------\n",
      "Intercept        15.739    0.554 28.388 0.000 14.652 16.825\n",
      "Time              6.939    0.080 86.248 0.000  6.781  7.097\n",
      "Group Var        19.837    1.571                           \n",
      "Group x Time Cov  0.000    0.000                           \n",
      "Time Var          0.423    0.033                           \n",
      "===========================================================\n",
      "\n"
     ]
    }
   ],
   "source": [
    "md = smf.mixedlm(\"Weight ~ Time\", data, groups=data[\"Pig\"], re_formula=\"~Time\")\n",
    "free = sm.regression.mixed_linear_model.MixedLMParams.from_components(\n",
    "    np.ones(2), np.eye(2)\n",
    ")\n",
    "\n",
    "mdf = md.fit(free=free, method=[\"lbfgs\"])\n",
    "print(mdf.summary())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The likelihood drops by 0.3 when we fix the correlation parameter to 0.  Comparing 2 x 0.3 = 0.6 to the $\\chi^2$ 1 df reference distribution suggests that the data are very consistent with a model in which this parameter is equal to 0.\n",
    "\n",
    "Here is the same model fit using LMER in R (note that here R is reporting the REML criterion instead of the likelihood, where the REML criterion is twice the log likelihood):"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "```ipython\n",
    "%R print(summary(lmer(\"Weight ~ Time + (1 | Pig) + (0 + Time | Pig)\", data=dietox)))\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "```\n",
    "Linear mixed model fit by REML ['lmerMod']\n",
    "Formula: Weight ~ Time + (1 | Pig) + (0 + Time | Pig)\n",
    "   Data: dietox\n",
    "\n",
    "REML criterion at convergence: 4434.7\n",
    "\n",
    "Scaled residuals: \n",
    "    Min      1Q  Median      3Q     Max \n",
    "-6.4281 -0.5527 -0.0405  0.4840  3.5661 \n",
    "\n",
    "Random effects:\n",
    " Groups   Name        Variance Std.Dev.\n",
    " Pig      (Intercept) 19.8404  4.4543  \n",
    " Pig.1    Time         0.4234  0.6507  \n",
    " Residual              6.0282  2.4552  \n",
    "Number of obs: 861, groups:  Pig, 72\n",
    "\n",
    "Fixed effects:\n",
    "            Estimate Std. Error t value\n",
    "(Intercept) 15.73875    0.55444   28.39\n",
    "Time         6.93899    0.08045   86.25\n",
    "\n",
    "Correlation of Fixed Effects:\n",
    "     (Intr)\n",
    "Time -0.086\n",
    "```\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Sitka growth data\n",
    "\n",
    "This is one of the example data sets provided in the LMER R library.  The outcome variable is the size of the tree, and the covariate used here is a time value.  The data are grouped by tree."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-25T16:02:48.303025Z",
     "iopub.status.busy": "2025-01-25T16:02:48.298642Z",
     "iopub.status.idle": "2025-01-25T16:02:49.236678Z",
     "shell.execute_reply": "2025-01-25T16:02:49.235898Z"
    }
   },
   "outputs": [],
   "source": [
    "data = sm.datasets.get_rdataset(\"Sitka\", \"MASS\").data\n",
    "endog = data[\"size\"]\n",
    "data[\"Intercept\"] = 1\n",
    "exog = data[[\"Intercept\", \"Time\"]]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Here is the statsmodels LME fit for a basic model with a random intercept.  We are passing the endog and exog data directly to the LME init function as arrays.  Also note that endog_re is specified explicitly in argument 4 as a random intercept (although this would also be the default if it were not specified)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-25T16:02:49.243482Z",
     "iopub.status.busy": "2025-01-25T16:02:49.239354Z",
     "iopub.status.idle": "2025-01-25T16:02:49.832386Z",
     "shell.execute_reply": "2025-01-25T16:02:49.831659Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "         Mixed Linear Model Regression Results\n",
      "=======================================================\n",
      "Model:             MixedLM Dependent Variable: size    \n",
      "No. Observations:  395     Method:             REML    \n",
      "No. Groups:        79      Scale:              0.0392  \n",
      "Min. group size:   5       Log-Likelihood:     -82.3884\n",
      "Max. group size:   5       Converged:          Yes     \n",
      "Mean group size:   5.0                                 \n",
      "-------------------------------------------------------\n",
      "              Coef. Std.Err.   z    P>|z| [0.025 0.975]\n",
      "-------------------------------------------------------\n",
      "Intercept     2.273    0.088 25.864 0.000  2.101  2.446\n",
      "Time          0.013    0.000 47.796 0.000  0.012  0.013\n",
      "Intercept Var 0.374    0.345                           \n",
      "=======================================================\n",
      "\n"
     ]
    }
   ],
   "source": [
    "md = sm.MixedLM(endog, exog, groups=data[\"tree\"], exog_re=exog[\"Intercept\"])\n",
    "mdf = md.fit()\n",
    "print(mdf.summary())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Here is the same model fit in R using LMER:"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "```ipython\n",
    "%R\n",
    "data(Sitka, package=\"MASS\")\n",
    "print(summary(lmer(\"size ~ Time + (1 | tree)\", data=Sitka)))\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "```\n",
    "Linear mixed model fit by REML ['lmerMod']\n",
    "Formula: size ~ Time + (1 | tree)\n",
    "   Data: Sitka\n",
    "\n",
    "REML criterion at convergence: 164.8\n",
    "\n",
    "Scaled residuals: \n",
    "    Min      1Q  Median      3Q     Max \n",
    "-2.9979 -0.5169  0.1576  0.5392  4.4012 \n",
    "\n",
    "Random effects:\n",
    " Groups   Name        Variance Std.Dev.\n",
    " tree     (Intercept) 0.37451  0.612   \n",
    " Residual             0.03921  0.198   \n",
    "Number of obs: 395, groups:  tree, 79\n",
    "\n",
    "Fixed effects:\n",
    "             Estimate Std. Error t value\n",
    "(Intercept) 2.2732443  0.0878955   25.86\n",
    "Time        0.0126855  0.0002654   47.80\n",
    "\n",
    "Correlation of Fixed Effects:\n",
    "     (Intr)\n",
    "Time -0.611\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can now try to add a random slope.  We start with R this time.  From the code and output below we see that the REML estimate of the variance of the random slope is nearly zero."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "```ipython\n",
    "%R print(summary(lmer(\"size ~ Time + (1 + Time | tree)\", data=Sitka)))\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "```\n",
    "Linear mixed model fit by REML ['lmerMod']\n",
    "Formula: size ~ Time + (1 + Time | tree)\n",
    "   Data: Sitka\n",
    "\n",
    "REML criterion at convergence: 153.4\n",
    "\n",
    "Scaled residuals: \n",
    "    Min      1Q  Median      3Q     Max \n",
    "-2.7609 -0.5173  0.1188  0.5270  3.5466 \n",
    "\n",
    "Random effects:\n",
    " Groups   Name        Variance  Std.Dev. Corr \n",
    " tree     (Intercept) 2.217e-01 0.470842      \n",
    "          Time        3.288e-06 0.001813 -0.17\n",
    " Residual             3.634e-02 0.190642      \n",
    "Number of obs: 395, groups:  tree, 79\n",
    "\n",
    "Fixed effects:\n",
    "            Estimate Std. Error t value\n",
    "(Intercept) 2.273244   0.074655   30.45\n",
    "Time        0.012686   0.000327   38.80\n",
    "\n",
    "Correlation of Fixed Effects:\n",
    "     (Intr)\n",
    "Time -0.615\n",
    "convergence code: 0\n",
    "Model failed to converge with max|grad| = 0.793203 (tol = 0.002, component 1)\n",
    "Model is nearly unidentifiable: very large eigenvalue\n",
    " - Rescale variables?\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "If we run this in statsmodels LME with defaults, we see that the variance estimate is indeed very small, which leads to a warning about the solution being on the boundary of the parameter space.  The regression slopes agree very well with R, but the likelihood value is much higher than that returned by R."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-25T16:02:49.835876Z",
     "iopub.status.busy": "2025-01-25T16:02:49.835601Z",
     "iopub.status.idle": "2025-01-25T16:02:52.225683Z",
     "shell.execute_reply": "2025-01-25T16:02:52.224876Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "             Mixed Linear Model Regression Results\n",
      "===============================================================\n",
      "Model:               MixedLM    Dependent Variable:    size    \n",
      "No. Observations:    395        Method:                REML    \n",
      "No. Groups:          79         Scale:                 0.0264  \n",
      "Min. group size:     5          Log-Likelihood:        -62.4834\n",
      "Max. group size:     5          Converged:             Yes     \n",
      "Mean group size:     5.0                                       \n",
      "---------------------------------------------------------------\n",
      "                     Coef.  Std.Err.   z    P>|z| [0.025 0.975]\n",
      "---------------------------------------------------------------\n",
      "Intercept             2.273    0.101 22.513 0.000  2.075  2.471\n",
      "Time                  0.013    0.000 33.888 0.000  0.012  0.013\n",
      "Intercept Var         0.646    0.914                           \n",
      "Intercept x Time Cov -0.001    0.003                           \n",
      "Time Var              0.000    0.000                           \n",
      "===============================================================\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/hostedtoolcache/Python/3.10.16/x64/lib/python3.10/site-packages/statsmodels/regression/mixed_linear_model.py:2240: ConvergenceWarning: The MLE may be on the boundary of the parameter space.\n",
      "  warnings.warn(msg, ConvergenceWarning)\n"
     ]
    }
   ],
   "source": [
    "exog_re = exog.copy()\n",
    "md = sm.MixedLM(endog, exog, data[\"tree\"], exog_re)\n",
    "mdf = md.fit()\n",
    "print(mdf.summary())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can further explore the random effects structure by constructing plots of the profile likelihoods. We start with the random intercept, generating a plot of the profile likelihood from 0.1 units below to 0.1 units above the MLE. Since each optimization inside the profile likelihood generates a warning (due to the random slope variance being close to zero), we turn off the warnings here."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-25T16:02:52.228637Z",
     "iopub.status.busy": "2025-01-25T16:02:52.228207Z",
     "iopub.status.idle": "2025-01-25T16:03:00.685393Z",
     "shell.execute_reply": "2025-01-25T16:03:00.684688Z"
    }
   },
   "outputs": [],
   "source": [
    "import warnings\n",
    "\n",
    "with warnings.catch_warnings():\n",
    "    warnings.filterwarnings(\"ignore\")\n",
    "    likev = mdf.profile_re(0, \"re\", dist_low=0.1, dist_high=0.1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Here is a plot of the profile likelihood function.  We multiply the log-likelihood difference by 2 to obtain the usual $\\chi^2$ reference distribution with 1 degree of freedom."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-25T16:03:00.688367Z",
     "iopub.status.busy": "2025-01-25T16:03:00.687787Z",
     "iopub.status.idle": "2025-01-25T16:03:00.695251Z",
     "shell.execute_reply": "2025-01-25T16:03:00.694647Z"
    }
   },
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-25T16:03:00.699985Z",
     "iopub.status.busy": "2025-01-25T16:03:00.699709Z",
     "iopub.status.idle": "2025-01-25T16:03:01.217071Z",
     "shell.execute_reply": "2025-01-25T16:03:01.216242Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, '-2 times profile log likelihood')"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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objrrrvw66+/Vqis++67D8HBwejevTtWrVpV7vaFhYXIycmx+iEiIiIiIqqoOp/UxcfHY8mSJRg1apSyLDQ0FJ999hmWLl2KpUuXolGjRoiNjcXevXvtluPr64t3330X3333HdauXYvu3bvj/vvvLzexe/vtt2EwGJSfRo0aVVvbiIiIiIio9tOICwxvOGHCBMyaNavMbQ4fPoyWLVsqnxcuXIhx48YhKyvL7j6JiYm48847MXbsWLz22mtllt+zZ080btwYX331VYXrPWzYMCQnJ+OXX36xu01hYSEKCwuVzzk5OWjUqBGys7Ot3ucjIiIiIqK6JScnBwaDodzcwCXeqRs/fjxGjBhR5jZNmjSpVJmHDh1C7969MWrUqHITOgDo1KkTtm/fXqljdO7cGRs2bChzG71eD71eX6lyiYiIiIiILFwiqatfvz7q169fbeUlJSWhV69eGD58OGbMmFGhfRISEhAaGlqp49zMPkRERERERJXhEkldZaSlpSEjIwNpaWkwmUxISEgAADRr1gy+vr5ITExEr1690LdvX7z44ovK3HNarVZJHD/44ANEREQgKioKBQUF+PLLL7F582asX79eOc4nn3yC5cuXY9OmTQCARYsWQafToX379gCAZcuWYf78+fjyyy9rsPVERERERFTX1LqkbsqUKVi0aJHy2ZJkbdmyBbGxsfj+++9x8eJFxMXFIS4uTtkuPDwcKSkpAErmuhs/fjzOnDkDb29vtG3bFhs3bsSdd96pbH/p0iWcPHnS6tjTp09Hamoq3N3d0bJlSyxZsgQPPfSQiq0lIiIiIqK6ziUGSqlLKvoyJBERERER1W4VzQ3q/JQGREREREREroxJHRERERERkQtjUkdEREREROTCmNQRERERERG5MCZ1RERERERELoxJHRERERERkQtjUkdEREREROTCmNQRERERERG5MCZ1RERERERELoxJHRERERERkQtjUkdEREREROTCmNQRERERERG5MCZ1RERERERELoxJHRERERERkQtzd3QFyJqIAABycnIcXBMiIiIiInIkS05gyRHsYVLnZHJzcwEAjRo1cnBNiIiIiIjIGeTm5sJgMNhdr5Hy0j6qUWazGWfPnkW9evWg0WjsbpeTk4NGjRrh9OnT8PPzq8Ea1g2Mr7oYX3UxvuphbNXF+KqL8VUX46uuuhpfEUFu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/PkSEhJis76zZs0Ss9ksDz30kHLdeHl5KeujoqLk6tWrFToHts7FjXr27CkA5MMPP5S2bdsKAPHy8lLiCUAaN24sly5dUvb59ddf7V4ftq6RxMREadiwoVKeTqezalNoaKgkJibajdecOXMkICBAAIivr694enrKoEGDlO0WL14ser1eKc/b29vq/Nj6f2HJkiVW+/j4+Ii7u7vyOSYmRnJycqz2uf6a+/bbb5X/w4xGo9X/Z88884zVfs8//7wEBQUp66+PVUhIiLzzzjsVOItEpCYmdURUp1gSNn9/fyVhu1GHDh0EgIwaNUpZ9s0338jkyZNl7969UlxcLCIixcXFEh8fLzExMQJAevfuXaosy82op6enaLVaGTt2rFy8eFFERLKzs+X8+fMiUnZSN3nyZJk9e7acPHlSzGaziIjk5+fLt99+K7fccosAkOnTp5faz5LUGY1G8fb2li+//FK5mU5KSlJugDt27Fhq3yNHjijJX5cuXWT79u3KsXNzc2XFihUycuRIq31OnTolfn5+otFoZNy4cZKcnCxms1muXbsmu3btks6dOwsA6dWrl82427Nt2zYlgXviiSfk3LlzIiKSkZEhL774otVN6o0sN/wLFiyo1DFFKn7utm7dKi+88ILEx8cr15TJZJIDBw7IwIEDBYA0b95cTCaTVfnX32AbjUYZMmSInD59Winf0jaNRiMHDhyw2vfq1avSrFkzASCtW7eWPXv2iIhIQUGBfPrpp+Lh4aEk5DcmdZcvX1YSsujoaNm/f7+IiBQWFsr8+fOVZOjZZ58tFRNLkmIwGKR79+5y6NAhERHJycmR5557TkmoJk2aJH5+fvK///1PioqKxGQyydq1a5Uk9MMPP7ypc1FWUmc0GqVp06ayadMmMZvNUlxcLGvXrlW+BBk/frzdfcu6PjIzM6Vx48bK9Xfo0CExmUxiNpslKSlJ+vfvLwCkRYsWyv8NN8bL19dX2rVrJ7t37xYREbPZLCdOnBARkZ9//llJqO655x5JSEhQ9s/IyJDFixfLiy++aFXuzp07xd3dXfR6vUybNk35nSgqKpINGzZIixYtBECp39HrrzmDwSADBw6U1NRUESm55iZNmqSs//rrr+3uS0TOh7+ZRFSnpKenK99mL126tNT6Q4cOKTcu27dvr1CZmZmZEhwcLACUGzULy80oABk6dKjdMspK6sry66+/Kk8Kb2RJ6gDIF198UWr9vn37lPXJyclW6x544AEBIO3bt6/wU5XHH3/cboIpUnKDGhYWJgBsPrmyJzY2Vnl6ZEksrzd48GDlpvrG9dWR1JV37spSWFgoUVFRAkA2btxote76m+Ru3brZ3P/222+3mZjNmzdPeTpjSQSv9+9//1sp+8Z9X3/9dQEgwcHBcvny5VL7zp49WwCIVquVtLQ0q3WWJCUgIECysrKs1pnNZmnevLly3Li4uFJlT58+/aau84okde7u7kqSeT3LFzll7VvW9TFx4kQBIP/4xz9sri8sLFTO05IlS6zWWeLl7+8vFy5csLm/5UukAQMGlEr87bF8kfTVV1/ZXH/q1Cnx8fERrVZr9WT8+muuTZs2UlRUVGrfUaNGKV9EXI9JHZFz4zt1RFSnhISE4O677wYAxMXFlVpvWdakSRN069atQmUajUZ07doVALBz5067240fP76y1S1XTEwMjEYj/vjjj1LvDVmEhYXhySefLLW8Xbt2aNiwIYC/RokESt4fXLVqFQDgzTffhKenZ7n1yM/Px3fffQcPDw88//zzNrfx9/dH//79AaDCoxhevnxZeS9u0qRJyrtA15s4cSIA4OjRo0hMTKxQuZV1s+dOp9OhT58+AMq+Nl577TWby++9914A1ucHAJYtWwYAePzxx5VzeL3Ro0fDx8fHZplLly4FADz77LMICAgotf4f//gHQkJCYDKZlPcGb/Svf/0LBoPBatn174Q2atQIjz32WKn9evfubbM91eHvf/87IiMjSy23xDA1NRVXrlypdLmLFi0CYP8a0Ol0eOihhwDYv66HDRuG+vXrl1p+6NAh7N27FwDwzjvvwM2t/NuyEydOID4+Hg0aNFAGf7pRREQEunTpApPJpLw3eKPx48fDw8Oj1PIJEyYAAI4dO4aDBw+WWx8icg7ujq4AEVFNGzZsGNatW4d169YhMzMT/v7+AAARweLFiwEAQ4cOLbVfcnIyPvzwQ2zevBnJycm4cuVKqVE0z507Z/OYXl5eaNu27U3Xefv27fjss8+wY8cOnDt3ThnV8cZjW6ZtuF5UVBS0Wq3Ncm+55Rb88ccfyMrKUpb9/vvvMJlM8PDwUG7Cy7Nnzx4UFxdDq9WiefPmdrfLy8sDUDL4S0Xs27cPQMmNc0xMjM1t2rVrB39/f2RmZmLfvn1o06ZNhcquqIqcuwsXLuCjjz7Cjz/+iBMnTiA3N7fUACf2rg0Adsu3nM/rzw8AZV61Hj162NzP29sbHTt2xLZt26yWFxUVKQnVnXfeaXNfvV6PmJgYLF++XIn/jVq3bm1zeXBwMACgVatWNhMUy/ob21Mdyouh5bj2kl1bTp8+rXxZYi9ewF+jrNq7rrt06WJzuWWgosaNG6NVq1YVqtOOHTsAABkZGQgNDbW7XXZ2dpl16tmzp83lERERaNy4MdLS0lT5fSIidTCpI6I6Z9CgQfDz80NOTg6+/fZbPP300wBKRoJLTU0F8Ndk5RabNm3Cfffdh/z8fAAlUyQYjUbodDoAJTdQBQUFdp8EBAYGVuhbeFveeustTJo0Sfns4eGBgIAA5Vv2ixcvwmw22z12WFiY3bItT+GKi4uVZZaR/EJCQqDX6ytUR0vCYjKZcP78+XK3t8SxPJcuXQJQkgzYeqpgER4ejszMTLujkFZFeefu4MGD6NWrl1JXoGQyeUts8/LycOXKlTKfEtk7R7bOD/BXXMo6t7bWZWRkKMmmrS8ALMLDwwHAbjztJROWLw8aNGhQ5vpr167ZPfbNKi+GQOk4luf6RLwq17Wtp3TAX79rjRs3rnSdioqKqlSn8q6dtLQ0VX6fiEgd7H5JRHWOp6cnBg8eDMC6C6ZlbrquXbuiWbNmyvKioiIMGzYM+fn5iI2NxY4dO1BQUICMjAykp6cjPT1d6X5145M7C3tPyspz8OBBTJ48GUBJd7mjR4+ioKAAly9fVo5tuTmzd+yacH2iICXva5f5c/3Q9xVRWFioQq0rprxzN3LkSFy6dAlt2rTBpk2bkJ+fj6ysLOX8vPDCCwAce35scWRMXcX1T1uLi4vLva4tXYVvdLO//2XVqVu3bhX6XeN0A0R1A5M6IqqTLE/ifv31V6SkpKCwsBDff/+91TqLHTt24OzZs/Dx8cHq1avRpUuXUk+NbmburYpYtmwZzGYzevbsidmzZ6N58+ZWT41MJhMuX75crccMCQkBUPJkoqI3/pZ9Lly4UK3JguUJx8WLF1FQUGB3O8sTVntPRNSSmpqqzCG2atUq9OrVC15eXlbbqHFtBAUFASi7S+fZs2dLLQsICFCun7S0NLv7OiqezsZyXQNlx6uq5VviXZl9qlofW9fHjevq+vknciVM6oioTurRowfCw8OV9+jWrFmDrKws6HQ6PPLII1bbWt6padmyJXx9fUuVdfXq1XIn8b5ZlmNHR0fbXL9r1y6b79dVRceOHeHu7o7i4uIKD2gSHR2t7GOZuL06tGvXTvm3vacgCQkJyMzMBAC0b9++2o5dEZbzExgYaHdSc3v1rgpLO298Z87i6tWr2LNnT6nlOp0OUVFRZdarsLAQ8fHxVseprSwJrr2nqBEREUoS9cMPP1T78S3v2p0+fRqHDh2q9D5VGXDG3rWTkpKiJIzXn//rv0xytqfORMSkjojqKI1GowyGsnjxYqXr5T333FNqREA/Pz8AUJ7o3ejdd99VBiWobpZjHz16tNQ6s9msSteqevXq4f777wdQMuJkWU/Irt/nwQcfBFAyGmVZ78xdvXq1wk/zAgMDlQEqZs2aZXObt956CwDQokWLGh/UwXJ+MjIybL5/FBcXh2PHjlX7cR944AEAwNdff23zicucOXPsvsNn6So8d+5cmwOWzJs3D+fPn4dWq1WOU1tZzl9ZA7cMHz4cQMl1VtZT12vXrikDAVVUy5YtlS9sXn755VKD69gSGRmJzp07AwBeeuklmEwmu9tavuyw5b333rP5juG///1vAKV/nyyxAtQZ6IaIqoZJHRHVWcOGDQMAHD58GKtXrwZQuuslUDJtgKenJy5fvoyRI0cqN+/Z2dl44403MGXKFJtDw1cHy+iTa9aswXvvvackQykpKXj44Yexbdu2So3mV1EzZsyAj48PEhIS0KtXL8THxyvfzufl5WHJkiWlRgidOXMm/P39ceDAAfTo0QObN29WbjjNZjOSkpLw5ptvomnTpmV2G7zRG2+8ATc3N2zduhUjR45UBofIzMzE+PHj8d133wEApk+fXh1Nr5RWrVohNDQUIoIhQ4Yo3ejy8/Px6aef4p///Kcq18bjjz+Opk2bIi8vD/3791dGwywqKsLcuXMxYcKEUlMOWIwZMwYhISHIyspCv379lGHri4uLsWDBAmXo/qefftrmdAm1ieWp5bJly+x+MTNhwgRERETg7NmziImJwcqVK62+lDhx4gQ++OADREZGKl1xK+O9996DVqvFunXrMGjQIBw4cEBZl5mZiS+//LLUNCEfffQRdDodfvzxR/Tr1w+7d+9Wfj+Li4uxZ88eTJgwAU2aNLF73JSUFAwePFgZHTM3NxdTp07FnDlzAABTp0612t5oNCrv7y5YsKDS7SQilak6Cx4RkZPr1KmTMqFuQECAFBYW2txu5syZynYAxGg0ipubmzIx9fDhw21O9FzWpMnXszf5uNlslv79+yvHdXNzE6PRqPx77ty5ygTHW7ZssdrXMvn48OHD7R63rMmXN2zYIH5+fsqxPT09JSAgQGm3rTbt2LFDQkJClH10Op0EBgaKh4eHVfxSUlLKjMeNPvnkE9FoNAJANBqN+Pv7K/UAIBMnTqx0+8pT0XP39ddfK3UDIAaDQZngPjY2Vpm8+sbzUJHJnMualH7Pnj1W58fPz090Op0AkEGDBsmwYcNsXpMiIvHx8WIwGKzqbNkXgPTp00euXLlSaj9715pFedfczU5gXZHJx8s6x5ZjJicnWy0/fPiw0m53d3cJCwuT8PDwUpPBHz161GpidXd3dwkMDBS9Xm91XW/dutVqv/LiZREXF2cVfx8fH/H391c+2zr/q1evlnr16pX6/dRqtVZ1ut718f/2229Fq9Uqv0/X7/fMM8/YrOeUKVOs6hgeHi7h4eHy/vvvl9k+IlIfn9QRUZ1meVoHAI888ogyRcGNXn31VcTFxSE6Ohp6vR5msxnR0dGYO3cu/vvf/6pWP41GgxUrVmDq1Klo1qwZtFot3N3d0b9/f2zYsAGjRo1S7dh9+vTBkSNH8NJLLynzjhUXF6N58+YYOXKkMinz9bp06YKjR49ixowZ6Ny5M7y8vJCVlYV69eqhS5cueOWVV/D7778rQ+ZX1OjRo7Fz5048/PDDCAkJQV5eHgICAnDvvfdiw4YNmDFjRnU1u9Iee+wxrFu3Dj169ICPjw+uXbuGVq1aYdasWVi/fn2ZUzFURYcOHbBv3z48/vjjqF+/PoqKitCsWTPMmjULS5cutTlRu0XXrl2RlJSE5557Dk2bNkVBQQE8PT0RExODuXPn4scff4S3t7cq9XYmLVu2xIYNG9CvXz8YDAakp6cjNTUVf/zxh9V2zZs3x/79+/HRRx+hR48e8PPzQ1ZWFjw9PdGhQwc899xz2Lp1q92538ozZMgQJCUl4V//+heaNm0Kk8kEEUGbNm3w3HPP4f333y+1z8CBA3Hs2DFMmDABt99+Ozw8PJCTk4OAgAD06NEDU6dOxZEjR+wec/DgwdiyZQv69u0LjUYDvV6PO+64A4sWLcKnn35qc58pU6Zg1qxZaNu2LUQEqampSE1NZXdMIiegEeHbrkRERES1XUpKCiIiIgBwsBOi2oZP6oiIiIiIiFwYkzoiIiIiIiIXxqSOiIiIiIjIhTGpIyIiIiIicmEcKIWIiIiIiMiF8UkdERERERGRC2NSR0RERERE5MKY1BEREREREbkwJnVEREREREQujEkdERERERGRC2NSR0RERERE5MKY1BEREREREbkwJnVEREREREQujEkdERERERGRC/t/OsZnRLSwuTUAAAAASUVORK5CYII=",
      "text/plain": [
       "<Figure size 1000x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10, 8))\n",
    "plt.plot(likev[:, 0], 2 * likev[:, 1])\n",
    "plt.xlabel(\"Variance of random intercept\", size=17)\n",
    "plt.ylabel(\"-2 times profile log likelihood\", size=17)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Here is a plot of the profile likelihood function. The profile likelihood plot shows that the MLE of the random slope variance parameter is a very small positive number, and that there is low uncertainty in this estimate."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-25T16:03:01.223470Z",
     "iopub.status.busy": "2025-01-25T16:03:01.223158Z",
     "iopub.status.idle": "2025-01-25T16:03:12.780642Z",
     "shell.execute_reply": "2025-01-25T16:03:12.779992Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "re = mdf.cov_re.iloc[1, 1]\n",
    "with warnings.catch_warnings():\n",
    "    # Parameter is often on the boundary\n",
    "    warnings.simplefilter(\"ignore\", ConvergenceWarning)\n",
    "    likev = mdf.profile_re(1, \"re\", dist_low=0.5 * re, dist_high=0.8 * re)\n",
    "\n",
    "plt.figure(figsize=(10, 8))\n",
    "plt.plot(likev[:, 0], 2 * likev[:, 1])\n",
    "plt.xlabel(\"Variance of random slope\", size=17)\n",
    "lbl = plt.ylabel(\"-2 times profile log likelihood\", size=17)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.16"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
