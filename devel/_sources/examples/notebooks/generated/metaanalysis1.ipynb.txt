{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Meta-Analysis in statsmodels\n",
    "\n",
    "Statsmodels include basic methods for meta-analysis. This notebook illustrates the current usage.\n",
    "\n",
    "Status: The results have been verified against R meta and metafor packages. However, the API is still experimental and will still change. Some options for additional methods that are available in R meta and metafor are missing.\n",
    "\n",
    "The support for meta-analysis has 3 parts:\n",
    "\n",
    "- effect size functions: this currently includes\n",
    "  ``effectsize_smd`` computes effect size and their standard errors for standardized mean difference,  \n",
    "  ``effectsize_2proportions`` computes effect sizes for comparing two independent proportions using risk difference, (log) risk ratio, (log) odds-ratio or arcsine square root transformation\n",
    "- The `combine_effects` computes fixed and random effects estimate for the overall mean or effect. The returned results instance includes a forest plot function.\n",
    "- helper functions to estimate the random effect variance, tau-squared\n",
    "\n",
    "The estimate of the overall effect size in `combine_effects` can also be performed using WLS or GLM with var_weights.\n",
    "\n",
    "Finally, the meta-analysis functions currently do not include the Mantel-Hanszel method. However, the fixed effects results can be computed directly using `StratifiedTable` as illustrated below."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-31T00:52:12.784827Z",
     "iopub.status.busy": "2023-12-31T00:52:12.784572Z",
     "iopub.status.idle": "2023-12-31T00:52:13.764112Z",
     "shell.execute_reply": "2023-12-31T00:52:13.763175Z"
    }
   },
   "outputs": [],
   "source": [
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-31T00:52:13.768554Z",
     "iopub.status.busy": "2023-12-31T00:52:13.767933Z",
     "iopub.status.idle": "2023-12-31T00:52:14.893744Z",
     "shell.execute_reply": "2023-12-31T00:52:14.892900Z"
    }
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "from scipy import stats, optimize\n",
    "\n",
    "from statsmodels.regression.linear_model import WLS\n",
    "from statsmodels.genmod.generalized_linear_model import GLM\n",
    "\n",
    "from statsmodels.stats.meta_analysis import (\n",
    "    effectsize_smd,\n",
    "    effectsize_2proportions,\n",
    "    combine_effects,\n",
    "    _fit_tau_iterative,\n",
    "    _fit_tau_mm,\n",
    "    _fit_tau_iter_mm,\n",
    ")\n",
    "\n",
    "# increase line length for pandas\n",
    "pd.set_option(\"display.width\", 100)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Example"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-31T00:52:14.897982Z",
     "iopub.status.busy": "2023-12-31T00:52:14.897527Z",
     "iopub.status.idle": "2023-12-31T00:52:14.928090Z",
     "shell.execute_reply": "2023-12-31T00:52:14.926678Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['Carroll', 'Grant', 'Peck', 'Donat', 'Stewart', 'Young']"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = [\n",
    "    [\"Carroll\", 94, 22, 60, 92, 20, 60],\n",
    "    [\"Grant\", 98, 21, 65, 92, 22, 65],\n",
    "    [\"Peck\", 98, 28, 40, 88, 26, 40],\n",
    "    [\"Donat\", 94, 19, 200, 82, 17, 200],\n",
    "    [\"Stewart\", 98, 21, 50, 88, 22, 45],\n",
    "    [\"Young\", 96, 21, 85, 92, 22, 85],\n",
    "]\n",
    "colnames = [\"study\", \"mean_t\", \"sd_t\", \"n_t\", \"mean_c\", \"sd_c\", \"n_c\"]\n",
    "rownames = [i[0] for i in data]\n",
    "dframe1 = pd.DataFrame(data, columns=colnames)\n",
    "rownames"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-31T00:52:14.933335Z",
     "iopub.status.busy": "2023-12-31T00:52:14.932991Z",
     "iopub.status.idle": "2023-12-31T00:52:14.943015Z",
     "shell.execute_reply": "2023-12-31T00:52:14.942088Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['Carroll', 'Grant', 'Peck', 'Donat', 'Stewart', 'Young']"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mean2, sd2, nobs2, mean1, sd1, nobs1 = np.asarray(\n",
    "    dframe1[[\"mean_t\", \"sd_t\", \"n_t\", \"mean_c\", \"sd_c\", \"n_c\"]]\n",
    ").T\n",
    "rownames = dframe1[\"study\"]\n",
    "rownames.tolist()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-31T00:52:14.951954Z",
     "iopub.status.busy": "2023-12-31T00:52:14.950670Z",
     "iopub.status.idle": "2023-12-31T00:52:14.963968Z",
     "shell.execute_reply": "2023-12-31T00:52:14.963062Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([120, 130,  80, 400,  95, 170])"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.array(nobs1 + nobs2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### estimate effect size standardized mean difference"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-31T00:52:14.969832Z",
     "iopub.status.busy": "2023-12-31T00:52:14.969207Z",
     "iopub.status.idle": "2023-12-31T00:52:14.979016Z",
     "shell.execute_reply": "2023-12-31T00:52:14.978034Z"
    }
   },
   "outputs": [],
   "source": [
    "eff, var_eff = effectsize_smd(mean2, sd2, nobs2, mean1, sd1, nobs1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Using one-step chi2, DerSimonian-Laird estimate for random effects variance tau\n",
    "\n",
    "Method option for random effect `method_re=\"chi2\"` or `method_re=\"dl\"`, both names are accepted.\n",
    "This is commonly referred to as the DerSimonian-Laird method, it is based on a moment estimator based on pearson chi2 from the fixed effects estimate."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-31T00:52:14.984330Z",
     "iopub.status.busy": "2023-12-31T00:52:14.982513Z",
     "iopub.status.idle": "2023-12-31T00:52:15.017912Z",
     "shell.execute_reply": "2023-12-31T00:52:15.016980Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                        eff    sd_eff    ci_low    ci_upp      w_fe      w_re\n",
      "Carroll            0.094524  0.182680 -0.267199  0.456248  0.123885  0.157529\n",
      "Grant              0.277356  0.176279 -0.071416  0.626129  0.133045  0.162828\n",
      "Peck               0.366546  0.225573 -0.082446  0.815538  0.081250  0.126223\n",
      "Donat              0.664385  0.102748  0.462389  0.866381  0.391606  0.232734\n",
      "Stewart            0.461808  0.208310  0.048203  0.875413  0.095275  0.137949\n",
      "Young              0.185165  0.153729 -0.118312  0.488641  0.174939  0.182736\n",
      "fixed effect       0.414961  0.064298  0.249677  0.580245  1.000000       NaN\n",
      "random effect      0.358486  0.105462  0.087388  0.629583       NaN  1.000000\n",
      "fixed effect wls   0.414961  0.099237  0.159864  0.670058  1.000000       NaN\n",
      "random effect wls  0.358486  0.090328  0.126290  0.590682       NaN  1.000000\n"
     ]
    }
   ],
   "source": [
    "res3 = combine_effects(eff, var_eff, method_re=\"chi2\", use_t=True, row_names=rownames)\n",
    "# TODO: we still need better information about conf_int of individual samples\n",
    "# We don't have enough information in the model for individual confidence intervals\n",
    "# if those are not based on normal distribution.\n",
    "res3.conf_int_samples(nobs=np.array(nobs1 + nobs2))\n",
    "print(res3.summary_frame())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-31T00:52:15.021251Z",
     "iopub.status.busy": "2023-12-31T00:52:15.020871Z",
     "iopub.status.idle": "2023-12-31T00:52:15.036146Z",
     "shell.execute_reply": "2023-12-31T00:52:15.035220Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{(0.05,\n",
       "  True): (array([-0.26719942, -0.07141628, -0.08244568,  0.46238908,  0.04820269,\n",
       "         -0.1183121 ]), array([0.45624817, 0.62612908, 0.81553838, 0.86638112, 0.87541326,\n",
       "         0.48864139]))}"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "res3.cache_ci"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-31T00:52:15.039414Z",
     "iopub.status.busy": "2023-12-31T00:52:15.039060Z",
     "iopub.status.idle": "2023-12-31T00:52:15.044331Z",
     "shell.execute_reply": "2023-12-31T00:52:15.043713Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'chi2'"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "res3.method_re"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-31T00:52:15.047009Z",
     "iopub.status.busy": "2023-12-31T00:52:15.046750Z",
     "iopub.status.idle": "2023-12-31T00:52:15.733295Z",
     "shell.execute_reply": "2023-12-31T00:52:15.732479Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 600x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = res3.plot_forest()\n",
    "fig.set_figheight(6)\n",
    "fig.set_figwidth(6)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-31T00:52:15.737098Z",
     "iopub.status.busy": "2023-12-31T00:52:15.736298Z",
     "iopub.status.idle": "2023-12-31T00:52:15.761946Z",
     "shell.execute_reply": "2023-12-31T00:52:15.761169Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                        eff    sd_eff    ci_low    ci_upp      w_fe      w_re\n",
      "Carroll            0.094524  0.182680 -0.263521  0.452570  0.123885  0.157529\n",
      "Grant              0.277356  0.176279 -0.068144  0.622857  0.133045  0.162828\n",
      "Peck               0.366546  0.225573 -0.075569  0.808662  0.081250  0.126223\n",
      "Donat              0.664385  0.102748  0.463002  0.865768  0.391606  0.232734\n",
      "Stewart            0.461808  0.208310  0.053527  0.870089  0.095275  0.137949\n",
      "Young              0.185165  0.153729 -0.116139  0.486468  0.174939  0.182736\n",
      "fixed effect       0.414961  0.064298  0.288939  0.540984  1.000000       NaN\n",
      "random effect      0.358486  0.105462  0.151785  0.565187       NaN  1.000000\n",
      "fixed effect wls   0.414961  0.099237  0.220460  0.609462  1.000000       NaN\n",
      "random effect wls  0.358486  0.090328  0.181446  0.535526       NaN  1.000000\n"
     ]
    }
   ],
   "source": [
    "res3 = combine_effects(eff, var_eff, method_re=\"chi2\", use_t=False, row_names=rownames)\n",
    "# TODO: we still need better information about conf_int of individual samples\n",
    "# We don't have enough information in the model for individual confidence intervals\n",
    "# if those are not based on normal distribution.\n",
    "res3.conf_int_samples(nobs=np.array(nobs1 + nobs2))\n",
    "print(res3.summary_frame())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Using iterated, Paule-Mandel estimate for random effects variance tau\n",
    "\n",
    "The method commonly referred to as Paule-Mandel estimate is a method of moment estimate for the random effects variance that iterates between mean and variance estimate until convergence.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-31T00:52:15.765646Z",
     "iopub.status.busy": "2023-12-31T00:52:15.765112Z",
     "iopub.status.idle": "2023-12-31T00:52:16.357569Z",
     "shell.execute_reply": "2023-12-31T00:52:16.356181Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "method RE: iterated\n",
      "                        eff    sd_eff    ci_low    ci_upp      w_fe      w_re\n",
      "Carroll            0.094524  0.182680 -0.263521  0.452570  0.123885  0.152619\n",
      "Grant              0.277356  0.176279 -0.068144  0.622857  0.133045  0.159157\n",
      "Peck               0.366546  0.225573 -0.075569  0.808662  0.081250  0.116228\n",
      "Donat              0.664385  0.102748  0.463002  0.865768  0.391606  0.257767\n",
      "Stewart            0.461808  0.208310  0.053527  0.870089  0.095275  0.129428\n",
      "Young              0.185165  0.153729 -0.116139  0.486468  0.174939  0.184799\n",
      "fixed effect       0.414961  0.064298  0.288939  0.540984  1.000000       NaN\n",
      "random effect      0.366419  0.092390  0.185338  0.547500       NaN  1.000000\n",
      "fixed effect wls   0.414961  0.099237  0.220460  0.609462  1.000000       NaN\n",
      "random effect wls  0.366419  0.092390  0.185338  0.547500       NaN  1.000000\n"
     ]
    },
    {
     "data": {
      "image/png": "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G/VwikitkWu3s2roULBYKDn1rrjz61OGDlXYFBG5TOrhlCpJ36UuZtJ3qYu76bvUpbZR4BSR2iknB5YuhZdeggMHflseHAwTJ8KoUeDr67byRERqEgVOEandDAOysuDkSfDxAX9/TRASEalgCpwiIiIiYipNGhIRERERUylwioiIiIipFDhFRERExFQKnCIiIiJiKgVOERERETGVAqeIiIiImEqBU0RERERMpcApIiIiIqZS4BQRERERUylwioiIiIipFDhFRERExFQKnCIiIiJiKgVOERERETGVAqeIiIiImEqBU0RERERMpcApIiIiIqZS4BQRERERUylwioiIiIipFDhFRERExFSe7i5ARESqEcOAzEw4dQq8vaFRI7BY3F2ViFRx6uEUEZFLy8mB5GQIDYWAAAgKOvd3aOi55Tk57q5QRKowi2EYhruLkMuzceNGpk+fzldffUWDBg3o168fs2fPxt/fv9JqiI2N5fjx47z//vuVdky5NMMwyMvLc3cZUs1ZNm6k7l13wZkz515f8LZhnO/d9PIif+VKjJtuckeJUsNYrVYs6jmvUTSkXs3985//ZODAgUydOpUFCxaQm5vLBx98wNGjRys1cErVlJeXR0JCgrvLkGosOD2d4cuXYxhGqUNi58Nn0enTeA4axIoRIzgQElK5RUqNEx8fj81mc3cZUoE0pF7NTZ48mbvvvpunn36aDh060LlzZ5588kkiIiIAOHz4MBaLhbVr13LLLbfg5eVF8+bN+eyzzwBISkoiMjISLy8vGjduzJgxY/j111+d+58xYwYREREkJiYSEBBAYGAgCxYscK6PjY3FYrGwZMkSPvjgAywWCxaLhRkzZlTqdRCRimdzOIhJSYGLhM0LeQAYBjEpKdgcjkqoTkSqEwXOauzo0aPs2bOHmJiYS7Z97LHHGDJkCLt37+bVV191fnLMzs5m5syZ7Nmzh/fff5/t27czadKkYtsePHiQ77//nm3bthEbG8uECRM4fvw4AMnJyWRkZBATE0OfPn3IyMggIyODRx99tOJPWEQqVae0NOrm57v8RuEB1M3Pp2NamplliUg1pCH1auyHH34AoFWrVgB8+umn9OvXD4D777+f2bNnO9sOHTqU++67D4CQC4a7/va3vzn/Ozg4mAceeIBZs2YVO46HhweJiYnYbDamTJnCc889x549e+jZ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cOC35cHBMHEijBoFLj5TWETMo8ApIiLVn2FAVhacPAk+PuDvrwlCIlWIAqeIiIiImEqThkRERETEVAqcIiIiImIqBU4RERERMZUCp4iIiIiYSoFTREREREylwCkiIiIiplLgFBERERFTKXCKiIiIiKkUOEVERETEVAqcIiIiImIqBU4RERERMZUCp4iIiIiYSoFTREREREylwCkiIiIiplLgFBERERFTKXCKiIiIiKkUOEVERETEVJ7uLkDEMAxOnjzp7jJERESkHHx8fLBYLH/YRoFT3O7kyZP4+vq6uwwREREphxMnTtCgQYM/bGMxDMOopHpESlUVezh//fVXWrVqxZEjRy75j0guTdezYul6Vixdz4ql61mxqsP1VA+nVAsWi6XK/iNq0KBBla2tOtL1rFi6nhVL17Ni6XpWrOp+PTVpSERERERMpcApIiIiIqZS4BQphc1mY/r06dhsNneXUiPoelYsXc+KpetZsXQ9K1ZNuZ6aNCQiIiIiplIPp4iIiIiYSoFTREREREylwCkiIiIiplLgFBERERFTKXCKAFlZWYwYMYIGDRrQsGFD7r33Xk6dOvWH7SdMmEB4eDh2u50rrriCiRMncuLEiUqsumqZN28ebdq0oV69ekRFRbFjx44/bP/WW2/Rrl076tWrR2RkJOvWraukSquHslzPBQsWcP311+Pn54efnx99+vS55PWvbcr683neypUrsVgs3HbbbeYWWM2U9Xrm5OTw0EMP0axZM2w2G2FhYfo3f4GyXs85c+Y4339atWrFpEmTOHv2bCVVW06GiBh9+/Y1OnbsaPz73/82Pv30UyMkJMQYNmzYRdvv2bPHuOOOO4y1a9ca6enpxqZNm4zQ0FDjT3/6UyVWXXWsXLnSsFqtxqJFi4yvv/7aGDt2rNGwYUPjp59+KrX9v/71L6NOnTrG888/b3zzzTfGE088YdStW9fYs2dPJVdeNZX1eg4fPtyYN2+e8eWXXxr79u0zYmNjDV9fX+PHH3+s5MqrprJez/MOHTpktGjRwrj++uuNwYMHV06x1UBZr2dubq5xzTXXGP379zdSU1ONQ4cOGVu3bjW++uqrSq68airr9Vy+fLlhs9mM5cuXG4cOHTL++c9/Gs2aNTMmTZpUyZWXjQKn1HrffPONARg7d+50Llu/fr1hsViM//73vy7vZ9WqVYbVajXy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",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "res4 = combine_effects(\n",
    "    eff, var_eff, method_re=\"iterated\", use_t=False, row_names=rownames\n",
    ")\n",
    "res4_df = res4.summary_frame()\n",
    "print(\"method RE:\", res4.method_re)\n",
    "print(res4.summary_frame())\n",
    "fig = res4.plot_forest()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Example Kacker interlaboratory mean\n",
    "\n",
    "In this example the effect size is the mean of measurements in a lab. We combine the estimates from several labs to estimate and overall average."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-31T00:52:16.365537Z",
     "iopub.status.busy": "2023-12-31T00:52:16.363550Z",
     "iopub.status.idle": "2023-12-31T00:52:16.374668Z",
     "shell.execute_reply": "2023-12-31T00:52:16.373798Z"
    }
   },
   "outputs": [],
   "source": [
    "eff = np.array([61.00, 61.40, 62.21, 62.30, 62.34, 62.60, 62.70, 62.84, 65.90])\n",
    "var_eff = np.array(\n",
    "    [0.2025, 1.2100, 0.0900, 0.2025, 0.3844, 0.5625, 0.0676, 0.0225, 1.8225]\n",
    ")\n",
    "rownames = [\"PTB\", \"NMi\", \"NIMC\", \"KRISS\", \"LGC\", \"NRC\", \"IRMM\", \"NIST\", \"LNE\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-31T00:52:16.386822Z",
     "iopub.status.busy": "2023-12-31T00:52:16.379333Z",
     "iopub.status.idle": "2023-12-31T00:52:17.258008Z",
     "shell.execute_reply": "2023-12-31T00:52:17.257027Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "method RE: dl\n",
      "                         eff    sd_eff     ci_low     ci_upp      w_fe      w_re\n",
      "PTB                61.000000  0.450000  60.118016  61.881984  0.057436  0.123113\n",
      "NMi                61.400000  1.100000  59.244040  63.555960  0.009612  0.040314\n",
      "NIMC               62.210000  0.300000  61.622011  62.797989  0.129230  0.159749\n",
      "KRISS              62.300000  0.450000  61.418016  63.181984  0.057436  0.123113\n",
      "LGC                62.340000  0.620000  61.124822  63.555178  0.030257  0.089810\n",
      "NRC                62.600000  0.750000  61.130027  64.069973  0.020677  0.071005\n",
      "IRMM               62.700000  0.260000  62.190409  63.209591  0.172052  0.169810\n",
      "NIST               62.840000  0.150000  62.546005  63.133995  0.516920  0.194471\n",
      "LNE                65.900000  1.350000  63.254049  68.545951  0.006382  0.028615\n",
      "fixed effect       62.583397  0.107846  62.334704  62.832090  1.000000       NaN\n",
      "random effect      62.390139  0.245750  61.823439  62.956838       NaN  1.000000\n",
      "fixed effect wls   62.583397  0.189889  62.145512  63.021282  1.000000       NaN\n",
      "random effect wls  62.390139  0.294776  61.710384  63.069893       NaN  1.000000\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/statsmodels/stats/meta_analysis.py:105: UserWarning: `use_t=True` requires `nobs` for each sample or `ci_func`. Using normal distribution for confidence interval of individual samples.\n",
      "  warnings.warn(msg)\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 600x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "res2_DL = combine_effects(eff, var_eff, method_re=\"dl\", use_t=True, row_names=rownames)\n",
    "print(\"method RE:\", res2_DL.method_re)\n",
    "print(res2_DL.summary_frame())\n",
    "fig = res2_DL.plot_forest()\n",
    "fig.set_figheight(6)\n",
    "fig.set_figwidth(6)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-31T00:52:17.263607Z",
     "iopub.status.busy": "2023-12-31T00:52:17.262375Z",
     "iopub.status.idle": "2023-12-31T00:52:17.916721Z",
     "shell.execute_reply": "2023-12-31T00:52:17.915437Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "method RE: pm\n",
      "                         eff    sd_eff     ci_low     ci_upp      w_fe      w_re\n",
      "PTB                61.000000  0.450000  60.118016  61.881984  0.057436  0.125857\n",
      "NMi                61.400000  1.100000  59.244040  63.555960  0.009612  0.059656\n",
      "NIMC               62.210000  0.300000  61.622011  62.797989  0.129230  0.143658\n",
      "KRISS              62.300000  0.450000  61.418016  63.181984  0.057436  0.125857\n",
      "LGC                62.340000  0.620000  61.124822  63.555178  0.030257  0.104850\n",
      "NRC                62.600000  0.750000  61.130027  64.069973  0.020677  0.090122\n",
      "IRMM               62.700000  0.260000  62.190409  63.209591  0.172052  0.147821\n",
      "NIST               62.840000  0.150000  62.546005  63.133995  0.516920  0.156980\n",
      "LNE                65.900000  1.350000  63.254049  68.545951  0.006382  0.045201\n",
      "fixed effect       62.583397  0.107846  62.334704  62.832090  1.000000       NaN\n",
      "random effect      62.407620  0.338030  61.628120  63.187119       NaN  1.000000\n",
      "fixed effect wls   62.583397  0.189889  62.145512  63.021282  1.000000       NaN\n",
      "random effect wls  62.407620  0.338030  61.628120  63.187120       NaN  1.000000\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/statsmodels/stats/meta_analysis.py:105: UserWarning: `use_t=True` requires `nobs` for each sample or `ci_func`. Using normal distribution for confidence interval of individual samples.\n",
      "  warnings.warn(msg)\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 600x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "res2_PM = combine_effects(eff, var_eff, method_re=\"pm\", use_t=True, row_names=rownames)\n",
    "print(\"method RE:\", res2_PM.method_re)\n",
    "print(res2_PM.summary_frame())\n",
    "fig = res2_PM.plot_forest()\n",
    "fig.set_figheight(6)\n",
    "fig.set_figwidth(6)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Meta-analysis of proportions\n",
    "\n",
    "In the following example the random effect variance tau is estimated to be zero. \n",
    "I then change two counts in the data, so the second example has random effects variance greater than zero."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-31T00:52:17.921798Z",
     "iopub.status.busy": "2023-12-31T00:52:17.920508Z",
     "iopub.status.idle": "2023-12-31T00:52:17.928867Z",
     "shell.execute_reply": "2023-12-31T00:52:17.927399Z"
    }
   },
   "outputs": [],
   "source": [
    "import io"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-31T00:52:17.933546Z",
     "iopub.status.busy": "2023-12-31T00:52:17.932334Z",
     "iopub.status.idle": "2023-12-31T00:52:17.954671Z",
     "shell.execute_reply": "2023-12-31T00:52:17.953053Z"
    }
   },
   "outputs": [],
   "source": [
    "ss = \"\"\"\\\n",
    "    study,nei,nci,e1i,c1i,e2i,c2i,e3i,c3i,e4i,c4i\n",
    "    1,19,22,16.0,20.0,11,12,4.0,8.0,4,3\n",
    "    2,34,35,22.0,22.0,18,12,15.0,8.0,15,6\n",
    "    3,72,68,44.0,40.0,21,15,10.0,3.0,3,0\n",
    "    4,22,20,19.0,12.0,14,5,5.0,4.0,2,3\n",
    "    5,70,32,62.0,27.0,42,13,26.0,6.0,15,5\n",
    "    6,183,94,130.0,65.0,80,33,47.0,14.0,30,11\n",
    "    7,26,50,24.0,30.0,13,18,5.0,10.0,3,9\n",
    "    8,61,55,51.0,44.0,37,30,19.0,19.0,11,15\n",
    "    9,36,25,30.0,17.0,23,12,13.0,4.0,10,4\n",
    "    10,45,35,43.0,35.0,19,14,8.0,4.0,6,0\n",
    "    11,246,208,169.0,139.0,106,76,67.0,42.0,51,35\n",
    "    12,386,141,279.0,97.0,170,46,97.0,21.0,73,8\n",
    "    13,59,32,56.0,30.0,34,17,21.0,9.0,20,7\n",
    "    14,45,15,42.0,10.0,18,3,9.0,1.0,9,1\n",
    "    15,14,18,14.0,18.0,13,14,12.0,13.0,9,12\n",
    "    16,26,19,21.0,15.0,12,10,6.0,4.0,5,1\n",
    "    17,74,75,,,42,40,,,23,30\"\"\"\n",
    "df3 = pd.read_csv(io.StringIO(ss))\n",
    "df_12y = df3[[\"e2i\", \"nei\", \"c2i\", \"nci\"]]\n",
    "# TODO: currently 1 is reference, switch labels\n",
    "count1, nobs1, count2, nobs2 = df_12y.values.T\n",
    "dta = df_12y.values.T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-31T00:52:17.959483Z",
     "iopub.status.busy": "2023-12-31T00:52:17.959002Z",
     "iopub.status.idle": "2023-12-31T00:52:17.970739Z",
     "shell.execute_reply": "2023-12-31T00:52:17.969694Z"
    }
   },
   "outputs": [],
   "source": [
    "eff, var_eff = effectsize_2proportions(*dta, statistic=\"rd\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-31T00:52:17.974871Z",
     "iopub.status.busy": "2023-12-31T00:52:17.974502Z",
     "iopub.status.idle": "2023-12-31T00:52:17.987039Z",
     "shell.execute_reply": "2023-12-31T00:52:17.986129Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([ 0.03349282,  0.18655462,  0.07107843,  0.38636364,  0.19375   ,\n",
       "         0.08609464,  0.14      ,  0.06110283,  0.15888889,  0.02222222,\n",
       "         0.06550969,  0.11417337,  0.04502119,  0.2       ,  0.15079365,\n",
       "        -0.06477733,  0.03423423]),\n",
       " array([0.02409958, 0.01376482, 0.00539777, 0.01989341, 0.01096641,\n",
       "        0.00376814, 0.01422338, 0.00842011, 0.01639261, 0.01227827,\n",
       "        0.00211165, 0.00219739, 0.01192067, 0.016     , 0.0143398 ,\n",
       "        0.02267994, 0.0066352 ]))"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "eff, var_eff"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-31T00:52:17.991153Z",
     "iopub.status.busy": "2023-12-31T00:52:17.990779Z",
     "iopub.status.idle": "2023-12-31T00:52:18.934394Z",
     "shell.execute_reply": "2023-12-31T00:52:18.933530Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "method RE: iterated\n",
      "RE variance tau2: 0\n",
      "                        eff    sd_eff    ci_low    ci_upp      w_fe      w_re\n",
      "0                  0.033493  0.155240 -0.270773  0.337758  0.017454  0.017454\n",
      "1                  0.186555  0.117324 -0.043395  0.416505  0.030559  0.030559\n",
      "2                  0.071078  0.073470 -0.072919  0.215076  0.077928  0.077928\n",
      "3                  0.386364  0.141044  0.109922  0.662805  0.021145  0.021145\n",
      "4                  0.193750  0.104721 -0.011499  0.398999  0.038357  0.038357\n",
      "5                  0.086095  0.061385 -0.034218  0.206407  0.111630  0.111630\n",
      "6                  0.140000  0.119262 -0.093749  0.373749  0.029574  0.029574\n",
      "7                  0.061103  0.091761 -0.118746  0.240951  0.049956  0.049956\n",
      "8                  0.158889  0.128034 -0.092052  0.409830  0.025660  0.025660\n",
      "9                  0.022222  0.110807 -0.194956  0.239401  0.034259  0.034259\n",
      "10                 0.065510  0.045953 -0.024556  0.155575  0.199199  0.199199\n",
      "11                 0.114173  0.046876  0.022297  0.206049  0.191426  0.191426\n",
      "12                 0.045021  0.109182 -0.168971  0.259014  0.035286  0.035286\n",
      "13                 0.200000  0.126491 -0.047918  0.447918  0.026290  0.026290\n",
      "14                 0.150794  0.119749 -0.083910  0.385497  0.029334  0.029334\n",
      "15                -0.064777  0.150599 -0.359945  0.230390  0.018547  0.018547\n",
      "16                 0.034234  0.081457 -0.125418  0.193887  0.063395  0.063395\n",
      "fixed effect       0.096212  0.020509  0.056014  0.136410  1.000000       NaN\n",
      "random effect      0.096212  0.020509  0.056014  0.136410       NaN  1.000000\n",
      "fixed effect wls   0.096212  0.016521  0.063831  0.128593  1.000000       NaN\n",
      "random effect wls  0.096212  0.016521  0.063831  0.128593       NaN  1.000000\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 600x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "res5 = combine_effects(\n",
    "    eff, var_eff, method_re=\"iterated\", use_t=False\n",
    ")  # , row_names=rownames)\n",
    "res5_df = res5.summary_frame()\n",
    "print(\"method RE:\", res5.method_re)\n",
    "print(\"RE variance tau2:\", res5.tau2)\n",
    "print(res5.summary_frame())\n",
    "fig = res5.plot_forest()\n",
    "fig.set_figheight(8)\n",
    "fig.set_figwidth(6)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### changing data to have positive random effects variance"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-31T00:52:18.939168Z",
     "iopub.status.busy": "2023-12-31T00:52:18.938502Z",
     "iopub.status.idle": "2023-12-31T00:52:18.948510Z",
     "shell.execute_reply": "2023-12-31T00:52:18.947607Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 18,  19,  12,  22],\n",
       "       [ 22,  34,  12,  35],\n",
       "       [ 21,  72,  15,  68],\n",
       "       [ 14,  22,   5,  20],\n",
       "       [ 42,  70,  13,  32],\n",
       "       [ 80, 183,  33,  94],\n",
       "       [ 13,  26,  18,  50],\n",
       "       [ 37,  61,  30,  55],\n",
       "       [ 23,  36,  12,  25],\n",
       "       [ 19,  45,  14,  35],\n",
       "       [106, 246,  76, 208],\n",
       "       [170, 386,  46, 141],\n",
       "       [ 34,  59,  17,  32],\n",
       "       [ 18,  45,   3,  15],\n",
       "       [ 13,  14,  14,  18],\n",
       "       [ 12,  26,  10,  19],\n",
       "       [ 42,  74,  40,  75]])"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dta_c = dta.copy()\n",
    "dta_c.T[0, 0] = 18\n",
    "dta_c.T[1, 0] = 22\n",
    "dta_c.T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-31T00:52:18.952125Z",
     "iopub.status.busy": "2023-12-31T00:52:18.951698Z",
     "iopub.status.idle": "2023-12-31T00:52:19.790851Z",
     "shell.execute_reply": "2023-12-31T00:52:19.790128Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "method RE: iterated\n",
      "                        eff    sd_eff    ci_low    ci_upp      w_fe      w_re\n",
      "0                  0.401914  0.117873  0.170887  0.632940  0.029850  0.038415\n",
      "1                  0.304202  0.114692  0.079410  0.528993  0.031529  0.040258\n",
      "2                  0.071078  0.073470 -0.072919  0.215076  0.076834  0.081017\n",
      "3                  0.386364  0.141044  0.109922  0.662805  0.020848  0.028013\n",
      "4                  0.193750  0.104721 -0.011499  0.398999  0.037818  0.046915\n",
      "5                  0.086095  0.061385 -0.034218  0.206407  0.110063  0.102907\n",
      "6                  0.140000  0.119262 -0.093749  0.373749  0.029159  0.037647\n",
      "7                  0.061103  0.091761 -0.118746  0.240951  0.049255  0.058097\n",
      "8                  0.158889  0.128034 -0.092052  0.409830  0.025300  0.033270\n",
      "9                  0.022222  0.110807 -0.194956  0.239401  0.033778  0.042683\n",
      "10                 0.065510  0.045953 -0.024556  0.155575  0.196403  0.141871\n",
      "11                 0.114173  0.046876  0.022297  0.206049  0.188739  0.139144\n",
      "12                 0.045021  0.109182 -0.168971  0.259014  0.034791  0.043759\n",
      "13                 0.200000  0.126491 -0.047918  0.447918  0.025921  0.033985\n",
      "14                 0.150794  0.119749 -0.083910  0.385497  0.028922  0.037383\n",
      "15                -0.064777  0.150599 -0.359945  0.230390  0.018286  0.024884\n",
      "16                 0.034234  0.081457 -0.125418  0.193887  0.062505  0.069751\n",
      "fixed effect       0.110252  0.020365  0.070337  0.150167  1.000000       NaN\n",
      "random effect      0.117633  0.024913  0.068804  0.166463       NaN  1.000000\n",
      "fixed effect wls   0.110252  0.022289  0.066567  0.153937  1.000000       NaN\n",
      "random effect wls  0.117633  0.024913  0.068804  0.166463       NaN  1.000000\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 600x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "eff, var_eff = effectsize_2proportions(*dta_c, statistic=\"rd\")\n",
    "res5 = combine_effects(\n",
    "    eff, var_eff, method_re=\"iterated\", use_t=False\n",
    ")  # , row_names=rownames)\n",
    "res5_df = res5.summary_frame()\n",
    "print(\"method RE:\", res5.method_re)\n",
    "print(res5.summary_frame())\n",
    "fig = res5.plot_forest()\n",
    "fig.set_figheight(8)\n",
    "fig.set_figwidth(6)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-31T00:52:19.794810Z",
     "iopub.status.busy": "2023-12-31T00:52:19.794167Z",
     "iopub.status.idle": "2023-12-31T00:52:20.722858Z",
     "shell.execute_reply": "2023-12-31T00:52:20.722101Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "method RE: chi2\n",
      "                        eff    sd_eff    ci_low    ci_upp      w_fe      w_re\n",
      "0                  0.401914  0.117873  0.170887  0.632940  0.029850  0.036114\n",
      "1                  0.304202  0.114692  0.079410  0.528993  0.031529  0.037940\n",
      "2                  0.071078  0.073470 -0.072919  0.215076  0.076834  0.080779\n",
      "3                  0.386364  0.141044  0.109922  0.662805  0.020848  0.025973\n",
      "4                  0.193750  0.104721 -0.011499  0.398999  0.037818  0.044614\n",
      "5                  0.086095  0.061385 -0.034218  0.206407  0.110063  0.105901\n",
      "6                  0.140000  0.119262 -0.093749  0.373749  0.029159  0.035356\n",
      "7                  0.061103  0.091761 -0.118746  0.240951  0.049255  0.056098\n",
      "8                  0.158889  0.128034 -0.092052  0.409830  0.025300  0.031063\n",
      "9                  0.022222  0.110807 -0.194956  0.239401  0.033778  0.040357\n",
      "10                 0.065510  0.045953 -0.024556  0.155575  0.196403  0.154854\n",
      "11                 0.114173  0.046876  0.022297  0.206049  0.188739  0.151236\n",
      "12                 0.045021  0.109182 -0.168971  0.259014  0.034791  0.041435\n",
      "13                 0.200000  0.126491 -0.047918  0.447918  0.025921  0.031761\n",
      "14                 0.150794  0.119749 -0.083910  0.385497  0.028922  0.035095\n",
      "15                -0.064777  0.150599 -0.359945  0.230390  0.018286  0.022976\n",
      "16                 0.034234  0.081457 -0.125418  0.193887  0.062505  0.068449\n",
      "fixed effect       0.110252  0.020365  0.070337  0.150167  1.000000       NaN\n",
      "random effect      0.115580  0.023557  0.069410  0.161751       NaN  1.000000\n",
      "fixed effect wls   0.110252  0.022289  0.066567  0.153937  1.000000       NaN\n",
      "random effect wls  0.115580  0.024241  0.068068  0.163093       NaN  1.000000\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 600x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "res5 = combine_effects(eff, var_eff, method_re=\"chi2\", use_t=False)\n",
    "res5_df = res5.summary_frame()\n",
    "print(\"method RE:\", res5.method_re)\n",
    "print(res5.summary_frame())\n",
    "fig = res5.plot_forest()\n",
    "fig.set_figheight(8)\n",
    "fig.set_figwidth(6)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Replicate fixed effect analysis using GLM with var_weights\n",
    "\n",
    "`combine_effects` computes weighted average estimates which can be replicated using GLM with var_weights or with WLS.\n",
    "The `scale` option in `GLM.fit` can be used to replicate fixed meta-analysis with fixed and with HKSJ/WLS scale"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-31T00:52:20.733335Z",
     "iopub.status.busy": "2023-12-31T00:52:20.727705Z",
     "iopub.status.idle": "2023-12-31T00:52:20.750046Z",
     "shell.execute_reply": "2023-12-31T00:52:20.749071Z"
    }
   },
   "outputs": [],
   "source": [
    "from statsmodels.genmod.generalized_linear_model import GLM"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-31T00:52:20.755285Z",
     "iopub.status.busy": "2023-12-31T00:52:20.754100Z",
     "iopub.status.idle": "2023-12-31T00:52:20.773852Z",
     "shell.execute_reply": "2023-12-31T00:52:20.773030Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                        eff    sd_eff    ci_low    ci_upp  w_fe  w_re\n",
      "fixed effect       0.428037  0.090287  0.251076  0.604997   1.0   NaN\n",
      "random effect      0.429520  0.091377  0.250425  0.608615   NaN   1.0\n",
      "fixed effect wls   0.428037  0.090798  0.250076  0.605997   1.0   NaN\n",
      "random effect wls  0.429520  0.091595  0.249997  0.609044   NaN   1.0\n"
     ]
    }
   ],
   "source": [
    "eff, var_eff = effectsize_2proportions(*dta_c, statistic=\"or\")\n",
    "res = combine_effects(eff, var_eff, method_re=\"chi2\", use_t=False)\n",
    "res_frame = res.summary_frame()\n",
    "print(res_frame.iloc[-4:])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We need to fix scale=1 in order to replicate standard errors for the usual meta-analysis."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-31T00:52:20.779363Z",
     "iopub.status.busy": "2023-12-31T00:52:20.778033Z",
     "iopub.status.idle": "2023-12-31T00:52:20.801875Z",
     "shell.execute_reply": "2023-12-31T00:52:20.801032Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "==============================================================================\n",
      "                 coef    std err          z      P>|z|      [0.025      0.975]\n",
      "------------------------------------------------------------------------------\n",
      "const          0.4280      0.090      4.741      0.000       0.251       0.605\n",
      "==============================================================================\n"
     ]
    }
   ],
   "source": [
    "weights = 1 / var_eff\n",
    "mod_glm = GLM(eff, np.ones(len(eff)), var_weights=weights)\n",
    "res_glm = mod_glm.fit(scale=1.0)\n",
    "print(res_glm.summary().tables[1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-31T00:52:20.807377Z",
     "iopub.status.busy": "2023-12-31T00:52:20.806082Z",
     "iopub.status.idle": "2023-12-31T00:52:20.816386Z",
     "shell.execute_reply": "2023-12-31T00:52:20.815726Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array(1.), array([[-5.55111512e-17,  0.00000000e+00]]))"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# check results\n",
    "res_glm.scale, res_glm.conf_int() - res_frame.loc[\n",
    "    \"fixed effect\", [\"ci_low\", \"ci_upp\"]\n",
    "].values"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Using HKSJ variance adjustment in meta-analysis is equivalent to estimating the scale using pearson chi2, which is also the default for the gaussian family."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-31T00:52:20.821709Z",
     "iopub.status.busy": "2023-12-31T00:52:20.820478Z",
     "iopub.status.idle": "2023-12-31T00:52:20.831308Z",
     "shell.execute_reply": "2023-12-31T00:52:20.830598Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "==============================================================================\n",
      "                 coef    std err          z      P>|z|      [0.025      0.975]\n",
      "------------------------------------------------------------------------------\n",
      "const          0.4280      0.091      4.714      0.000       0.250       0.606\n",
      "==============================================================================\n"
     ]
    }
   ],
   "source": [
    "res_glm = mod_glm.fit(scale=\"x2\")\n",
    "print(res_glm.summary().tables[1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-31T00:52:20.836873Z",
     "iopub.status.busy": "2023-12-31T00:52:20.835276Z",
     "iopub.status.idle": "2023-12-31T00:52:20.849075Z",
     "shell.execute_reply": "2023-12-31T00:52:20.848198Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1.0113358914264383, array([[-0.00100017,  0.00100017]]))"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# check results\n",
    "res_glm.scale, res_glm.conf_int() - res_frame.loc[\n",
    "    \"fixed effect\", [\"ci_low\", \"ci_upp\"]\n",
    "].values"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Mantel-Hanszel odds-ratio using contingency tables\n",
    "\n",
    "The fixed effect for the log-odds-ratio using the Mantel-Hanszel can be directly computed using StratifiedTable.\n",
    "\n",
    "We need to create a 2 x 2 x k contingency table to be used with `StratifiedTable`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-31T00:52:20.856294Z",
     "iopub.status.busy": "2023-12-31T00:52:20.854230Z",
     "iopub.status.idle": "2023-12-31T00:52:20.869442Z",
     "shell.execute_reply": "2023-12-31T00:52:20.868579Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[18,  1],\n",
       "       [12, 10]])"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "t, nt, c, nc = dta_c\n",
    "counts = np.column_stack([t, nt - t, c, nc - c])\n",
    "ctables = counts.T.reshape(2, 2, -1)\n",
    "ctables[:, :, 0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-31T00:52:20.876229Z",
     "iopub.status.busy": "2023-12-31T00:52:20.874388Z",
     "iopub.status.idle": "2023-12-31T00:52:20.886322Z",
     "shell.execute_reply": "2023-12-31T00:52:20.885530Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([18,  1, 12, 10])"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "counts[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-31T00:52:20.892872Z",
     "iopub.status.busy": "2023-12-31T00:52:20.891079Z",
     "iopub.status.idle": "2023-12-31T00:52:20.910370Z",
     "shell.execute_reply": "2023-12-31T00:52:20.909622Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([18, 19, 12, 22])"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dta_c.T[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-31T00:52:20.915578Z",
     "iopub.status.busy": "2023-12-31T00:52:20.914317Z",
     "iopub.status.idle": "2023-12-31T00:52:20.948639Z",
     "shell.execute_reply": "2023-12-31T00:52:20.947913Z"
    }
   },
   "outputs": [],
   "source": [
    "import statsmodels.stats.api as smstats"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-31T00:52:20.956410Z",
     "iopub.status.busy": "2023-12-31T00:52:20.953889Z",
     "iopub.status.idle": "2023-12-31T00:52:20.961707Z",
     "shell.execute_reply": "2023-12-31T00:52:20.961003Z"
    }
   },
   "outputs": [],
   "source": [
    "st = smstats.StratifiedTable(ctables.astype(np.float64))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "compare pooled log-odds-ratio and standard error to R meta package"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-31T00:52:20.967719Z",
     "iopub.status.busy": "2023-12-31T00:52:20.965894Z",
     "iopub.status.idle": "2023-12-31T00:52:20.978620Z",
     "shell.execute_reply": "2023-12-31T00:52:20.977908Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(0.4428186730553187, -2.220446049250313e-16)"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "st.logodds_pooled, st.logodds_pooled - 0.4428186730553189  # R meta"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-31T00:52:20.984287Z",
     "iopub.status.busy": "2023-12-31T00:52:20.982342Z",
     "iopub.status.idle": "2023-12-31T00:52:20.994590Z",
     "shell.execute_reply": "2023-12-31T00:52:20.993821Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(0.08928560091027186, 0.0)"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "st.logodds_pooled_se, st.logodds_pooled_se - 0.08928560091027186  # R meta"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-31T00:52:20.999613Z",
     "iopub.status.busy": "2023-12-31T00:52:20.998399Z",
     "iopub.status.idle": "2023-12-31T00:52:21.006624Z",
     "shell.execute_reply": "2023-12-31T00:52:21.005938Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(0.2678221109331691, 0.6178152351774683)"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "st.logodds_pooled_confint()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-31T00:52:21.011467Z",
     "iopub.status.busy": "2023-12-31T00:52:21.010255Z",
     "iopub.status.idle": "2023-12-31T00:52:21.017102Z",
     "shell.execute_reply": "2023-12-31T00:52:21.016432Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "pvalue      0.34496419319878724\n",
      "statistic   17.64707987033203\n"
     ]
    }
   ],
   "source": [
    "print(st.test_equal_odds())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-31T00:52:21.023740Z",
     "iopub.status.busy": "2023-12-31T00:52:21.021345Z",
     "iopub.status.idle": "2023-12-31T00:52:21.030706Z",
     "shell.execute_reply": "2023-12-31T00:52:21.030073Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "pvalue      6.615053645964153e-07\n",
      "statistic   24.724136624311814\n"
     ]
    }
   ],
   "source": [
    "print(st.test_null_odds())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "check conversion to stratified contingency table\n",
    "\n",
    "Row sums of each table are the sample sizes for treatment and control experiments"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-31T00:52:21.036692Z",
     "iopub.status.busy": "2023-12-31T00:52:21.035435Z",
     "iopub.status.idle": "2023-12-31T00:52:21.057785Z",
     "shell.execute_reply": "2023-12-31T00:52:21.057004Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 19,  34,  72,  22,  70, 183,  26,  61,  36,  45, 246, 386,  59,\n",
       "         45,  14,  26,  74],\n",
       "       [ 22,  35,  68,  20,  32,  94,  50,  55,  25,  35, 208, 141,  32,\n",
       "         15,  18,  19,  75]])"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ctables.sum(1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-31T00:52:21.062355Z",
     "iopub.status.busy": "2023-12-31T00:52:21.062013Z",
     "iopub.status.idle": "2023-12-31T00:52:21.070178Z",
     "shell.execute_reply": "2023-12-31T00:52:21.069533Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([ 19,  34,  72,  22,  70, 183,  26,  61,  36,  45, 246, 386,  59,\n",
       "         45,  14,  26,  74]),\n",
       " array([ 22,  35,  68,  20,  32,  94,  50,  55,  25,  35, 208, 141,  32,\n",
       "         15,  18,  19,  75]))"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "nt, nc"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Results from R meta package**\n",
    "\n",
    "```\n",
    "> res_mb_hk = metabin(e2i, nei, c2i, nci, data=dat2, sm=\"OR\", Q.Cochrane=FALSE, method=\"MH\", method.tau=\"DL\", hakn=FALSE, backtransf=FALSE)\n",
    "> res_mb_hk\n",
    "     logOR            95%-CI %W(fixed) %W(random)\n",
    "1   2.7081 [ 0.5265; 4.8896]       0.3        0.7\n",
    "2   1.2567 [ 0.2658; 2.2476]       2.1        3.2\n",
    "3   0.3749 [-0.3911; 1.1410]       5.4        5.4\n",
    "4   1.6582 [ 0.3245; 2.9920]       0.9        1.8\n",
    "5   0.7850 [-0.0673; 1.6372]       3.5        4.4\n",
    "6   0.3617 [-0.1528; 0.8762]      12.1       11.8\n",
    "7   0.5754 [-0.3861; 1.5368]       3.0        3.4\n",
    "8   0.2505 [-0.4881; 0.9892]       6.1        5.8\n",
    "9   0.6506 [-0.3877; 1.6889]       2.5        3.0\n",
    "10  0.0918 [-0.8067; 0.9903]       4.5        3.9\n",
    "11  0.2739 [-0.1047; 0.6525]      23.1       21.4\n",
    "12  0.4858 [ 0.0804; 0.8911]      18.6       18.8\n",
    "13  0.1823 [-0.6830; 1.0476]       4.6        4.2\n",
    "14  0.9808 [-0.4178; 2.3795]       1.3        1.6\n",
    "15  1.3122 [-1.0055; 3.6299]       0.4        0.6\n",
    "16 -0.2595 [-1.4450; 0.9260]       3.1        2.3\n",
    "17  0.1384 [-0.5076; 0.7844]       8.5        7.6\n",
    "\n",
    "Number of studies combined: k = 17\n",
    "\n",
    "                      logOR           95%-CI    z  p-value\n",
    "Fixed effect model   0.4428 [0.2678; 0.6178] 4.96 < 0.0001\n",
    "Random effects model 0.4295 [0.2504; 0.6086] 4.70 < 0.0001\n",
    "\n",
    "Quantifying heterogeneity:\n",
    " tau^2 = 0.0017 [0.0000; 0.4589]; tau = 0.0410 [0.0000; 0.6774];\n",
    " I^2 = 1.1% [0.0%; 51.6%]; H = 1.01 [1.00; 1.44]\n",
    "\n",
    "Test of heterogeneity:\n",
    "     Q d.f. p-value\n",
    " 16.18   16  0.4404\n",
    "\n",
    "Details on meta-analytical method:\n",
    "- Mantel-Haenszel method\n",
    "- DerSimonian-Laird estimator for tau^2\n",
    "- Jackson method for confidence interval of tau^2 and tau\n",
    "\n",
    "> res_mb_hk$TE.fixed\n",
    "[1] 0.4428186730553189\n",
    "> res_mb_hk$seTE.fixed\n",
    "[1] 0.08928560091027186\n",
    "> c(res_mb_hk$lower.fixed, res_mb_hk$upper.fixed)\n",
    "[1] 0.2678221109331694 0.6178152351774684\n",
    " \n",
    "```\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-31T00:52:21.074163Z",
     "iopub.status.busy": "2023-12-31T00:52:21.073626Z",
     "iopub.status.idle": "2023-12-31T00:52:21.096837Z",
     "shell.execute_reply": "2023-12-31T00:52:21.096140Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   Estimate   LCB    UCB \n",
      "-----------------------------------------\n",
      "Pooled odds           1.557   1.307 1.855\n",
      "Pooled log odds       0.443   0.268 0.618\n",
      "Pooled risk ratio     1.270              \n",
      "                                         \n",
      "                 Statistic P-value \n",
      "-----------------------------------\n",
      "Test of OR=1        24.724   0.000 \n",
      "Test constant OR    17.647   0.345 \n",
      "                       \n",
      "-----------------------\n",
      "Number of tables   17  \n",
      "Min n              32  \n",
      "Max n             527  \n",
      "Avg n             139  \n",
      "Total n          2362  \n",
      "-----------------------\n"
     ]
    }
   ],
   "source": [
    "print(st.summary())"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
