{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "8732de12-d3f2-4a09-8c39-e5c52a5ac94a",
   "metadata": {},
   "source": [
    "# Autoregressive Distributed Lag (ARDL) models\n",
    "\n",
    "\n",
    "## ARDL Models\n",
    "\n",
    "Autoregressive Distributed Lag (ARDL) models extend Autoregressive models with lags of explanatory variables. While ARDL models are technically AR-X models, the key difference is that ARDL models focus on the exogenous variables and selecting the correct lag structure from both the endogenous variable and the exogenous variables.  ARDL models are also closely related to Vector Autoregressions, and a single ARDL is effectively one row of a VAR.  The key distinction is that an ARDL assumes that the exogenous variables are exogenous in the sense that it is not necessary to include the endogenous variable as a predictor of the exogenous variables.\n",
    "\n",
    "The full specification of ARDL models is\n",
    "\n",
    "$$\n",
    "Y_t = \\underset{\\text{Constant and Trend}}{\\underbrace{\\delta_0 + \\delta_1 t + \\ldots + \\delta_k t^k}} \n",
    "      + \\underset{\\text{Seasonal}}{\\underbrace{\\sum_{i=0}^{s-1} \\gamma_i S_i}}\n",
    "      + \\underset{\\text{Autoregressive}}{\\underbrace{\\sum_{p=1}^P \\phi_p Y_{t-p}}}\n",
    "      + \\underset{\\text{Distributed Lag}}{\\underbrace{\\sum_{k=1}^M \\sum_{j=0}^{Q_k} \\beta_{k,j} X_{k, t-j}}}\n",
    "      + \\underset{\\text{Fixed}}{\\underbrace{Z_t \\Gamma}} + \\epsilon_t\n",
    "$$\n",
    "\n",
    "The terms in the model are:\n",
    "\n",
    "* $\\delta_i$: constant and deterministic time regressors.  Set using `trend`.\n",
    "* $S_i$ are seasonal dummies which are included if `seasonal=True`.\n",
    "* $X_{k,t-j}$ are the exogenous regressors. There are a number of formats that can be used to specify which lags are included. Note that the included lag lengths do no need to be the same. If `causal=True`, then the lags start with lag 1. Otherwise lags begin with 0 so that the model included the contemporaneous relationship between $Y_t$ and $X_t$.\n",
    "* $Z_t$ are any other fixed regressors that are not part of the distributed lag specification. In practice these regressors may be included when they do no contribute to the long run-relationship between $Y_t$ and the vector of exogenous variables $X_t$.\n",
    "* $\\{\\epsilon_t\\}$ is assumed to be a White Noise process"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "f7bb53a8-63a9-4f11-a9db-eb09280d457d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-12T16:59:39.777894Z",
     "iopub.status.busy": "2024-10-12T16:59:39.777610Z",
     "iopub.status.idle": "2024-10-12T16:59:43.711769Z",
     "shell.execute_reply": "2024-10-12T16:59:43.711098Z"
    }
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "\n",
    "sns.set_style(\"darkgrid\")\n",
    "sns.mpl.rc(\"figure\", figsize=(16, 6))\n",
    "sns.mpl.rc(\"font\", size=14)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f2df3123-3ef9-4bc5-bc3f-c2d3f2fe945d",
   "metadata": {},
   "source": [
    "### Data\n",
    "\n",
    "This notebook makes use of money demand data from Denmark, as first used in  S. Johansen and K. Juselius (1990).  The key variables are:\n",
    "\n",
    "* `lrm`: Log of real money measured using M2\n",
    "* `lry`: Log of real income\n",
    "* `ibo`: Interest rate on bonds\n",
    "* `ide`: Interest rate of bank deposits\n",
    "\n",
    "The standard model uses `lrm` as the dependent variable and the other three as exogenous drivers.\n",
    "\n",
    "Johansen, S. and Juselius, K. (1990), Maximum Likelihood Estimation and Inference on Cointegration – with Applications to the Demand for Money, Oxford Bulletin of Economics and Statistics, 52, 2, 169–210.\n",
    "\n",
    "We start by loading the data and examining it."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "e835b518-53f6-45de-9c93-d397eaa08831",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-12T16:59:43.715465Z",
     "iopub.status.busy": "2024-10-12T16:59:43.714580Z",
     "iopub.status.idle": "2024-10-12T16:59:44.355830Z",
     "shell.execute_reply": "2024-10-12T16:59:44.355190Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>lrm</th>\n",
       "      <th>lry</th>\n",
       "      <th>ibo</th>\n",
       "      <th>ide</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>period</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1986-07-01</th>\n",
       "      <td>12.056189</td>\n",
       "      <td>6.098992</td>\n",
       "      <td>0.111500</td>\n",
       "      <td>0.067941</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1986-10-01</th>\n",
       "      <td>12.071628</td>\n",
       "      <td>6.080706</td>\n",
       "      <td>0.114267</td>\n",
       "      <td>0.075396</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1987-01-01</th>\n",
       "      <td>12.027952</td>\n",
       "      <td>6.061175</td>\n",
       "      <td>0.119333</td>\n",
       "      <td>0.076653</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1987-04-01</th>\n",
       "      <td>12.039788</td>\n",
       "      <td>6.063730</td>\n",
       "      <td>0.117333</td>\n",
       "      <td>0.076259</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1987-07-01</th>\n",
       "      <td>12.015294</td>\n",
       "      <td>6.050830</td>\n",
       "      <td>0.118967</td>\n",
       "      <td>0.075163</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  lrm       lry       ibo       ide\n",
       "period                                             \n",
       "1986-07-01  12.056189  6.098992  0.111500  0.067941\n",
       "1986-10-01  12.071628  6.080706  0.114267  0.075396\n",
       "1987-01-01  12.027952  6.061175  0.119333  0.076653\n",
       "1987-04-01  12.039788  6.063730  0.117333  0.076259\n",
       "1987-07-01  12.015294  6.050830  0.118967  0.075163"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from statsmodels.datasets.danish_data import load\n",
    "from statsmodels.tsa.api import ARDL\n",
    "from statsmodels.tsa.ardl import ardl_select_order\n",
    "\n",
    "data = load().data\n",
    "data = data[[\"lrm\", \"lry\", \"ibo\", \"ide\"]]\n",
    "data.tail()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "32139ec2-4e69-4e53-a5b9-a6aef64edefe",
   "metadata": {},
   "source": [
    "We plot the demeaned data so that all series appear on the same scale. The `lrm` series appears to be non-stationary, as does `lry`. The stationarity of the other two is less obvious."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "6ca52a18-3752-4c65-9043-6c91ba543d44",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-12T16:59:44.359565Z",
     "iopub.status.busy": "2024-10-12T16:59:44.358727Z",
     "iopub.status.idle": "2024-10-12T16:59:45.375257Z",
     "shell.execute_reply": "2024-10-12T16:59:45.374543Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1600x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "_ = (data - data.mean()).plot()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "176dacd0-70c0-456a-969f-3c4ae980948f",
   "metadata": {},
   "source": [
    "### Model Selection\n",
    "\n",
    "`ardl_select_order` can be used to automatically select the order. Here we use min the minimum AIC among all modes that consider up to 3 lags of the endogenous variable and 3 lags of each exogenous variable. `trend=\"c\"` indicates that a constant should be included in the model."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "2da134f2-5cf5-484c-833e-b70ddef76d4d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-12T16:59:45.377933Z",
     "iopub.status.busy": "2024-10-12T16:59:45.377707Z",
     "iopub.status.idle": "2024-10-12T16:59:45.552664Z",
     "shell.execute_reply": "2024-10-12T16:59:45.552071Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The optimal order is: (3, 1, 3, 2)\n"
     ]
    }
   ],
   "source": [
    "sel_res = ardl_select_order(\n",
    "    data.lrm, 3, data[[\"lry\", \"ibo\", \"ide\"]], 3, ic=\"aic\", trend=\"c\"\n",
    ")\n",
    "print(f\"The optimal order is: {sel_res.model.ardl_order}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3ecf7091-5de4-4bbb-8952-326ca32b99b6",
   "metadata": {},
   "source": [
    "The optimal order is returned as the number of lags of the endogenous variable followed by each of the exogenous regressors.  The attribute `model` on `sel_res` contains the model `ARDL` specification which can be used to call `fit`. Here we look at the summary where the `L#` indicates that lag length (e.g., `L0` is no lag, i.e., $X_{k,t}$, `L2` is 2 lags, i.e., $X_{k,t-2}$)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "b5416d92-6b08-4b09-ac70-bccb4711dd7e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-12T16:59:45.555959Z",
     "iopub.status.busy": "2024-10-12T16:59:45.555125Z",
     "iopub.status.idle": "2024-10-12T16:59:45.638852Z",
     "shell.execute_reply": "2024-10-12T16:59:45.638271Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>ARDL Model Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>        <td>lrm</td>       <th>  No. Observations:  </th>    <td>55</td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>         <td>ARDL(3, 1, 3, 2)</td> <th>  Log Likelihood     </th>  <td>139.513</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>         <td>Conditional MLE</td> <th>  S.D. of innovations</th>   <td>0.017</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>          <td>Sat, 12 Oct 2024</td> <th>  AIC                </th> <td>-251.026</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>              <td>16:59:45</td>     <th>  BIC                </th> <td>-223.708</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Sample:</th>           <td>10-01-1974</td>    <th>  HQIC               </th> <td>-240.553</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th></th>                 <td>- 07-01-1987</td>   <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "     <td></td>       <th>coef</th>     <th>std err</th>      <th>z</th>      <th>P>|z|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th>  <td>    2.6202</td> <td>    0.568</td> <td>    4.615</td> <td> 0.000</td> <td>    1.472</td> <td>    3.769</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>lrm.L1</th> <td>    0.3192</td> <td>    0.137</td> <td>    2.336</td> <td> 0.025</td> <td>    0.043</td> <td>    0.596</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>lrm.L2</th> <td>    0.5326</td> <td>    0.132</td> <td>    4.024</td> <td> 0.000</td> <td>    0.265</td> <td>    0.800</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>lrm.L3</th> <td>   -0.2687</td> <td>    0.102</td> <td>   -2.631</td> <td> 0.012</td> <td>   -0.475</td> <td>   -0.062</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>lry.L0</th> <td>    0.6728</td> <td>    0.131</td> <td>    5.129</td> <td> 0.000</td> <td>    0.407</td> <td>    0.938</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>lry.L1</th> <td>   -0.2574</td> <td>    0.147</td> <td>   -1.749</td> <td> 0.088</td> <td>   -0.555</td> <td>    0.040</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>ibo.L0</th> <td>   -1.0785</td> <td>    0.322</td> <td>   -3.353</td> <td> 0.002</td> <td>   -1.729</td> <td>   -0.428</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>ibo.L1</th> <td>   -0.1062</td> <td>    0.586</td> <td>   -0.181</td> <td> 0.857</td> <td>   -1.291</td> <td>    1.079</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>ibo.L2</th> <td>    0.2877</td> <td>    0.569</td> <td>    0.505</td> <td> 0.616</td> <td>   -0.863</td> <td>    1.439</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>ibo.L3</th> <td>   -0.9947</td> <td>    0.393</td> <td>   -2.534</td> <td> 0.015</td> <td>   -1.789</td> <td>   -0.201</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>ide.L0</th> <td>    0.1255</td> <td>    0.554</td> <td>    0.226</td> <td> 0.822</td> <td>   -0.996</td> <td>    1.247</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>ide.L1</th> <td>   -0.3280</td> <td>    0.721</td> <td>   -0.455</td> <td> 0.652</td> <td>   -1.787</td> <td>    1.131</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>ide.L2</th> <td>    1.4079</td> <td>    0.552</td> <td>    2.550</td> <td> 0.015</td> <td>    0.291</td> <td>    2.524</td>\n",
       "</tr>\n",
       "</table>"
      ],
      "text/latex": [
       "\\begin{center}\n",
       "\\begin{tabular}{lclc}\n",
       "\\toprule\n",
       "\\textbf{Dep. Variable:} &       lrm        & \\textbf{  No. Observations:  } &     55      \\\\\n",
       "\\textbf{Model:}         & ARDL(3, 1, 3, 2) & \\textbf{  Log Likelihood     } &  139.513    \\\\\n",
       "\\textbf{Method:}        & Conditional MLE  & \\textbf{  S.D. of innovations} &   0.017     \\\\\n",
       "\\textbf{Date:}          & Sat, 12 Oct 2024 & \\textbf{  AIC                } &  -251.026   \\\\\n",
       "\\textbf{Time:}          &     16:59:45     & \\textbf{  BIC                } &  -223.708   \\\\\n",
       "\\textbf{Sample:}        &    10-01-1974    & \\textbf{  HQIC               } &  -240.553   \\\\\n",
       "\\textbf{}               &   - 07-01-1987   & \\textbf{                     } &             \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "\\begin{tabular}{lcccccc}\n",
       "                & \\textbf{coef} & \\textbf{std err} & \\textbf{z} & \\textbf{P$> |$z$|$} & \\textbf{[0.025} & \\textbf{0.975]}  \\\\\n",
       "\\midrule\n",
       "\\textbf{const}  &       2.6202  &        0.568     &     4.615  &         0.000        &        1.472    &        3.769     \\\\\n",
       "\\textbf{lrm.L1} &       0.3192  &        0.137     &     2.336  &         0.025        &        0.043    &        0.596     \\\\\n",
       "\\textbf{lrm.L2} &       0.5326  &        0.132     &     4.024  &         0.000        &        0.265    &        0.800     \\\\\n",
       "\\textbf{lrm.L3} &      -0.2687  &        0.102     &    -2.631  &         0.012        &       -0.475    &       -0.062     \\\\\n",
       "\\textbf{lry.L0} &       0.6728  &        0.131     &     5.129  &         0.000        &        0.407    &        0.938     \\\\\n",
       "\\textbf{lry.L1} &      -0.2574  &        0.147     &    -1.749  &         0.088        &       -0.555    &        0.040     \\\\\n",
       "\\textbf{ibo.L0} &      -1.0785  &        0.322     &    -3.353  &         0.002        &       -1.729    &       -0.428     \\\\\n",
       "\\textbf{ibo.L1} &      -0.1062  &        0.586     &    -0.181  &         0.857        &       -1.291    &        1.079     \\\\\n",
       "\\textbf{ibo.L2} &       0.2877  &        0.569     &     0.505  &         0.616        &       -0.863    &        1.439     \\\\\n",
       "\\textbf{ibo.L3} &      -0.9947  &        0.393     &    -2.534  &         0.015        &       -1.789    &       -0.201     \\\\\n",
       "\\textbf{ide.L0} &       0.1255  &        0.554     &     0.226  &         0.822        &       -0.996    &        1.247     \\\\\n",
       "\\textbf{ide.L1} &      -0.3280  &        0.721     &    -0.455  &         0.652        &       -1.787    &        1.131     \\\\\n",
       "\\textbf{ide.L2} &       1.4079  &        0.552     &     2.550  &         0.015        &        0.291    &        2.524     \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "%\\caption{ARDL Model Results}\n",
       "\\end{center}"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                              ARDL Model Results                              \n",
       "==============================================================================\n",
       "Dep. Variable:                    lrm   No. Observations:                   55\n",
       "Model:               ARDL(3, 1, 3, 2)   Log Likelihood                 139.513\n",
       "Method:               Conditional MLE   S.D. of innovations              0.017\n",
       "Date:                Sat, 12 Oct 2024   AIC                           -251.026\n",
       "Time:                        16:59:45   BIC                           -223.708\n",
       "Sample:                    10-01-1974   HQIC                          -240.553\n",
       "                         - 07-01-1987                                         \n",
       "==============================================================================\n",
       "                 coef    std err          z      P>|z|      [0.025      0.975]\n",
       "------------------------------------------------------------------------------\n",
       "const          2.6202      0.568      4.615      0.000       1.472       3.769\n",
       "lrm.L1         0.3192      0.137      2.336      0.025       0.043       0.596\n",
       "lrm.L2         0.5326      0.132      4.024      0.000       0.265       0.800\n",
       "lrm.L3        -0.2687      0.102     -2.631      0.012      -0.475      -0.062\n",
       "lry.L0         0.6728      0.131      5.129      0.000       0.407       0.938\n",
       "lry.L1        -0.2574      0.147     -1.749      0.088      -0.555       0.040\n",
       "ibo.L0        -1.0785      0.322     -3.353      0.002      -1.729      -0.428\n",
       "ibo.L1        -0.1062      0.586     -0.181      0.857      -1.291       1.079\n",
       "ibo.L2         0.2877      0.569      0.505      0.616      -0.863       1.439\n",
       "ibo.L3        -0.9947      0.393     -2.534      0.015      -1.789      -0.201\n",
       "ide.L0         0.1255      0.554      0.226      0.822      -0.996       1.247\n",
       "ide.L1        -0.3280      0.721     -0.455      0.652      -1.787       1.131\n",
       "ide.L2         1.4079      0.552      2.550      0.015       0.291       2.524\n",
       "==============================================================================\n",
       "\"\"\""
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "res = sel_res.model.fit()\n",
    "res.summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "65f52544-1804-4266-80ea-10556b315003",
   "metadata": {},
   "source": [
    "### Global searches\n",
    "\n",
    "The selection criteria can be switched the BIC which chooses a smaller model. Here we also use the `glob=True` option to perform a global search which considers models with any subset of lags up to the maximum lag allowed (3 here).  This option lets the model selection choose non-contiguous lag specifications."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "eb24d882-facd-4e61-ad72-0a2ac5e362c8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-12T16:59:45.642279Z",
     "iopub.status.busy": "2024-10-12T16:59:45.641431Z",
     "iopub.status.idle": "2024-10-12T16:59:56.439722Z",
     "shell.execute_reply": "2024-10-12T16:59:56.439076Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(3, 0, 3, 2)"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sel_res = ardl_select_order(\n",
    "    data.lrm, 3, data[[\"lry\", \"ibo\", \"ide\"]], 3, ic=\"bic\", trend=\"c\", glob=True\n",
    ")\n",
    "sel_res.model.ardl_order"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "39c7de3e-8370-4e9d-adbd-fa9ffcddaa8c",
   "metadata": {},
   "source": [
    "While the `ardl_order` shows the largest included lag of each variable, `ar_lags` and `dl_lags` show the specific lags included.  The AR component is regular in the sense that all 3 lags are included.  The DL component is not since `ibo` selects only lags 0 and 3 and ide selects only lags 2."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "51c98acb-9409-4305-85a0-c62bda98807b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-12T16:59:56.443261Z",
     "iopub.status.busy": "2024-10-12T16:59:56.442387Z",
     "iopub.status.idle": "2024-10-12T16:59:56.461958Z",
     "shell.execute_reply": "2024-10-12T16:59:56.461388Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1, 2, 3]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sel_res.model.ar_lags"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "546ec94c-6327-4d98-ad8e-a3d62961394b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-12T16:59:56.465141Z",
     "iopub.status.busy": "2024-10-12T16:59:56.464294Z",
     "iopub.status.idle": "2024-10-12T16:59:56.475660Z",
     "shell.execute_reply": "2024-10-12T16:59:56.475072Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'lry': [0], 'ibo': [0, 3], 'ide': [2]}"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sel_res.model.dl_lags"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "da5b5fcf-f2d0-41bb-8f08-5d3daff450ca",
   "metadata": {},
   "source": [
    "We can take a look at the best performing models according to the BIC which are stored in the `bic` property. `ibo` at lags 0 and 3 is consistently selected, as is `ide` at either lag 2 or 3, and `lry` at lag 0. The selected AR lags vary more, although all of the best specifications select some. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "b3b6f0bf-8408-466b-99c9-0bce16213fa9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-12T16:59:56.478921Z",
     "iopub.status.busy": "2024-10-12T16:59:56.478078Z",
     "iopub.status.idle": "2024-10-12T16:59:56.483619Z",
     "shell.execute_reply": "2024-10-12T16:59:56.483005Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1: ((1, 2, 3), {'lry': (0,), 'ibo': (0, 3), 'ide': (2,)})\n",
      "2: ((1, 2, 3), {'lry': (0, 1), 'ibo': (0, 3), 'ide': (2,)})\n",
      "3: ((2,), {'lry': (0,), 'ibo': (0, 3), 'ide': (3,)})\n",
      "4: ((1, 2, 3), {'lry': (0, 2), 'ibo': (0, 3), 'ide': (2,)})\n",
      "5: ((2,), {'lry': (0, 2), 'ibo': (0, 3), 'ide': (2,)})\n",
      "6: ((2,), {'lry': (0, 3), 'ibo': (0, 3), 'ide': (2,)})\n",
      "7: ((2, 3), {'lry': (0,), 'ibo': (0, 3), 'ide': (2,)})\n",
      "8: ((1, 2, 3), {'lry': (0,), 'ibo': (0, 3), 'ide': (2, 3)})\n",
      "9: ((2,), {'lry': (0,), 'ibo': (0, 3), 'ide': (2, 3)})\n",
      "10: ((1, 2), {'lry': (0,), 'ibo': (0, 3), 'ide': (3,)})\n"
     ]
    }
   ],
   "source": [
    "for i, val in enumerate(sel_res.bic.head(10)):\n",
    "    print(f\"{i+1}: {val}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b7b4151f-4308-4b97-a7b0-1a4a4e231d9f",
   "metadata": {},
   "source": [
    "### Direct Parameterization\n",
    "\n",
    "ARDL models can be directly specified using the `ARDL` class.  The first argument is the endogenous variable ($Y_t$). The second is the AR lags. It can be a constant, in which case lags 1, 2, ..., $P$ are included, or a list of specific lags indices to include (e.g., `[1, 4]`).  The third are the exogenous variables, and the fourth is the list of lags to include.  This can be one of\n",
    "\n",
    "* An `int`: Include lags 0, 1, ..., Q\n",
    "* A dict with column names when `exog` is a `DataFrame` or numeric column locations when `exog` is a NumPy array (e.g., `{0:1, 1: 2, 2:3}`, would match the specification below if a NumPy array was used.\n",
    "* A dict with column names (DataFrames) or integers (NumPy arrays) that contains a list of specific lags to include (e.g., `{\"lry\":[0,2], \"ibo\":[1,2]}`).\n",
    "\n",
    "The specification below matches that model selected by `ardl_select_order`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "edc6cca1-acda-4ff0-886a-fcb69866e077",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-12T16:59:56.486873Z",
     "iopub.status.busy": "2024-10-12T16:59:56.486013Z",
     "iopub.status.idle": "2024-10-12T16:59:56.588533Z",
     "shell.execute_reply": "2024-10-12T16:59:56.587935Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>ARDL Model Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>        <td>lrm</td>       <th>  No. Observations:  </th>    <td>55</td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>         <td>ARDL(2, 1, 2, 3)</td> <th>  Log Likelihood     </th>  <td>136.252</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>         <td>Conditional MLE</td> <th>  S.D. of innovations</th>   <td>0.019</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>          <td>Sat, 12 Oct 2024</td> <th>  AIC                </th> <td>-246.504</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>              <td>16:59:56</td>     <th>  BIC                </th> <td>-220.890</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Sample:</th>           <td>10-01-1974</td>    <th>  HQIC               </th> <td>-236.654</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th></th>                 <td>- 07-01-1987</td>   <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "     <td></td>       <th>coef</th>     <th>std err</th>      <th>z</th>      <th>P>|z|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th>  <td>    2.4440</td> <td>    0.546</td> <td>    4.479</td> <td> 0.000</td> <td>    1.342</td> <td>    3.546</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>lrm.L1</th> <td>    0.2695</td> <td>    0.139</td> <td>    1.944</td> <td> 0.059</td> <td>   -0.011</td> <td>    0.550</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>lrm.L2</th> <td>    0.3409</td> <td>    0.114</td> <td>    2.993</td> <td> 0.005</td> <td>    0.111</td> <td>    0.571</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>lry.L0</th> <td>    0.6344</td> <td>    0.145</td> <td>    4.368</td> <td> 0.000</td> <td>    0.341</td> <td>    0.928</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>lry.L1</th> <td>   -0.2426</td> <td>    0.159</td> <td>   -1.527</td> <td> 0.134</td> <td>   -0.563</td> <td>    0.078</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>ibo.L0</th> <td>   -1.1316</td> <td>    0.359</td> <td>   -3.157</td> <td> 0.003</td> <td>   -1.856</td> <td>   -0.408</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>ibo.L1</th> <td>    0.1056</td> <td>    0.640</td> <td>    0.165</td> <td> 0.870</td> <td>   -1.186</td> <td>    1.397</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>ibo.L2</th> <td>   -0.8347</td> <td>    0.497</td> <td>   -1.679</td> <td> 0.101</td> <td>   -1.839</td> <td>    0.170</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>ide.L0</th> <td>    0.2849</td> <td>    0.614</td> <td>    0.464</td> <td> 0.645</td> <td>   -0.954</td> <td>    1.524</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>ide.L1</th> <td>    0.0433</td> <td>    0.805</td> <td>    0.054</td> <td> 0.957</td> <td>   -1.582</td> <td>    1.669</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>ide.L2</th> <td>    0.4429</td> <td>    0.770</td> <td>    0.575</td> <td> 0.568</td> <td>   -1.112</td> <td>    1.998</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>ide.L3</th> <td>    0.3671</td> <td>    0.515</td> <td>    0.713</td> <td> 0.480</td> <td>   -0.673</td> <td>    1.408</td>\n",
       "</tr>\n",
       "</table>"
      ],
      "text/latex": [
       "\\begin{center}\n",
       "\\begin{tabular}{lclc}\n",
       "\\toprule\n",
       "\\textbf{Dep. Variable:} &       lrm        & \\textbf{  No. Observations:  } &     55      \\\\\n",
       "\\textbf{Model:}         & ARDL(2, 1, 2, 3) & \\textbf{  Log Likelihood     } &  136.252    \\\\\n",
       "\\textbf{Method:}        & Conditional MLE  & \\textbf{  S.D. of innovations} &   0.019     \\\\\n",
       "\\textbf{Date:}          & Sat, 12 Oct 2024 & \\textbf{  AIC                } &  -246.504   \\\\\n",
       "\\textbf{Time:}          &     16:59:56     & \\textbf{  BIC                } &  -220.890   \\\\\n",
       "\\textbf{Sample:}        &    10-01-1974    & \\textbf{  HQIC               } &  -236.654   \\\\\n",
       "\\textbf{}               &   - 07-01-1987   & \\textbf{                     } &             \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "\\begin{tabular}{lcccccc}\n",
       "                & \\textbf{coef} & \\textbf{std err} & \\textbf{z} & \\textbf{P$> |$z$|$} & \\textbf{[0.025} & \\textbf{0.975]}  \\\\\n",
       "\\midrule\n",
       "\\textbf{const}  &       2.4440  &        0.546     &     4.479  &         0.000        &        1.342    &        3.546     \\\\\n",
       "\\textbf{lrm.L1} &       0.2695  &        0.139     &     1.944  &         0.059        &       -0.011    &        0.550     \\\\\n",
       "\\textbf{lrm.L2} &       0.3409  &        0.114     &     2.993  &         0.005        &        0.111    &        0.571     \\\\\n",
       "\\textbf{lry.L0} &       0.6344  &        0.145     &     4.368  &         0.000        &        0.341    &        0.928     \\\\\n",
       "\\textbf{lry.L1} &      -0.2426  &        0.159     &    -1.527  &         0.134        &       -0.563    &        0.078     \\\\\n",
       "\\textbf{ibo.L0} &      -1.1316  &        0.359     &    -3.157  &         0.003        &       -1.856    &       -0.408     \\\\\n",
       "\\textbf{ibo.L1} &       0.1056  &        0.640     &     0.165  &         0.870        &       -1.186    &        1.397     \\\\\n",
       "\\textbf{ibo.L2} &      -0.8347  &        0.497     &    -1.679  &         0.101        &       -1.839    &        0.170     \\\\\n",
       "\\textbf{ide.L0} &       0.2849  &        0.614     &     0.464  &         0.645        &       -0.954    &        1.524     \\\\\n",
       "\\textbf{ide.L1} &       0.0433  &        0.805     &     0.054  &         0.957        &       -1.582    &        1.669     \\\\\n",
       "\\textbf{ide.L2} &       0.4429  &        0.770     &     0.575  &         0.568        &       -1.112    &        1.998     \\\\\n",
       "\\textbf{ide.L3} &       0.3671  &        0.515     &     0.713  &         0.480        &       -0.673    &        1.408     \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "%\\caption{ARDL Model Results}\n",
       "\\end{center}"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                              ARDL Model Results                              \n",
       "==============================================================================\n",
       "Dep. Variable:                    lrm   No. Observations:                   55\n",
       "Model:               ARDL(2, 1, 2, 3)   Log Likelihood                 136.252\n",
       "Method:               Conditional MLE   S.D. of innovations              0.019\n",
       "Date:                Sat, 12 Oct 2024   AIC                           -246.504\n",
       "Time:                        16:59:56   BIC                           -220.890\n",
       "Sample:                    10-01-1974   HQIC                          -236.654\n",
       "                         - 07-01-1987                                         \n",
       "==============================================================================\n",
       "                 coef    std err          z      P>|z|      [0.025      0.975]\n",
       "------------------------------------------------------------------------------\n",
       "const          2.4440      0.546      4.479      0.000       1.342       3.546\n",
       "lrm.L1         0.2695      0.139      1.944      0.059      -0.011       0.550\n",
       "lrm.L2         0.3409      0.114      2.993      0.005       0.111       0.571\n",
       "lry.L0         0.6344      0.145      4.368      0.000       0.341       0.928\n",
       "lry.L1        -0.2426      0.159     -1.527      0.134      -0.563       0.078\n",
       "ibo.L0        -1.1316      0.359     -3.157      0.003      -1.856      -0.408\n",
       "ibo.L1         0.1056      0.640      0.165      0.870      -1.186       1.397\n",
       "ibo.L2        -0.8347      0.497     -1.679      0.101      -1.839       0.170\n",
       "ide.L0         0.2849      0.614      0.464      0.645      -0.954       1.524\n",
       "ide.L1         0.0433      0.805      0.054      0.957      -1.582       1.669\n",
       "ide.L2         0.4429      0.770      0.575      0.568      -1.112       1.998\n",
       "ide.L3         0.3671      0.515      0.713      0.480      -0.673       1.408\n",
       "==============================================================================\n",
       "\"\"\""
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "res = ARDL(\n",
    "    data.lrm, 2, data[[\"lry\", \"ibo\", \"ide\"]], {\"lry\": 1, \"ibo\": 2, \"ide\": 3}, trend=\"c\"\n",
    ").fit()\n",
    "res.summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9c879d6b-da6e-4fd7-b6fd-28d1f334d397",
   "metadata": {},
   "source": [
    "### NumPy Data\n",
    "\n",
    "Below we see how the specification of ARDL models differs when using NumPy arrays.  The key difference is that the keys in the dictionary are now integers which indicate the column of `x` to use. This model is identical to the previously fit model and all key value match exactly (e.g., Log Likelihood)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "3fcbead5-eef8-431a-83cc-6333dc1257e8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-12T16:59:56.591881Z",
     "iopub.status.busy": "2024-10-12T16:59:56.591005Z",
     "iopub.status.idle": "2024-10-12T16:59:56.669100Z",
     "shell.execute_reply": "2024-10-12T16:59:56.668520Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>ARDL Model Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>         <td>y</td>        <th>  No. Observations:  </th>    <td>55</td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>         <td>ARDL(2, 1, 2, 3)</td> <th>  Log Likelihood     </th>  <td>136.252</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>         <td>Conditional MLE</td> <th>  S.D. of innovations</th>   <td>0.019</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>          <td>Sat, 12 Oct 2024</td> <th>  AIC                </th> <td>-246.504</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>              <td>16:59:56</td>     <th>  BIC                </th> <td>-220.890</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Sample:</th>                <td>3</td>        <th>  HQIC               </th> <td>-236.654</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th></th>                      <td>55</td>        <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "    <td></td>       <th>coef</th>     <th>std err</th>      <th>z</th>      <th>P>|z|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th> <td>    2.4440</td> <td>    0.546</td> <td>    4.479</td> <td> 0.000</td> <td>    1.342</td> <td>    3.546</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>y.L1</th>  <td>    0.2695</td> <td>    0.139</td> <td>    1.944</td> <td> 0.059</td> <td>   -0.011</td> <td>    0.550</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>y.L2</th>  <td>    0.3409</td> <td>    0.114</td> <td>    2.993</td> <td> 0.005</td> <td>    0.111</td> <td>    0.571</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x0.L0</th> <td>    0.6344</td> <td>    0.145</td> <td>    4.368</td> <td> 0.000</td> <td>    0.341</td> <td>    0.928</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x0.L1</th> <td>   -0.2426</td> <td>    0.159</td> <td>   -1.527</td> <td> 0.134</td> <td>   -0.563</td> <td>    0.078</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1.L0</th> <td>   -1.1316</td> <td>    0.359</td> <td>   -3.157</td> <td> 0.003</td> <td>   -1.856</td> <td>   -0.408</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1.L1</th> <td>    0.1056</td> <td>    0.640</td> <td>    0.165</td> <td> 0.870</td> <td>   -1.186</td> <td>    1.397</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1.L2</th> <td>   -0.8347</td> <td>    0.497</td> <td>   -1.679</td> <td> 0.101</td> <td>   -1.839</td> <td>    0.170</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x2.L0</th> <td>    0.2849</td> <td>    0.614</td> <td>    0.464</td> <td> 0.645</td> <td>   -0.954</td> <td>    1.524</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x2.L1</th> <td>    0.0433</td> <td>    0.805</td> <td>    0.054</td> <td> 0.957</td> <td>   -1.582</td> <td>    1.669</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x2.L2</th> <td>    0.4429</td> <td>    0.770</td> <td>    0.575</td> <td> 0.568</td> <td>   -1.112</td> <td>    1.998</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x2.L3</th> <td>    0.3671</td> <td>    0.515</td> <td>    0.713</td> <td> 0.480</td> <td>   -0.673</td> <td>    1.408</td>\n",
       "</tr>\n",
       "</table>"
      ],
      "text/latex": [
       "\\begin{center}\n",
       "\\begin{tabular}{lclc}\n",
       "\\toprule\n",
       "\\textbf{Dep. Variable:} &        y         & \\textbf{  No. Observations:  } &     55      \\\\\n",
       "\\textbf{Model:}         & ARDL(2, 1, 2, 3) & \\textbf{  Log Likelihood     } &  136.252    \\\\\n",
       "\\textbf{Method:}        & Conditional MLE  & \\textbf{  S.D. of innovations} &   0.019     \\\\\n",
       "\\textbf{Date:}          & Sat, 12 Oct 2024 & \\textbf{  AIC                } &  -246.504   \\\\\n",
       "\\textbf{Time:}          &     16:59:56     & \\textbf{  BIC                } &  -220.890   \\\\\n",
       "\\textbf{Sample:}        &        3         & \\textbf{  HQIC               } &  -236.654   \\\\\n",
       "\\textbf{}               &        55        & \\textbf{                     } &             \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "\\begin{tabular}{lcccccc}\n",
       "               & \\textbf{coef} & \\textbf{std err} & \\textbf{z} & \\textbf{P$> |$z$|$} & \\textbf{[0.025} & \\textbf{0.975]}  \\\\\n",
       "\\midrule\n",
       "\\textbf{const} &       2.4440  &        0.546     &     4.479  &         0.000        &        1.342    &        3.546     \\\\\n",
       "\\textbf{y.L1}  &       0.2695  &        0.139     &     1.944  &         0.059        &       -0.011    &        0.550     \\\\\n",
       "\\textbf{y.L2}  &       0.3409  &        0.114     &     2.993  &         0.005        &        0.111    &        0.571     \\\\\n",
       "\\textbf{x0.L0} &       0.6344  &        0.145     &     4.368  &         0.000        &        0.341    &        0.928     \\\\\n",
       "\\textbf{x0.L1} &      -0.2426  &        0.159     &    -1.527  &         0.134        &       -0.563    &        0.078     \\\\\n",
       "\\textbf{x1.L0} &      -1.1316  &        0.359     &    -3.157  &         0.003        &       -1.856    &       -0.408     \\\\\n",
       "\\textbf{x1.L1} &       0.1056  &        0.640     &     0.165  &         0.870        &       -1.186    &        1.397     \\\\\n",
       "\\textbf{x1.L2} &      -0.8347  &        0.497     &    -1.679  &         0.101        &       -1.839    &        0.170     \\\\\n",
       "\\textbf{x2.L0} &       0.2849  &        0.614     &     0.464  &         0.645        &       -0.954    &        1.524     \\\\\n",
       "\\textbf{x2.L1} &       0.0433  &        0.805     &     0.054  &         0.957        &       -1.582    &        1.669     \\\\\n",
       "\\textbf{x2.L2} &       0.4429  &        0.770     &     0.575  &         0.568        &       -1.112    &        1.998     \\\\\n",
       "\\textbf{x2.L3} &       0.3671  &        0.515     &     0.713  &         0.480        &       -0.673    &        1.408     \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "%\\caption{ARDL Model Results}\n",
       "\\end{center}"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                              ARDL Model Results                              \n",
       "==============================================================================\n",
       "Dep. Variable:                      y   No. Observations:                   55\n",
       "Model:               ARDL(2, 1, 2, 3)   Log Likelihood                 136.252\n",
       "Method:               Conditional MLE   S.D. of innovations              0.019\n",
       "Date:                Sat, 12 Oct 2024   AIC                           -246.504\n",
       "Time:                        16:59:56   BIC                           -220.890\n",
       "Sample:                             3   HQIC                          -236.654\n",
       "                                   55                                         \n",
       "==============================================================================\n",
       "                 coef    std err          z      P>|z|      [0.025      0.975]\n",
       "------------------------------------------------------------------------------\n",
       "const          2.4440      0.546      4.479      0.000       1.342       3.546\n",
       "y.L1           0.2695      0.139      1.944      0.059      -0.011       0.550\n",
       "y.L2           0.3409      0.114      2.993      0.005       0.111       0.571\n",
       "x0.L0          0.6344      0.145      4.368      0.000       0.341       0.928\n",
       "x0.L1         -0.2426      0.159     -1.527      0.134      -0.563       0.078\n",
       "x1.L0         -1.1316      0.359     -3.157      0.003      -1.856      -0.408\n",
       "x1.L1          0.1056      0.640      0.165      0.870      -1.186       1.397\n",
       "x1.L2         -0.8347      0.497     -1.679      0.101      -1.839       0.170\n",
       "x2.L0          0.2849      0.614      0.464      0.645      -0.954       1.524\n",
       "x2.L1          0.0433      0.805      0.054      0.957      -1.582       1.669\n",
       "x2.L2          0.4429      0.770      0.575      0.568      -1.112       1.998\n",
       "x2.L3          0.3671      0.515      0.713      0.480      -0.673       1.408\n",
       "==============================================================================\n",
       "\"\"\""
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y = np.asarray(data.lrm)\n",
    "x = np.asarray(data[[\"lry\", \"ibo\", \"ide\"]])\n",
    "res = ARDL(y, 2, x, {0: 1, 1: 2, 2: 3}, trend=\"c\").fit()\n",
    "res.summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b9c00153-e811-4482-bfdc-b319a440e27b",
   "metadata": {},
   "source": [
    "### Causal models\n",
    "\n",
    "Using the `causal=True` flag eliminates lag 0 from the DL components, so that all variables included in the model are known at time $t-1$ when modeling $Y_t$."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "e29bae15-3ad8-4614-a0e7-5e4ed9022d96",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-12T16:59:56.672400Z",
     "iopub.status.busy": "2024-10-12T16:59:56.671514Z",
     "iopub.status.idle": "2024-10-12T16:59:56.750396Z",
     "shell.execute_reply": "2024-10-12T16:59:56.749819Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>ARDL Model Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>        <td>lrm</td>       <th>  No. Observations:  </th>    <td>55</td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>         <td>ARDL(2, 1, 2, 3)</td> <th>  Log Likelihood     </th>  <td>121.130</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>         <td>Conditional MLE</td> <th>  S.D. of innovations</th>   <td>0.025</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>          <td>Sat, 12 Oct 2024</td> <th>  AIC                </th> <td>-222.260</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>              <td>16:59:56</td>     <th>  BIC                </th> <td>-202.557</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Sample:</th>           <td>10-01-1974</td>    <th>  HQIC               </th> <td>-214.683</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th></th>                 <td>- 07-01-1987</td>   <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "     <td></td>       <th>coef</th>     <th>std err</th>      <th>z</th>      <th>P>|z|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th>  <td>    2.3885</td> <td>    0.696</td> <td>    3.434</td> <td> 0.001</td> <td>    0.987</td> <td>    3.790</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>lrm.L1</th> <td>    0.4294</td> <td>    0.169</td> <td>    2.538</td> <td> 0.015</td> <td>    0.088</td> <td>    0.770</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>lrm.L2</th> <td>    0.2777</td> <td>    0.139</td> <td>    2.003</td> <td> 0.051</td> <td>   -0.002</td> <td>    0.557</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>lry.L1</th> <td>    0.2064</td> <td>    0.139</td> <td>    1.481</td> <td> 0.146</td> <td>   -0.074</td> <td>    0.487</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>ibo.L1</th> <td>   -1.2787</td> <td>    0.467</td> <td>   -2.736</td> <td> 0.009</td> <td>   -2.221</td> <td>   -0.337</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>ibo.L2</th> <td>   -0.3403</td> <td>    0.568</td> <td>   -0.600</td> <td> 0.552</td> <td>   -1.484</td> <td>    0.804</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>ide.L1</th> <td>   -0.1234</td> <td>    0.746</td> <td>   -0.165</td> <td> 0.869</td> <td>   -1.627</td> <td>    1.380</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>ide.L2</th> <td>    0.5001</td> <td>    0.978</td> <td>    0.511</td> <td> 0.612</td> <td>   -1.471</td> <td>    2.472</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>ide.L3</th> <td>    0.6106</td> <td>    0.656</td> <td>    0.931</td> <td> 0.357</td> <td>   -0.711</td> <td>    1.933</td>\n",
       "</tr>\n",
       "</table>"
      ],
      "text/latex": [
       "\\begin{center}\n",
       "\\begin{tabular}{lclc}\n",
       "\\toprule\n",
       "\\textbf{Dep. Variable:} &       lrm        & \\textbf{  No. Observations:  } &     55      \\\\\n",
       "\\textbf{Model:}         & ARDL(2, 1, 2, 3) & \\textbf{  Log Likelihood     } &  121.130    \\\\\n",
       "\\textbf{Method:}        & Conditional MLE  & \\textbf{  S.D. of innovations} &   0.025     \\\\\n",
       "\\textbf{Date:}          & Sat, 12 Oct 2024 & \\textbf{  AIC                } &  -222.260   \\\\\n",
       "\\textbf{Time:}          &     16:59:56     & \\textbf{  BIC                } &  -202.557   \\\\\n",
       "\\textbf{Sample:}        &    10-01-1974    & \\textbf{  HQIC               } &  -214.683   \\\\\n",
       "\\textbf{}               &   - 07-01-1987   & \\textbf{                     } &             \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "\\begin{tabular}{lcccccc}\n",
       "                & \\textbf{coef} & \\textbf{std err} & \\textbf{z} & \\textbf{P$> |$z$|$} & \\textbf{[0.025} & \\textbf{0.975]}  \\\\\n",
       "\\midrule\n",
       "\\textbf{const}  &       2.3885  &        0.696     &     3.434  &         0.001        &        0.987    &        3.790     \\\\\n",
       "\\textbf{lrm.L1} &       0.4294  &        0.169     &     2.538  &         0.015        &        0.088    &        0.770     \\\\\n",
       "\\textbf{lrm.L2} &       0.2777  &        0.139     &     2.003  &         0.051        &       -0.002    &        0.557     \\\\\n",
       "\\textbf{lry.L1} &       0.2064  &        0.139     &     1.481  &         0.146        &       -0.074    &        0.487     \\\\\n",
       "\\textbf{ibo.L1} &      -1.2787  &        0.467     &    -2.736  &         0.009        &       -2.221    &       -0.337     \\\\\n",
       "\\textbf{ibo.L2} &      -0.3403  &        0.568     &    -0.600  &         0.552        &       -1.484    &        0.804     \\\\\n",
       "\\textbf{ide.L1} &      -0.1234  &        0.746     &    -0.165  &         0.869        &       -1.627    &        1.380     \\\\\n",
       "\\textbf{ide.L2} &       0.5001  &        0.978     &     0.511  &         0.612        &       -1.471    &        2.472     \\\\\n",
       "\\textbf{ide.L3} &       0.6106  &        0.656     &     0.931  &         0.357        &       -0.711    &        1.933     \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "%\\caption{ARDL Model Results}\n",
       "\\end{center}"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                              ARDL Model Results                              \n",
       "==============================================================================\n",
       "Dep. Variable:                    lrm   No. Observations:                   55\n",
       "Model:               ARDL(2, 1, 2, 3)   Log Likelihood                 121.130\n",
       "Method:               Conditional MLE   S.D. of innovations              0.025\n",
       "Date:                Sat, 12 Oct 2024   AIC                           -222.260\n",
       "Time:                        16:59:56   BIC                           -202.557\n",
       "Sample:                    10-01-1974   HQIC                          -214.683\n",
       "                         - 07-01-1987                                         \n",
       "==============================================================================\n",
       "                 coef    std err          z      P>|z|      [0.025      0.975]\n",
       "------------------------------------------------------------------------------\n",
       "const          2.3885      0.696      3.434      0.001       0.987       3.790\n",
       "lrm.L1         0.4294      0.169      2.538      0.015       0.088       0.770\n",
       "lrm.L2         0.2777      0.139      2.003      0.051      -0.002       0.557\n",
       "lry.L1         0.2064      0.139      1.481      0.146      -0.074       0.487\n",
       "ibo.L1        -1.2787      0.467     -2.736      0.009      -2.221      -0.337\n",
       "ibo.L2        -0.3403      0.568     -0.600      0.552      -1.484       0.804\n",
       "ide.L1        -0.1234      0.746     -0.165      0.869      -1.627       1.380\n",
       "ide.L2         0.5001      0.978      0.511      0.612      -1.471       2.472\n",
       "ide.L3         0.6106      0.656      0.931      0.357      -0.711       1.933\n",
       "==============================================================================\n",
       "\"\"\""
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "res = ARDL(\n",
    "    data.lrm,\n",
    "    2,\n",
    "    data[[\"lry\", \"ibo\", \"ide\"]],\n",
    "    {\"lry\": 1, \"ibo\": 2, \"ide\": 3},\n",
    "    trend=\"c\",\n",
    "    causal=True,\n",
    ").fit()\n",
    "res.summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6ac0a3be-996b-4ade-8d96-13629e661600",
   "metadata": {},
   "source": [
    "## Unconstrained Error Correction Models (UECM)\n",
    "\n",
    "Unconstrained Error Correction Models reparameterize ARDL model to focus on the long-run component of a time series.  The reparameterized model is\n",
    "\n",
    "$$\n",
    "\\Delta Y_t = \\underset{\\text{Constant and Trend}}{\\underbrace{\\delta_0 + \\delta_1 t + \\ldots + \\delta_k t^k}} \n",
    "      + \\underset{\\text{Seasonal}}{\\underbrace{\\sum_{i=0}^{s-1} \\gamma_i S_i}}\n",
    "      + \\underset{\\text{Long-Run}}{\\underbrace{\\lambda_0 Y_{t-1} + \\sum_{b=1}^M \\lambda_i  X_{b,t-1}}}\n",
    "      + \\underset{\\text{Autoregressive}}{\\underbrace{\\sum_{p=1}^P \\phi_p \\Delta Y_{t-p}}}\n",
    "      + \\underset{\\text{Distributed Lag}}{\\underbrace{\\sum_{k=1}^M \\sum_{j=0}^{Q_k} \\beta_{k,j} \\Delta X_{k, t-j}}}\n",
    "      + \\underset{\\text{Fixed}}{\\underbrace{Z_t \\Gamma}} + \\epsilon_t\n",
    "$$\n",
    "\n",
    "\n",
    "Most of the components are the same.  The key differences are:\n",
    "\n",
    "* The levels only enter at lag 1\n",
    "* All other lags of $Y_t$ or $X_{k,t}$ are differenced\n",
    "\n",
    "Due to their structure, UECM models _do not_ support irregular lag specifications, and so lags specifications must be integers. The AR lag length must be an integer or `None`, while the DL lag specification can be an integer or a dictionary of integers.  Other options such as `trend`, `seasonal`, and `causal` are identical.\n",
    "\n",
    "Below we select a model and then using the class method `from_ardl` to construct the UECM.  The parameter estimates prefixed with `D.` are differences."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "9645823c-8d25-487e-a34a-5350f0c11912",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-12T16:59:56.753860Z",
     "iopub.status.busy": "2024-10-12T16:59:56.753030Z",
     "iopub.status.idle": "2024-10-12T16:59:57.142834Z",
     "shell.execute_reply": "2024-10-12T16:59:57.142213Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>UECM Model Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>       <td>D.lrm</td>      <th>  No. Observations:  </th>    <td>55</td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>         <td>UECM(3, 1, 3, 2)</td> <th>  Log Likelihood     </th>  <td>139.513</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>         <td>Conditional MLE</td> <th>  S.D. of innovations</th>  <td>11.756</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>          <td>Sat, 12 Oct 2024</td> <th>  AIC                </th> <td>-251.026</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>              <td>16:59:57</td>     <th>  BIC                </th> <td>-223.708</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Sample:</th>           <td>10-01-1974</td>    <th>  HQIC               </th> <td>-240.553</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th></th>                 <td>- 07-01-1987</td>   <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "      <td></td>        <th>coef</th>     <th>std err</th>      <th>z</th>      <th>P>|z|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th>    <td>    2.6202</td> <td>    0.568</td> <td>    4.615</td> <td> 0.000</td> <td>    1.472</td> <td>    3.769</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>lrm.L1</th>   <td>   -0.4169</td> <td>    0.092</td> <td>   -4.548</td> <td> 0.000</td> <td>   -0.602</td> <td>   -0.231</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>lry.L1</th>   <td>    0.4154</td> <td>    0.118</td> <td>    3.532</td> <td> 0.001</td> <td>    0.177</td> <td>    0.653</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>ibo.L1</th>   <td>   -1.8917</td> <td>    0.391</td> <td>   -4.837</td> <td> 0.000</td> <td>   -2.683</td> <td>   -1.101</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>ide.L1</th>   <td>    1.2053</td> <td>    0.447</td> <td>    2.697</td> <td> 0.010</td> <td>    0.301</td> <td>    2.109</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>D.lrm.L1</th> <td>   -0.2639</td> <td>    0.102</td> <td>   -2.590</td> <td> 0.013</td> <td>   -0.470</td> <td>   -0.058</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>D.lrm.L2</th> <td>    0.2687</td> <td>    0.102</td> <td>    2.631</td> <td> 0.012</td> <td>    0.062</td> <td>    0.475</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>D.lry.L0</th> <td>    0.6728</td> <td>    0.131</td> <td>    5.129</td> <td> 0.000</td> <td>    0.407</td> <td>    0.938</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>D.ibo.L0</th> <td>   -1.0785</td> <td>    0.322</td> <td>   -3.353</td> <td> 0.002</td> <td>   -1.729</td> <td>   -0.428</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>D.ibo.L1</th> <td>    0.7070</td> <td>    0.469</td> <td>    1.508</td> <td> 0.140</td> <td>   -0.241</td> <td>    1.655</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>D.ibo.L2</th> <td>    0.9947</td> <td>    0.393</td> <td>    2.534</td> <td> 0.015</td> <td>    0.201</td> <td>    1.789</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>D.ide.L0</th> <td>    0.1255</td> <td>    0.554</td> <td>    0.226</td> <td> 0.822</td> <td>   -0.996</td> <td>    1.247</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>D.ide.L1</th> <td>   -1.4079</td> <td>    0.552</td> <td>   -2.550</td> <td> 0.015</td> <td>   -2.524</td> <td>   -0.291</td>\n",
       "</tr>\n",
       "</table>"
      ],
      "text/latex": [
       "\\begin{center}\n",
       "\\begin{tabular}{lclc}\n",
       "\\toprule\n",
       "\\textbf{Dep. Variable:} &      D.lrm       & \\textbf{  No. Observations:  } &     55      \\\\\n",
       "\\textbf{Model:}         & UECM(3, 1, 3, 2) & \\textbf{  Log Likelihood     } &  139.513    \\\\\n",
       "\\textbf{Method:}        & Conditional MLE  & \\textbf{  S.D. of innovations} &   11.756    \\\\\n",
       "\\textbf{Date:}          & Sat, 12 Oct 2024 & \\textbf{  AIC                } &  -251.026   \\\\\n",
       "\\textbf{Time:}          &     16:59:57     & \\textbf{  BIC                } &  -223.708   \\\\\n",
       "\\textbf{Sample:}        &    10-01-1974    & \\textbf{  HQIC               } &  -240.553   \\\\\n",
       "\\textbf{}               &   - 07-01-1987   & \\textbf{                     } &             \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "\\begin{tabular}{lcccccc}\n",
       "                  & \\textbf{coef} & \\textbf{std err} & \\textbf{z} & \\textbf{P$> |$z$|$} & \\textbf{[0.025} & \\textbf{0.975]}  \\\\\n",
       "\\midrule\n",
       "\\textbf{const}    &       2.6202  &        0.568     &     4.615  &         0.000        &        1.472    &        3.769     \\\\\n",
       "\\textbf{lrm.L1}   &      -0.4169  &        0.092     &    -4.548  &         0.000        &       -0.602    &       -0.231     \\\\\n",
       "\\textbf{lry.L1}   &       0.4154  &        0.118     &     3.532  &         0.001        &        0.177    &        0.653     \\\\\n",
       "\\textbf{ibo.L1}   &      -1.8917  &        0.391     &    -4.837  &         0.000        &       -2.683    &       -1.101     \\\\\n",
       "\\textbf{ide.L1}   &       1.2053  &        0.447     &     2.697  &         0.010        &        0.301    &        2.109     \\\\\n",
       "\\textbf{D.lrm.L1} &      -0.2639  &        0.102     &    -2.590  &         0.013        &       -0.470    &       -0.058     \\\\\n",
       "\\textbf{D.lrm.L2} &       0.2687  &        0.102     &     2.631  &         0.012        &        0.062    &        0.475     \\\\\n",
       "\\textbf{D.lry.L0} &       0.6728  &        0.131     &     5.129  &         0.000        &        0.407    &        0.938     \\\\\n",
       "\\textbf{D.ibo.L0} &      -1.0785  &        0.322     &    -3.353  &         0.002        &       -1.729    &       -0.428     \\\\\n",
       "\\textbf{D.ibo.L1} &       0.7070  &        0.469     &     1.508  &         0.140        &       -0.241    &        1.655     \\\\\n",
       "\\textbf{D.ibo.L2} &       0.9947  &        0.393     &     2.534  &         0.015        &        0.201    &        1.789     \\\\\n",
       "\\textbf{D.ide.L0} &       0.1255  &        0.554     &     0.226  &         0.822        &       -0.996    &        1.247     \\\\\n",
       "\\textbf{D.ide.L1} &      -1.4079  &        0.552     &    -2.550  &         0.015        &       -2.524    &       -0.291     \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "%\\caption{UECM Model Results}\n",
       "\\end{center}"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                              UECM Model Results                              \n",
       "==============================================================================\n",
       "Dep. Variable:                  D.lrm   No. Observations:                   55\n",
       "Model:               UECM(3, 1, 3, 2)   Log Likelihood                 139.513\n",
       "Method:               Conditional MLE   S.D. of innovations             11.756\n",
       "Date:                Sat, 12 Oct 2024   AIC                           -251.026\n",
       "Time:                        16:59:57   BIC                           -223.708\n",
       "Sample:                    10-01-1974   HQIC                          -240.553\n",
       "                         - 07-01-1987                                         \n",
       "==============================================================================\n",
       "                 coef    std err          z      P>|z|      [0.025      0.975]\n",
       "------------------------------------------------------------------------------\n",
       "const          2.6202      0.568      4.615      0.000       1.472       3.769\n",
       "lrm.L1        -0.4169      0.092     -4.548      0.000      -0.602      -0.231\n",
       "lry.L1         0.4154      0.118      3.532      0.001       0.177       0.653\n",
       "ibo.L1        -1.8917      0.391     -4.837      0.000      -2.683      -1.101\n",
       "ide.L1         1.2053      0.447      2.697      0.010       0.301       2.109\n",
       "D.lrm.L1      -0.2639      0.102     -2.590      0.013      -0.470      -0.058\n",
       "D.lrm.L2       0.2687      0.102      2.631      0.012       0.062       0.475\n",
       "D.lry.L0       0.6728      0.131      5.129      0.000       0.407       0.938\n",
       "D.ibo.L0      -1.0785      0.322     -3.353      0.002      -1.729      -0.428\n",
       "D.ibo.L1       0.7070      0.469      1.508      0.140      -0.241       1.655\n",
       "D.ibo.L2       0.9947      0.393      2.534      0.015       0.201       1.789\n",
       "D.ide.L0       0.1255      0.554      0.226      0.822      -0.996       1.247\n",
       "D.ide.L1      -1.4079      0.552     -2.550      0.015      -2.524      -0.291\n",
       "==============================================================================\n",
       "\"\"\""
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from statsmodels.tsa.api import UECM\n",
    "\n",
    "sel_res = ardl_select_order(\n",
    "    data.lrm, 3, data[[\"lry\", \"ibo\", \"ide\"]], 3, ic=\"aic\", trend=\"c\"\n",
    ")\n",
    "\n",
    "ecm = UECM.from_ardl(sel_res.model)\n",
    "ecm_res = ecm.fit()\n",
    "ecm_res.summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9ecf6cab-9477-4492-b83a-40fe92665697",
   "metadata": {},
   "source": [
    "### Cointegrating Relationships\n",
    "\n",
    "Because the focus is on the long-run relationship, the results of UECM model fits contains a number of properties that focus on the long-run relationship. These are all prefixed `ci_`, for cointegrating.  `ci_summary` contains the normalized estimates of the cointegrating relationship and associated estimated values. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "fed4cc4e-100c-4b6d-bea4-6ed180bda5df",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-12T16:59:57.146361Z",
     "iopub.status.busy": "2024-10-12T16:59:57.145511Z",
     "iopub.status.idle": "2024-10-12T16:59:57.190299Z",
     "shell.execute_reply": "2024-10-12T16:59:57.189705Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>Cointegrating Vector</caption>\n",
       "<tr>\n",
       "     <td></td>       <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th>  <td>   -6.2857</td> <td>    0.772</td> <td>   -8.143</td> <td> 0.000</td> <td>   -7.847</td> <td>   -4.724</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>lrm.L1</th> <td>    1.0000</td> <td>        0</td> <td>      nan</td> <td>   nan</td> <td>    1.000</td> <td>    1.000</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>lry.L1</th> <td>   -0.9965</td> <td>    0.124</td> <td>   -8.041</td> <td> 0.000</td> <td>   -1.247</td> <td>   -0.746</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>ibo.L1</th> <td>    4.5381</td> <td>    0.520</td> <td>    8.722</td> <td> 0.000</td> <td>    3.486</td> <td>    5.591</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>ide.L1</th> <td>   -2.8915</td> <td>    0.995</td> <td>   -2.906</td> <td> 0.004</td> <td>   -4.904</td> <td>   -0.879</td>\n",
       "</tr>\n",
       "</table>"
      ],
      "text/latex": [
       "\\begin{center}\n",
       "\\begin{tabular}{lcccccc}\n",
       "\\toprule\n",
       "                & \\textbf{coef} & \\textbf{std err} & \\textbf{t} & \\textbf{P$> |$t$|$} & \\textbf{[0.025} & \\textbf{0.975]}  \\\\\n",
       "\\midrule\n",
       "\\textbf{const}  &      -6.2857  &        0.772     &    -8.143  &         0.000        &       -7.847    &       -4.724     \\\\\n",
       "\\textbf{lrm.L1} &       1.0000  &            0     &       nan  &           nan        &        1.000    &        1.000     \\\\\n",
       "\\textbf{lry.L1} &      -0.9965  &        0.124     &    -8.041  &         0.000        &       -1.247    &       -0.746     \\\\\n",
       "\\textbf{ibo.L1} &       4.5381  &        0.520     &     8.722  &         0.000        &        3.486    &        5.591     \\\\\n",
       "\\textbf{ide.L1} &      -2.8915  &        0.995     &    -2.906  &         0.004        &       -4.904    &       -0.879     \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "%\\caption{Cointegrating Vector}\n",
       "\\end{center}"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                             Cointegrating Vector                             \n",
       "==============================================================================\n",
       "                 coef    std err          t      P>|t|      [0.025      0.975]\n",
       "------------------------------------------------------------------------------\n",
       "const         -6.2857      0.772     -8.143      0.000      -7.847      -4.724\n",
       "lrm.L1         1.0000          0        nan        nan       1.000       1.000\n",
       "lry.L1        -0.9965      0.124     -8.041      0.000      -1.247      -0.746\n",
       "ibo.L1         4.5381      0.520      8.722      0.000       3.486       5.591\n",
       "ide.L1        -2.8915      0.995     -2.906      0.004      -4.904      -0.879\n",
       "==============================================================================\n",
       "\"\"\""
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ecm_res.ci_summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d730dc12-b3c9-427e-89da-2fcabb5deea7",
   "metadata": {},
   "source": [
    "`ci_resids` contains the long-run residual, which is the error the drives figure changes in $\\Delta Y_t$."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "b8e12dc7-f12e-442d-b0cd-d081e8f0447b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-12T16:59:57.193609Z",
     "iopub.status.busy": "2024-10-12T16:59:57.192748Z",
     "iopub.status.idle": "2024-10-12T16:59:58.059742Z",
     "shell.execute_reply": "2024-10-12T16:59:58.059081Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1600x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "_ = ecm_res.ci_resids.plot(title=\"Cointegrating Error\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7b4cd8e8-97d7-49d6-8c49-ebdd2b08f04f",
   "metadata": {},
   "source": [
    "### Seasonal Dummies\n",
    "\n",
    "Here we add seasonal terms, which appear to be statistically significant."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "3618d391-0136-4d59-9ee8-33eef938f2bc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-12T16:59:58.063309Z",
     "iopub.status.busy": "2024-10-12T16:59:58.062446Z",
     "iopub.status.idle": "2024-10-12T16:59:58.159663Z",
     "shell.execute_reply": "2024-10-12T16:59:58.159073Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>UECM Model Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>          <td>D.lrm</td>         <th>  No. Observations:  </th>    <td>55</td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>         <td>Seas. UECM(2, 2, 2, 2)</td> <th>  Log Likelihood     </th>  <td>150.609</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>            <td>Conditional MLE</td>    <th>  S.D. of innovations</th>  <td>11.753</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Sat, 12 Oct 2024</td>    <th>  AIC                </th> <td>-269.218</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>16:59:58</td>        <th>  BIC                </th> <td>-237.694</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Sample:</th>              <td>07-01-1974</td>       <th>  HQIC               </th> <td>-257.096</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th></th>                    <td>- 07-01-1987</td>      <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "      <td></td>        <th>coef</th>     <th>std err</th>      <th>z</th>      <th>P>|z|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th>    <td>    1.6501</td> <td>    0.429</td> <td>    3.848</td> <td> 0.000</td> <td>    0.782</td> <td>    2.518</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>s(2,4)</th>   <td>    0.0328</td> <td>    0.011</td> <td>    2.943</td> <td> 0.006</td> <td>    0.010</td> <td>    0.055</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>s(3,4)</th>   <td>    0.0153</td> <td>    0.008</td> <td>    1.965</td> <td> 0.057</td> <td>   -0.000</td> <td>    0.031</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>s(4,4)</th>   <td>    0.0460</td> <td>    0.009</td> <td>    5.060</td> <td> 0.000</td> <td>    0.028</td> <td>    0.064</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>lrm.L1</th>   <td>   -0.2543</td> <td>    0.072</td> <td>   -3.530</td> <td> 0.001</td> <td>   -0.400</td> <td>   -0.108</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>lry.L1</th>   <td>    0.2437</td> <td>    0.100</td> <td>    2.444</td> <td> 0.019</td> <td>    0.042</td> <td>    0.446</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>ibo.L1</th>   <td>   -1.2113</td> <td>    0.297</td> <td>   -4.083</td> <td> 0.000</td> <td>   -1.812</td> <td>   -0.611</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>ide.L1</th>   <td>    0.6537</td> <td>    0.384</td> <td>    1.701</td> <td> 0.097</td> <td>   -0.124</td> <td>    1.432</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>D.lrm.L1</th> <td>    0.0377</td> <td>    0.156</td> <td>    0.241</td> <td> 0.811</td> <td>   -0.279</td> <td>    0.354</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>D.lry.L0</th> <td>    0.4624</td> <td>    0.121</td> <td>    3.827</td> <td> 0.000</td> <td>    0.218</td> <td>    0.707</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>D.lry.L1</th> <td>    0.0457</td> <td>    0.130</td> <td>    0.351</td> <td> 0.727</td> <td>   -0.218</td> <td>    0.309</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>D.ibo.L0</th> <td>   -0.9562</td> <td>    0.312</td> <td>   -3.062</td> <td> 0.004</td> <td>   -1.588</td> <td>   -0.324</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>D.ibo.L1</th> <td>    0.4133</td> <td>    0.360</td> <td>    1.148</td> <td> 0.258</td> <td>   -0.315</td> <td>    1.142</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>D.ide.L0</th> <td>   -0.3945</td> <td>    0.505</td> <td>   -0.781</td> <td> 0.440</td> <td>   -1.417</td> <td>    0.628</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>D.ide.L1</th> <td>   -0.1430</td> <td>    0.466</td> <td>   -0.307</td> <td> 0.761</td> <td>   -1.086</td> <td>    0.800</td>\n",
       "</tr>\n",
       "</table>"
      ],
      "text/latex": [
       "\\begin{center}\n",
       "\\begin{tabular}{lclc}\n",
       "\\toprule\n",
       "\\textbf{Dep. Variable:} &         D.lrm          & \\textbf{  No. Observations:  } &     55      \\\\\n",
       "\\textbf{Model:}         & Seas. UECM(2, 2, 2, 2) & \\textbf{  Log Likelihood     } &  150.609    \\\\\n",
       "\\textbf{Method:}        &    Conditional MLE     & \\textbf{  S.D. of innovations} &   11.753    \\\\\n",
       "\\textbf{Date:}          &    Sat, 12 Oct 2024    & \\textbf{  AIC                } &  -269.218   \\\\\n",
       "\\textbf{Time:}          &        16:59:58        & \\textbf{  BIC                } &  -237.694   \\\\\n",
       "\\textbf{Sample:}        &       07-01-1974       & \\textbf{  HQIC               } &  -257.096   \\\\\n",
       "\\textbf{}               &      - 07-01-1987      & \\textbf{                     } &             \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "\\begin{tabular}{lcccccc}\n",
       "                  & \\textbf{coef} & \\textbf{std err} & \\textbf{z} & \\textbf{P$> |$z$|$} & \\textbf{[0.025} & \\textbf{0.975]}  \\\\\n",
       "\\midrule\n",
       "\\textbf{const}    &       1.6501  &        0.429     &     3.848  &         0.000        &        0.782    &        2.518     \\\\\n",
       "\\textbf{s(2,4)}   &       0.0328  &        0.011     &     2.943  &         0.006        &        0.010    &        0.055     \\\\\n",
       "\\textbf{s(3,4)}   &       0.0153  &        0.008     &     1.965  &         0.057        &       -0.000    &        0.031     \\\\\n",
       "\\textbf{s(4,4)}   &       0.0460  &        0.009     &     5.060  &         0.000        &        0.028    &        0.064     \\\\\n",
       "\\textbf{lrm.L1}   &      -0.2543  &        0.072     &    -3.530  &         0.001        &       -0.400    &       -0.108     \\\\\n",
       "\\textbf{lry.L1}   &       0.2437  &        0.100     &     2.444  &         0.019        &        0.042    &        0.446     \\\\\n",
       "\\textbf{ibo.L1}   &      -1.2113  &        0.297     &    -4.083  &         0.000        &       -1.812    &       -0.611     \\\\\n",
       "\\textbf{ide.L1}   &       0.6537  &        0.384     &     1.701  &         0.097        &       -0.124    &        1.432     \\\\\n",
       "\\textbf{D.lrm.L1} &       0.0377  &        0.156     &     0.241  &         0.811        &       -0.279    &        0.354     \\\\\n",
       "\\textbf{D.lry.L0} &       0.4624  &        0.121     &     3.827  &         0.000        &        0.218    &        0.707     \\\\\n",
       "\\textbf{D.lry.L1} &       0.0457  &        0.130     &     0.351  &         0.727        &       -0.218    &        0.309     \\\\\n",
       "\\textbf{D.ibo.L0} &      -0.9562  &        0.312     &    -3.062  &         0.004        &       -1.588    &       -0.324     \\\\\n",
       "\\textbf{D.ibo.L1} &       0.4133  &        0.360     &     1.148  &         0.258        &       -0.315    &        1.142     \\\\\n",
       "\\textbf{D.ide.L0} &      -0.3945  &        0.505     &    -0.781  &         0.440        &       -1.417    &        0.628     \\\\\n",
       "\\textbf{D.ide.L1} &      -0.1430  &        0.466     &    -0.307  &         0.761        &       -1.086    &        0.800     \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "%\\caption{UECM Model Results}\n",
       "\\end{center}"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                                UECM Model Results                                \n",
       "==================================================================================\n",
       "Dep. Variable:                      D.lrm   No. Observations:                   55\n",
       "Model:             Seas. UECM(2, 2, 2, 2)   Log Likelihood                 150.609\n",
       "Method:                   Conditional MLE   S.D. of innovations             11.753\n",
       "Date:                    Sat, 12 Oct 2024   AIC                           -269.218\n",
       "Time:                            16:59:58   BIC                           -237.694\n",
       "Sample:                        07-01-1974   HQIC                          -257.096\n",
       "                             - 07-01-1987                                         \n",
       "==============================================================================\n",
       "                 coef    std err          z      P>|z|      [0.025      0.975]\n",
       "------------------------------------------------------------------------------\n",
       "const          1.6501      0.429      3.848      0.000       0.782       2.518\n",
       "s(2,4)         0.0328      0.011      2.943      0.006       0.010       0.055\n",
       "s(3,4)         0.0153      0.008      1.965      0.057      -0.000       0.031\n",
       "s(4,4)         0.0460      0.009      5.060      0.000       0.028       0.064\n",
       "lrm.L1        -0.2543      0.072     -3.530      0.001      -0.400      -0.108\n",
       "lry.L1         0.2437      0.100      2.444      0.019       0.042       0.446\n",
       "ibo.L1        -1.2113      0.297     -4.083      0.000      -1.812      -0.611\n",
       "ide.L1         0.6537      0.384      1.701      0.097      -0.124       1.432\n",
       "D.lrm.L1       0.0377      0.156      0.241      0.811      -0.279       0.354\n",
       "D.lry.L0       0.4624      0.121      3.827      0.000       0.218       0.707\n",
       "D.lry.L1       0.0457      0.130      0.351      0.727      -0.218       0.309\n",
       "D.ibo.L0      -0.9562      0.312     -3.062      0.004      -1.588      -0.324\n",
       "D.ibo.L1       0.4133      0.360      1.148      0.258      -0.315       1.142\n",
       "D.ide.L0      -0.3945      0.505     -0.781      0.440      -1.417       0.628\n",
       "D.ide.L1      -0.1430      0.466     -0.307      0.761      -1.086       0.800\n",
       "==============================================================================\n",
       "\"\"\""
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ecm = UECM(data.lrm, 2, data[[\"lry\", \"ibo\", \"ide\"]], 2, seasonal=True)\n",
    "seasonal_ecm_res = ecm.fit()\n",
    "seasonal_ecm_res.summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e31719ac-78c4-4c8f-8fe9-81a77454ae82",
   "metadata": {},
   "source": [
    "All deterministic terms are included in the `ci_` prefixed terms.  Here we see the normalized seasonal effects in the summary."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "d0ac53f2-990a-4379-bf1a-e031c0482150",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-12T16:59:58.162926Z",
     "iopub.status.busy": "2024-10-12T16:59:58.162095Z",
     "iopub.status.idle": "2024-10-12T16:59:58.442883Z",
     "shell.execute_reply": "2024-10-12T16:59:58.442246Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>Cointegrating Vector</caption>\n",
       "<tr>\n",
       "     <td></td>       <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th>  <td>   -6.4899</td> <td>    1.155</td> <td>   -5.621</td> <td> 0.000</td> <td>   -8.827</td> <td>   -4.152</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>s(2,4)</th> <td>   -0.1291</td> <td>    0.066</td> <td>   -1.956</td> <td> 0.050</td> <td>   -0.263</td> <td>    0.005</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>s(3,4)</th> <td>   -0.0603</td> <td>    0.039</td> <td>   -1.545</td> <td> 0.122</td> <td>   -0.139</td> <td>    0.019</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>s(4,4)</th> <td>   -0.1810</td> <td>    0.071</td> <td>   -2.562</td> <td> 0.010</td> <td>   -0.324</td> <td>   -0.038</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>lrm.L1</th> <td>    1.0000</td> <td>        0</td> <td>      nan</td> <td>   nan</td> <td>    1.000</td> <td>    1.000</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>lry.L1</th> <td>   -0.9585</td> <td>    0.187</td> <td>   -5.137</td> <td> 0.000</td> <td>   -1.336</td> <td>   -0.581</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>ibo.L1</th> <td>    4.7641</td> <td>    0.826</td> <td>    5.768</td> <td> 0.000</td> <td>    3.092</td> <td>    6.436</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>ide.L1</th> <td>   -2.5708</td> <td>    1.461</td> <td>   -1.760</td> <td> 0.078</td> <td>   -5.529</td> <td>    0.387</td>\n",
       "</tr>\n",
       "</table>"
      ],
      "text/latex": [
       "\\begin{center}\n",
       "\\begin{tabular}{lcccccc}\n",
       "\\toprule\n",
       "                & \\textbf{coef} & \\textbf{std err} & \\textbf{t} & \\textbf{P$> |$t$|$} & \\textbf{[0.025} & \\textbf{0.975]}  \\\\\n",
       "\\midrule\n",
       "\\textbf{const}  &      -6.4899  &        1.155     &    -5.621  &         0.000        &       -8.827    &       -4.152     \\\\\n",
       "\\textbf{s(2,4)} &      -0.1291  &        0.066     &    -1.956  &         0.050        &       -0.263    &        0.005     \\\\\n",
       "\\textbf{s(3,4)} &      -0.0603  &        0.039     &    -1.545  &         0.122        &       -0.139    &        0.019     \\\\\n",
       "\\textbf{s(4,4)} &      -0.1810  &        0.071     &    -2.562  &         0.010        &       -0.324    &       -0.038     \\\\\n",
       "\\textbf{lrm.L1} &       1.0000  &            0     &       nan  &           nan        &        1.000    &        1.000     \\\\\n",
       "\\textbf{lry.L1} &      -0.9585  &        0.187     &    -5.137  &         0.000        &       -1.336    &       -0.581     \\\\\n",
       "\\textbf{ibo.L1} &       4.7641  &        0.826     &     5.768  &         0.000        &        3.092    &        6.436     \\\\\n",
       "\\textbf{ide.L1} &      -2.5708  &        1.461     &    -1.760  &         0.078        &       -5.529    &        0.387     \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "%\\caption{Cointegrating Vector}\n",
       "\\end{center}"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                             Cointegrating Vector                             \n",
       "==============================================================================\n",
       "                 coef    std err          t      P>|t|      [0.025      0.975]\n",
       "------------------------------------------------------------------------------\n",
       "const         -6.4899      1.155     -5.621      0.000      -8.827      -4.152\n",
       "s(2,4)        -0.1291      0.066     -1.956      0.050      -0.263       0.005\n",
       "s(3,4)        -0.0603      0.039     -1.545      0.122      -0.139       0.019\n",
       "s(4,4)        -0.1810      0.071     -2.562      0.010      -0.324      -0.038\n",
       "lrm.L1         1.0000          0        nan        nan       1.000       1.000\n",
       "lry.L1        -0.9585      0.187     -5.137      0.000      -1.336      -0.581\n",
       "ibo.L1         4.7641      0.826      5.768      0.000       3.092       6.436\n",
       "ide.L1        -2.5708      1.461     -1.760      0.078      -5.529       0.387\n",
       "==============================================================================\n",
       "\"\"\""
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "seasonal_ecm_res.ci_summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "09de88a7-ba21-4126-8b63-1f8d201f1412",
   "metadata": {},
   "source": [
    "The residuals are somewhat more random in appearance."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "cb22aa49-5c7b-4e4e-8382-4b2df05f9980",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-12T16:59:58.446531Z",
     "iopub.status.busy": "2024-10-12T16:59:58.445664Z",
     "iopub.status.idle": "2024-10-12T16:59:59.381258Z",
     "shell.execute_reply": "2024-10-12T16:59:59.380579Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAABTEAAAIxCAYAAACVVPx3AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjkuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8hTgPZAAAACXBIWXMAAA9hAAAPYQGoP6dpAAEAAElEQVR4nOzdd5xcdb0//teZsjvb+ybbspu2m0YaqVQFBKUJSlPgoogKYv8qYOHKFRDk3h9KUbEAiiAgSigBJYACBhJCAiSkt+19Z/vu9Dm/P+Z8zsz2KWfOmZ19PR8PH4apZ2bPnPI+7yLJsiyDiIiIiIiIiIiIKEGZjF4AIiIiIiIiIiIioskwiElEREREREREREQJjUFMIiIiIiIiIiIiSmgMYhIREREREREREVFCYxCTiIiIiIiIiIiIEhqDmERERERERERERJTQGMQkIiIiIiIiIiKihMYgJhERERERERERESU0BjGJiIiIiIiIiIgooTGISURERCO8++67qKmpwRlnnGH0oswYzz77LGpqanD11VcbvShkgDPOOAM1NTV49913I34uf68zw0TrCP/+REQ0k1iMXgAiIiKaWkNDA5555hls374dTU1N6O/vh81mQ1lZGVatWoXzzz8fa9euNXoxJ/XHP/4RAwMDuPjii1FeXm704ujmtddew4EDB7Bu3TqsX7/e6MXRxNVXX40dO3aE9dhDhw7FeWmS14EDB/Daa6+hrKwMn/nMZwxZhubmZjz++ON455130NjYCLfbjdzcXOTn52Px4sVYs2YNzjzzTOTn5xuyfDSxZ599Fs3NzTjrrLOwePFioxeHiIgoZgxiEhERJTCfz4f/+7//w2OPPQav1wsAKC8vR1lZGYaGhlBXV4dDhw7hqaeewtq1a/H444/H/J5paWmYO3cuZs2aFfNrhXrsscfQ3NyMdevWzbgg5qZNm/D1r399wiBmVlYW5s6di5KSEp2XLjYlJSXTbpkTUUVFBVJSUpCWljbi9gMHDuDBBx/EunXrDAlivvbaa/je974Hh8MBSZIwa9YsFBUVweVyoba2FocOHcJzzz2HlJQUfPrTn9Z9+Wjy7fWmTZuwY8cOlJWVMYhJRERJgUFMIiKiBCXLMr71rW/h1VdfhdVqxde+9jV8/vOfR1FRkfoYh8OBt956C7/97W/x3nvvafK+y5cvxz//+U9NXovC84lPfAKf+MQnjF6MiH32s5/FN77xDaMXY9r705/+ZPQijNHa2qoGME8//XTcfPPNmD9/vnq/1+vFzp078eKLL44JvpJ+uL0mIqKZhEFMIiKiBPXII4+oAczf//732Lhx45jHpKWl4ZxzzsHZZ5+N3/zmNwYsJRElo82bN8PhcCA3Nxf3338/bDbbiPstFgs2bNiADRs2GLSERERENNNwsA8REVECGh4exu9+9zsAwJe+9KVxA5ihJEnC1772tTG3y7KMzZs344tf/CLWr1+PZcuW4bTTTsP/+3//D/v27Rv3tSYbFHH11VejpqYGzz77LHp7e3HnnXfijDPOwLJly3Dqqafixz/+MTo7O0c8RwytaW5uBgD813/9F2pqatT/3XLLLWPeZ/v27fjmN7+JU089FcuWLcP69evxpS99Ca+99tqk38PLL7+MK664AqtWrcKaNWtw9dVX49///jcAqO/X1NQ04jm33HILampq8MADD2BgYAD/+7//i3POOQfLly8f8R3U1tbid7/7Ha6++mp8/OMfxwknnIA1a9bgiiuuwGOPPQa32z3idZuamlBTU4NNmzYBAB588MERnzv0tScb7BM60KOlpQU//OEP1e/ljDPOwN13343BwcEJv5P6+nr8v//3/3DSSSfhhBNOwDnnnIP7778fLpdrxGfXg/hOampqAAD/+c9/cN1112HDhg1YtGgRnn32WQAj17OOjg7cdttt6no2+jt66623cP311+Okk07CsmXLcPLJJ+NrX/satm3bNu4yjF6/N2/ejKuuugrr1q0La7hOQ0MDampqcOKJJ8Ln8424r7+/H0uWLEFNTc24GaqbN29GTU0NPv/5z4+4fbyhLWeccQZ+8IMfAAB27NgxYt0Zbz0WXn/9dVx99dVYs2YNVq5ciUsvvRQvvfTSpJ9pPI2NjQCAysrKMQHMcPX39+PBBx/EZz7zGZx44onq+vfzn/8cdrt93OdE+jsT/H4/nnnmGfVvuXTpUqxfvx7nnnsufvCDH2D79u3jPu/DDz/Et7/97THbmldeeWXcx49eh3fu3ImvfOUrWL9+PZYvX44LLrgAjz/+OGRZHvNcWZbx5ptv4qc//SkuuugibNiwQd12fvOb38TOnTvD+VpHGG97LW4TfWt/8IMfjFh3xG/o/PPPR01NDf76179O+PqDg4NYtWoVampqsGfPnoiXj4iISEvMxCQiIkpAb775Jnp7e2EymfBf//VfUb2G1+vFd7/7XfVkfPbs2SgvL0d9fT02b96Mf/zjH/jJT36Cyy+/POLXbmtrw0UXXYTOzk7MmzcPZWVlI4YPPffcc8jMzAQAFBQUYPXq1di7dy/cbjeqq6vV+wCgqqpK/bcsy7jzzjvx5z//GQCQk5ODhQsXoqOjA1u3bsXWrVtx1VVX4dZbbx2zTPfccw8efvhh9T1LS0tx5MgRXH/99fjxj3885Wfq7e3FZz/7WTQ0NGDevHlYsGABnE6nev8vfvELvPLKK0hPT0dRURFqamrQ3d2NDz74AB988AFeffVVPPzww0hJSQEApKamYvXq1aivr4fdbh/TPzK0LUA4Dh06hK9//etwOp1YuHAhrFYrWlpa8Oijj+KDDz7AE088AYtl5KHd7t278cUvfhFDQ0OwWq2orq7G8PAwfvWrX+Gdd95BWVlZRMugpT/+8Y+46667kJOTgzlz5iA9PX3MY+rr63HPPfegv78f8+fPx4IFC2C1WtX777zzTjz22GMAAn/zRYsWoampCa+//jpef/113HDDDfj2t7894TL87Gc/w5/+9CcUFhZizpw5aG9vn3K558yZg9LSUrS0tGDv3r1YsWKFet+OHTvUwOaOHTsgyzIkSVLvF4G0cLIXly1bBqvVirq6OmRmZqK6unrE/ampqWOe8+CDD+KBBx5QP09jYyP27NmD7373u+jp6cFVV1015fsKGRkZAIBjx46hp6cHeXl5YT8XAA4ePIivfOUraG9vh8ViQWlpKWw2G2pra/HII4/gxRdfxCOPPDLmc0X6OxNuvvlmvPDCCwCA4uJiVFRUYHBwEK2trTh27Bg8Hs+Y7/2Pf/wj7r77bsiyjJycHNTU1IzY1lx00UW46667YDKNn/fx7LPP4kc/+hGys7NRXl6OlpYWHD58GLfffjuam5tx8803j3j88PAwvvKVr0CSJOTl5aG4uBizZs1Ca2srXnnlFWzZsgU/+clP8LnPfS6i73q0rKwsrF69GocPH8bg4CCqqqpGDF4S3/lll12GO++8E8888wwuu+yycV9r8+bNGB4exqJFi7B8+fKYlouIiChmMhERESWc22+/Xa6urpbPP//8qF/jgQcekKurq+UVK1bIW7ZsUW93uVzyXXfdJVdXV8uLFy+WP/zwwxHP2759u1xdXS1//OMfH/OaV111lVxdXS0vXbpUvvbaa+X29nb1vn379sknnXSSXF1dLd93331jnvvxj39crq6ulrdv3z7hMv/ud7+Tq6ur5dNOO03+17/+NeK+t956S964caNcXV0tb9q0acR9b7zxhlxdXS3X1NTIf/zjH2WfzyfLsix7vV75N7/5jbx06VK5urparq6ulhsbG0c89+abb1a/iwsvvFCura1V73M4HOq/X331VXn37t2y3+8f8fyjR4/Kl112mVxdXS3/9re/HfOZxOvff//9E37uv//973J1dbV81VVXjblPfG9Lly6Vv//978v9/f3qfe+88468YsUKubq6Wv7b3/424nkOh0N97he+8AXZbrer9+3evVs++eST1e9lsmUbj1gPIn1eY2Oj+ndYunSp/PDDD8ter3fEMoe+/uLFi+UvfOELI9Yz8Zhnn31Wfcxf/vKXEX/zRx55RK6pqZGrq6vlf/zjHyOWQazfixcvlpctWyY///zz6t/U7/fLLpdrys8h/qYPPfTQiNvF7/a0006Tq6ur5X379o24/8wzz5Srq6vld999d8TtE/02JlsvRn+epUuXysuXL5dfeOEF9T6PxyPfdtttcnV1tbxy5Up5YGBgys8mvPvuu+rf6oILLpCfe+45uaurK6zn9vT0qN/Bj3/84xHrXn9/v3zTTTfJ1dXV8jnnnCN7PJ4Rz43md7Z//365urpaXr169Zjv0O/3yzt27JBfeumlEbdv27ZNXUfuu+8+2e12q/e98MIL6m/jD3/4w4jnha7Dy5Ytkx999NER6/BDDz2kbovq6+tHPNflcslPPfWU3NbWNuJ2r9crv/TSS/KKFSvkpUuXyi0tLWO+04nWkXC213//+9/H3CfLstzX1ycvX75crq6ulg8ePDjuYz7zmc/I1dXV8uOPPz7u/URERHpiOTkREVECEhlhFRUVUT1/eHgYjz76KADg61//+oihMSkpKbjllluwZs0a+Hy+qHppZmZm4he/+AWKi4vV25YsWYLrrrsOANQS7kj09fXh17/+NcxmMx588EF8/OMfH3H/qaeeittuuw0A1FJ74fe//z2AwKCZa665Rs2cMpvNuP7668MammMymfCrX/1qRGZoaBntWWedheXLl4/IrAOA+fPn45577gEAtXQ8HioqKnDnnXciKytLvW3jxo245JJLAIz9zl966SU0NzcjNzcX991334hMrOXLl+NnP/sZPB5PTMs0ukR+9P/Ga3EgXHzxxbj22mthNpvV20aXLefk5OD+++8fsZ6Jx/z6178GAFx++eX43Oc+N+Jv/sUvfhEXXHABAOBXv/rVuO/v8/lw44034sILL1T/ppIkjcnwG4/I6Btdorx9+3akpKSov4PQ+5ubm9HY2AibzYaVK1dO+R6R8ng8+OpXv6p+biDQt/KWW25Bfn4+hoeHpyyVD7Vu3Tpce+21AAJZwDfddBNOOukkfOxjH8ONN96IP/7xjxNmrj766KNoa2vDmWeeidtvv33EupeVlYWf/exnWLJkCWpra7Fly5YRz43md3b8+HEAgb/L+vXrR9wnSRLWrl2Lc889d8Ttv/nNbyDLMk4//XR885vfHJHhe8EFF6h/w9///vcTlrBfeOGF+MIXvjBiHf7qV7+K6upqyLKMN954Y8TjU1JScPnll4+ZJG42m3HuuefimmuugcfjwYsvvjju+2ktOzsbn/rUpwAAzzzzzJj7Dx48iL1798Jms41Yr4iIiIzCcnIiIqIEJHocjldiG46dO3dicHAQqampE5YmXnvttdi5cyfeeecduN3usII3wvnnn4/s7Owxt4vgTH19fcTL/Oabb2J4eBgrVqzACSecMO5jPv7xj8NqteLYsWPo6OhAcXExhoaGsGvXLgDApZdeOu7zLrvsMrz88suTvv/GjRtRXl4+6WPsdjteeukl7NmzB3a7HS6Xa0Tvu9raWjidzqh7CE7m8ssvHxFoEVauXIk///nPY77z//znPwCAc845Z9y/1WmnnaaWRUdrdIn8aAsWLJjwvon+VqHOOeecEUFb4dixY2hoaAAAfPGLXxz3uV/60pfwwgsv4PDhw2hpaUFpaWlUyzAeEcR8//331d9OV1cXjhw5gnXr1uFjH/sY7rjjDmzbtk0NBIqA5urVqyP6rUVidK9NIFB2vmTJEmzdulX9zsJ1880347TTTsNjjz2Gt99+Gy6XC62trWhtbcVrr72G//u//8N//dd/4bvf/e6IVgb/+Mc/AABXXHHFuK9rNptx5plnYv/+/di+ffuYAGOkvzPxt929ezcaGxunvPgzPDyM9957D8DE688XvvAF/O53v0NPTw92796NtWvXjnnMlVdeOe5zV61ahcOHD0/4fe/Zswevvvoqjh07hoGBAXi9XgBAd3c3AODAgQOTLr+WLr/8cmzatAkvvvgibrrpphHrpghsTrQNISIi0huDmERERAlI9IwcHh6O6vm1tbUAgLKyMrW33WiiL5rL5UJzczPmzp0b9utP9NjCwkIAwNDQUCSLCyCQ9QMEBmeE0xOura0NxcXFaGhogN/vBwAsXrx43McuWbJkytebLOAGAP/85z/xgx/8YNK/iSzL6Ovri0sQMzRDNFRBQQGAsd+5WAcm+k4AYNGiRTEFMT/72c+OO8AmHFN93wCwcOHCcW8Xn81ms2HOnDkTvr7ZbIbP58Px48fHBDHz8vLU7y5Ss2fPRlVVFerq6vDBBx9g/fr1apBy/fr1qKioQFlZGXbu3Amv1wuLxRJRP8xo5OXlITc3d9z7JlpHwrFx40Zs3LgRbrcbBw8exL59+7Bt2zb85z//wfDwMB5++GE4nU7893//N4DANksE1O+7774JM73FYJ/W1tYRt0fzO1u5ciXWrVuHHTt24JxzzsGJJ56ItWvXYuXKlTjxxBPHbAMbGhrU3qUTrWO5ubmYNWsWWlpacPz48XGDmJH+Jr1eL374wx/i+eefn/CzAYH+vHpZtWoVqqurcfjwYbz66qs477zzAAT2C6LH6ET9MomIiPTGICYREVECEuWGYkJwpMTJswgqjie0RDfS4EZaWtq4t48uAY1Ef38/gEBwY6LJxaEcDgeA4LJbLJZxh50AmDCQG2qyrNempiZ8//vfh9vtxqc+9SlcffXVmDdvHrKysmCxWOD3+9VgYawl2hOZ6DufaOiICAJN9tnD+V7iJZws44k+s/ibTxaEtFgsyMvLQ1dX17jrd7RZzsL69etRV1eH7du3jwhibty4Ub3/2WefxZ49e7B69Wq1lDteQczJPo9YR+RxJmaHKyUlBcuXL8fy5cvxuc99Dp2dnfjmN7+J999/H0899RS++tWvYtasWRgYGFCfs3fv3ilfN3R4VrS/M0mS8NBDD+F3v/sdnnvuOezYsUOdzG2z2XDeeefhe9/7nlrWLjLdTSbTpOtQUVERWlpaJtw+TvSdT/R9P/LII3j++eeRmpqK7373uzj11FNRUlKCtLQ0SJKEv/3tb/jRj36kZmbq5YorrsBPf/pTPPPMM2oQ85///Cf6+/sxb948rFmzRtflISIimgiDmERERAnoxBNPxJ///GccPXoUdrs94owxEZzq6uqa8DEdHR1jHm8kERC46KKL8POf/zzs54ll93q9cLlc4wYyo8lAC/Xyyy/D7XZj+fLluPfee8cEDvXMnAqX+D4n++yxfi9GEX/zyYLdXq8XPT09Ix6vpQ0bNuDpp5/G9u3b8a1vfQvbt29Henq6OsF5w4YNePbZZ7F9+3bk5eWhvb0dGRkZWLp0qebLYoSioiLcdtttuPDCC+Hz+fDRRx9h1qxZIwJ7r732WkR9fWP5nWVkZOA73/kOvvOd76C+vh7vv/8+3nnnHbz66qv4+9//juPHj+OJJ56A2WxWM939fj/sdvuEF3s6OzvV19bCs88+CyBQpj9eKbpR25ELL7wQ//u//4vt27er5fh/+9vfAETfcoGIiCgeONiHiIgoAZ122mnIzc2F3+/HY489FvHz582bByAwTGSiQNXhw4cBBHrmlZWVRb+wGhHl7YcOHYroeXPmzFGDHaIkfbRYe8w1NTUBCASXx8t8/PDDDyd8bizZqbEQJf8TfSdA5N91ohDrt9PpnLDv4NGjR9WS4fnz52u+DOvXr4ckSfjoo49w+PBhNDY2Ys2aNWrfUpFxuW3bNjVLc+3atSN6R07FqHUnXKHl1GL4TVZWltonNdL1K5bfWajKykpcfPHF+N///V88/fTTkCQJH3zwgbodmDNnjvp3OHLkyLiv0dfXpw4u0mr9EZ9voszG3bt3a/I+kcrKysK5554LWZbxt7/9DfX19dixYwesVisuuugiQ5aJiIhoPAxiEhERJaCMjAx1Ou7DDz+Mbdu2Tfp4WZZH9J478cQTkZmZCZfLhSeffHLc54jp5SeddFLcBo2EEqXBoeWjoT7+8Y/DZrPhwIEDePvtt8N+3YyMDJx44okAoGYPjTbe5N1IiN57IjMrlCzLeOSRR6Z8rih/18upp54KAHjllVdGlPgKW7duRXNzs67LpJV58+ahsrISQHA9Hk3cXl1dPenwoWgVFBRg4cKF8Hg8ePDBBwGMLBWfNWsW5s6diw8//BBvvvnmmPvDYdS6A0ye5Srs3LlT/Xdon1wx8fqPf/yjGkgORyy/s4nU1NSow6FEUDI9PV3tcTnR+vOnP/0JPp8PeXl5anZtrMQ2cLzPd+zYMfz73//W5H1Gv184648YwrRp0yY89dRTAIAzzzxzxGR5IiIiozGISURElKCuu+46nHHGGfB4PPjyl7+M+++/f8zJr8vlwmuvvYZLL70Uv/zlL9Xb09PT1am7Dz74IF577TX1PrfbjXvuuQfvvfcezGYzbrjhBl0+jxjAMlFAtqCgQF2Wb33rW3juuefG9Ibr7e3Fc889N6bc/Mtf/jKAQLDyz3/+szrox+fz4fe//z1eeeWVmJZ93bp1AAJ94t544w319sHBQfzoRz/Cnj17JnyuCLbt2rVLzVbTw3nnnYeysjL09PTg29/+tjr5GAj0KvzBD34w7rTz6UKsK08//TSeeuoptf+g3+/Hn/70J3V4yo033hi3ZVi/fj0AYMuWLQCC/TCFDRs2wO12q+tMpEFMse4cPXp03MBXPP3hD3/AJZdcgmeeeWbEugMESvX/8Y9/4OabbwYArFixYsQAqS9/+csoLi7Ge++9h2984xtjevvKsow9e/bgzjvvHPHbifZ39vzzz+O+++7DsWPHRtzu8Xjwhz/8Af39/TCbzSMGfF1//fWQJAlvvvkmHnjggRE9Nl9++WX8/ve/BwB85Stf0ewijwic3nvvvSPaeRw8eBA33HDDhP1toyW2ue+++666TZzI8uXLsXjxYrS3t6vZ/xzoQ0REiYY9MYmIiBKUJEl44IEHcM899+Dxxx/Hr371K/z6179GeXk58vLyMDQ0hKamJrhcLgBjAyTXX389Dh8+jFdeeQU33ngjSkpKUFhYiLq6OgwMDMBkMuEnP/kJVqxYocvnueiii/Cvf/0Ljz76KF577TXMmjULJpMJp556Kr7yla8AAL761a+iv78fDz/8MG6++Wb8z//8D+bOnQuz2Qy73Y6WlhbIsqwGO4TTTz8dX/rSl/Dwww/jjjvuwEMPPYTS0lI0NTWhu7sbP/rRj3DnnXcCAMxmc8TLfsYZZ6jTj7/61a+ivLwcOTk5OH78OFwuF+666y41oDPaOeecg1/+8pf48MMPcfrpp6OyshJWqxWFhYX4xS9+EfGyhMtms+Hee+/Ftddei61bt+L000/HwoUL4XA4cPz4cXWi8+bNm6MOnvz973/HO++8M+ljbr311rCmw0fq4osvxv79+/HYY4/hJz/5CR544AGUlJSgublZDbpdf/31+OQnP6n5ewsbNmzAn//8Z8iyjNzc3DGT4Dds2IAnn3xSvX/RokURvf7ixYvVydGf+MQnMH/+fLXn5L333ouioiLNPst4PvroI3z00Uf48Y9/jNLSUhQUFMDhcKC1tVVtUzFv3rwx63F+fj7+8Ic/4Gtf+xpef/11vP7666ioqEB+fj4cDgeamprUwVNnnXWW+rxof2c9PT349a9/jV//+tfIzc1FWVkZZFlGU1OTOjDse9/73oiM3A0bNuDmm2/Gz3/+czz44IP485//jDlz5qCjo0PN2Pz0pz+NL3zhC5p9n9/61rewbds27Nu3D2eeeSbmzp0Lt9uN2tpalJSU4MYbb8S9996r2ftdeOGFeOKJJ/DKK6/gYx/7GMrKymCxWLBo0SL86Ec/GvP4yy+/HLfddhu8Xi/Ky8tx0kknabYsREREWmAQk4iIKIFZLBb88Ic/xJVXXolnnnkG27dvR1NTE1pbW2Gz2TB37lysWrUKF1xwgVpSHfrc++67D5s3b8bf/vY3HDhwAAcPHkReXh5OP/10fPGLX8SyZct0+yznnHMOfvazn+Hpp5/G0aNH0dTUBFmWR/TjlCQJN910Ez75yU/iySefxM6dO3H06FH4/X7k5eXhlFNOwcc+9rERgQ/hpptuwrJly/CnP/0Jhw4dwvHjx7Fo0SLcfvvt2LhxoxrEFEM9ImEymfD73/8ev/rVr/Dyyy+jvb0dw8PDWL9+Pb70pS9h3bp1EwYxS0pK8PDDD+Ohhx7CRx99hN27d8Pv9+vSh3TlypV49tln8cADD+Cdd97BkSNHUFJSguuvvx433HADbrrpJgDRfScA0NraitbW1kkfM14pu1Z+9KMf4ZRTTsGTTz6J3bt348CBA8jJycGZZ56Jq6++ekxmpNbWrVsHs9kMn8+HdevWjelhKfpmyrKs/jsSkiTh97//PX75y19i+/btOHTokJoxKC5exMu3v/1tnHLKKdi6dSvef/99NDQ04MCBAzCZTMjLy8OJJ56Is846CxdffPG4mYo1NTV48cUX8de//hWvvfYajhw5gpaWFthsNlRUVGDNmjU466yzRmy3ov2dnXPOOfD7/Xj33Xdx9OhR1NbWwuPxoLCwEKeccgquvPLKcftQfvGLX8SqVavw6KOPYteuXTh48CAyMjJw8skn47LLLtM8AF5TU4OnnnoK9913H9577z3U1tZi1qxZuPrqq3HjjTdqXk6+fPly/OpXv8Kjjz6KgwcP4sMPP5w0I/OCCy7Az3/+czgcDlxyySUJ35OViIhmHkkWtTdERERESWrPnj249NJLkZubi3fffdfoxUkY5513Ho4ePYpf//rXOPPMM41eHCIyUGtrK8444wxIkoR///vfmDVrltGLRERENAJ7YhIREVHSEwN/RmerzmQffPABjh49CovFglWrVhm9OERksGeeeQZ+vx+nn346A5hERJSQGMQkIiKipPCXv/wFO3fuRGiRicvlwm9+8xv89a9/BQBcddVVRi2eIfbs2YO//vWvGBwcHHH7jh078O1vfxsAcO6553ICMdEM19jYiD//+c8AgGuuucbgpSEiIhofy8mJiIgoKXzzm9/EK6+8gpycHFRUVMDv96O2thYOhwNAYGjQd7/7XYOXUl///ve/cf3118NisWDu3LlIT09Ha2urOhm5uroajz32GPLy8gxeUiIywne+8x20tLTg4MGDcDqd+NjHPobf/va3Ri8WERHRuBjEJCIioqSwdetWbNq0CXv27EF3dzdcLhdyc3OxfPlyfO5zn8Opp55q9CLqrr29HX/605+wbds2tLW1ob+/HzabDfPmzcPZZ5+NK6+8Up12TUQzzxlnnIHm5mYUFRXhjDPOwPe//31kZWUZvVhERETjYhCTiIiIiIiIiIiIEhp7YhIREREREREREVFCYxCTiIiIiIiIiIiIEhqDmERERERERERERJTQLEYvwHTX3T0Av9/opSDSliQBBQVZsNsHwK65lGy4flMy4/pNyYrrNiUzrt+UzLh+01TEOhIOBjFjJMvgD5GSFtdvSmZcvymZcf2mZMV1m5IZ129KZly/SQssJyciIiIiIiIiIqKExiAmERERERERERERJTQGMYmIiIiIiIiIiCihMYhJRERERERERERECY1BTCIiIiIiIiIiIkpoDGISERERERERERFRQmMQk4iIiIiIiIiIiBIag5hERERERERERESU0BjEJCIiIiIiIiIiooTGICYRERERERERERElNItRb7xnzx488MAD+OCDD+D1elFdXY0vfOELOPfcc8N6fkNDA55//nns27cP+/btQ0dHB8rKyvCvf/1rwufU1NRMeN/FF1+Mu+++O+LPQURERERERERERPFlSBBz+/btuO6665CSkoLzzjsPGRkZ2LJlC77zne+gra0N11577ZSvsXPnTjz44IMwm82YP38+urq6wnrvsrIyXHzxxWNuX7x4ccSfg4iIiIiIiIiIiOJP9yCm1+vFrbfeCkmS8MQT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+KbqxeObqhmPb6pWPLapmvH4pmrG45v0UHQR8/7770c8Hi/462+//fa8HZB6iUaj+NjHPoazZ8/ij//4j3HllVca+njZpqe5E5OqjyQpbzJTU9xbQtWHxzdVMx7fVK14bFM14/FN1YzHN61EHCOFKLqI+d3vfhfhcLjgr7/xxhvR29urdUHm67QUH8/XqZlPLBbDvffei5dffhn33HMP/ut//a9LvkY8dr5Oy1AotODriiHL4C8iVS0e31TNeHxTNePxTdWKxzZVMx7fVM14fJMeii5ivvHGGyU90IYNGwAoAT+5iI8X07UZjUZx77334oUXXsBdd92FT33qUyU/ttPpLHkXJxERERERERERERnHtHTy3t5etLW14eDBg0s6OcPhMA4ePIienp6CC4nZBcw777xzyR7MbPv27YPT6cSvf/1ryItK/0NDQzh37hz279+/INGciIiIiIiIiIiIrMG0IqYkSbjlllsQDofx8MMPL/jcww8/jHA4jFtvvXXBxyORCM6cOYPh4eEFHxcj5C+88AJ+//d/H3/2Z3+27GP7/X7cdNNNGBgYwHe+8x3t47Is40tf+hIALHlsIiIiIiIiIiIisgZTWw/vuusu/OxnP8MjjzyCvr4+7Nq1C8ePH8eBAwewZ88e3HHHHQu+/siRI7j99ttxxRVX4PHHH9c+/ld/9Vd44YUX0NraCp/Ph4ceemjJY918883o6enR/vvTn/40Xn75Zdx333148cUXsX79erz66qs4dOgQrrvuOtx0003G/cWJiIiIiIiIiIioZKYWMb1eL775zW/ioYcewjPPPIOXX34Zra2tuPPOO/Gxj30MHo+noO8zNDQEAJiYmMDf//3f5/yaK664YkERs62tDf/yL/+CBx98EM899xx+/vOfo7u7G3/4h3+Iu+66C5Iklf8XJCIiIiIiIiIiIt1J8uIlkVSUqal5pNOVfhZE+pIkoKWlFpOT80yQo6rD45uqGY9vqlY8tqma8fimasbjm1YijpFCmLYTk4iIiIiIiIiIiKgULGISERERERERERGRpbGISURERERERERERJbGIiYRERERERERERFZGouYREREREREREREZGksYhIREREREREREZGlsYhJREREREREREREluao9BNY7SRJ+R9RNRHHNI9tqkY8vqma8fimasVjm6oZj2+qZjy+aSXFHBuS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1zp69KjTDfXbtWun3r17a82aNdq5c6csFkvTBgI4cSb5/vLLLyXJaV4bVxqXl5fb2sLCwiQdW5F8ovr6elVWViokJIT9MOExnsz38RYsWKBXXnlF/fr1U1ZWltOn3QLu5MlsM69Ec/NkvplXwhV+Gz1NGzdu1K5duxQfH+/yB8lqterPP/9UQkKCgoODnZ6TkpKiuro6h/by8nKVl5crLi5OoaGhTILhVe7Kd58+fdS2bVtVVlbq0KFDatOmjd3xxk/KLrroIvcOAHDBXdk+cuSIpP/tz3OixnZuZ4E3ucp3Y17379/vsEeas6z27dtXkrR27Vo99NBDDu9x4MABDR482CNjAFxxV74bHV/AzM7OVrt27TzYe8A1d2WbeSV8kbvyzbwSrlDEPEFtba3DD9Uff/yhjIwMtW7dWhMmTHD52vfff1+SdNttt7k8JyMjw2n7woULVV5erpEjR2ro0KFn0XPg1Dydbz8/Pw0bNkzLly/Xyy+/rIkTJ9qOrVixQtu2bVNMTIy6dOnSxJEA9jyd7ejoaElSbm6ubr/9drtip9VqVWlpqS644AKnT3cGmupM8x0VFaUtW7YoMzNTzz77rG1Pqvr6er300kuS7FdCdOvWTX379tW6detktVptqyoOHz5s26Df1QOvgKbydL6lYw+aeOWVVxQbG6vFixdTwIRXeDrbzCvRnDydb+aVcKVFFDHfe+89bdy4UZK0ZcsWW9v69eslSTExMbZfzt966y19+OGHiomJUefOnbV7924VFhbq4MGDmjNnjsvbEfft2yer1aqgoCBde+21XhgVcIyv5XvixIlat26dsrKyVFpaql69eqmiokJFRUUKCAjQrFmz3DV0/Mf5UrYjIyN14403auXKlRoyZIiSkpIUFBSk7du3q7i4WGazWRkZGU730wSc8WS+x4wZo88//1wrVqzQTz/9ZLtN65tvvtG2bdsUFham++67z+41M2bM0B133KFx48YpOTlZ5513nqxWq7Zu3arRo0fbCvnA6fClfOfn5+vll19W69at1bt3b7366qsO/e3Xr5/TWxyBE/lStgF387V8M6+EMy2iiLlx40YVFBTYtZWWlqq0tNT298YfxqioKJWUlKioqEj//POPOnbsqPj4eD344IOKiIhw+R4FBQU6evSoUlJS2DMKXuVr+Q4MDNTy5cuVmZmpzz77TGVl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",
      "text/plain": [
       "<Figure size 1600x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "_ = seasonal_ecm_res.ci_resids.plot(title=\"Cointegrating Error with Seasonality\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a394c3ac-c4de-4e13-8286-c578afa22095",
   "metadata": {},
   "source": [
    "## The relationship between Consumption and Growth\n",
    "\n",
    "Here we look at an example from Greene's _Econometric analysis_ which focuses on teh long-run relationship between consumption and growth. We start by downloading the raw data.\n",
    "\n",
    "Greene, W. H. (2000). Econometric analysis 4th edition. International edition, New Jersey: Prentice Hall, 201-215."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "db8d65eb-2ea5-4ced-bd72-45159dd72787",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-12T16:59:59.383935Z",
     "iopub.status.busy": "2024-10-12T16:59:59.383707Z",
     "iopub.status.idle": "2024-10-12T16:59:59.530829Z",
     "shell.execute_reply": "2024-10-12T16:59:59.530249Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Year</th>\n",
       "      <th>qtr</th>\n",
       "      <th>realgdp</th>\n",
       "      <th>realcons</th>\n",
       "      <th>realinvs realgovt realdpi cpi_u M1</th>\n",
       "      <th>tbilrate</th>\n",
       "      <th>unemp</th>\n",
       "      <th>pop</th>\n",
       "      <th>infl</th>\n",
       "      <th>realint</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1950.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1610.5</td>\n",
       "      <td>1058.9</td>\n",
       "      <td>198.1   361.0  1186.1  70.6   110.20</td>\n",
       "      <td>1.12</td>\n",
       "      <td>6.4</td>\n",
       "      <td>149.461</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1950.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1658.8</td>\n",
       "      <td>1075.9</td>\n",
       "      <td>220.4   366.4  1178.1  71.4   111.75</td>\n",
       "      <td>1.17</td>\n",
       "      <td>5.6</td>\n",
       "      <td>150.260</td>\n",
       "      <td>4.5071</td>\n",
       "      <td>-3.3404</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1950.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1723.0</td>\n",
       "      <td>1131.0</td>\n",
       "      <td>239.7   359.6  1196.5  73.2   112.95</td>\n",
       "      <td>1.23</td>\n",
       "      <td>4.6</td>\n",
       "      <td>151.064</td>\n",
       "      <td>9.9590</td>\n",
       "      <td>-8.7290</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1950.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>1753.9</td>\n",
       "      <td>1097.6</td>\n",
       "      <td>271.8   382.5  1210.0  74.9   113.93</td>\n",
       "      <td>1.35</td>\n",
       "      <td>4.2</td>\n",
       "      <td>151.871</td>\n",
       "      <td>9.1834</td>\n",
       "      <td>-7.8301</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1951.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1773.5</td>\n",
       "      <td>1122.8</td>\n",
       "      <td>242.9   421.9  1207.9  77.3   115.08</td>\n",
       "      <td>1.40</td>\n",
       "      <td>3.5</td>\n",
       "      <td>152.393</td>\n",
       "      <td>12.6160</td>\n",
       "      <td>-11.2160</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Year  qtr  realgdp  realcons    realinvs realgovt realdpi cpi_u M1  \\\n",
       "0  1950.0  1.0   1610.5    1058.9  198.1   361.0  1186.1  70.6   110.20   \n",
       "1  1950.0  2.0   1658.8    1075.9  220.4   366.4  1178.1  71.4   111.75   \n",
       "2  1950.0  3.0   1723.0    1131.0  239.7   359.6  1196.5  73.2   112.95   \n",
       "3  1950.0  4.0   1753.9    1097.6  271.8   382.5  1210.0  74.9   113.93   \n",
       "4  1951.0  1.0   1773.5    1122.8  242.9   421.9  1207.9  77.3   115.08   \n",
       "\n",
       "   tbilrate  unemp      pop     infl  realint  \n",
       "0      1.12    6.4  149.461   0.0000   0.0000  \n",
       "1      1.17    5.6  150.260   4.5071  -3.3404  \n",
       "2      1.23    4.6  151.064   9.9590  -8.7290  \n",
       "3      1.35    4.2  151.871   9.1834  -7.8301  \n",
       "4      1.40    3.5  152.393  12.6160 -11.2160  "
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "greene = pd.read_fwf(\"https://raw.githubusercontent.com/statsmodels/smdatasets/main/data/autoregressive-distributed-lag/green/ardl_data.txt\")\n",
    "greene.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9c3b0d83-e9b2-4f60-86b3-d7672fd73fe9",
   "metadata": {},
   "source": [
    "We then transform the index to be a pandas `DatetimeIndex` so that we can easily use seasonal terms."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "96110bd7-6445-45c6-838b-cb091c526a9b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-12T16:59:59.534126Z",
     "iopub.status.busy": "2024-10-12T16:59:59.533304Z",
     "iopub.status.idle": "2024-10-12T16:59:59.584013Z",
     "shell.execute_reply": "2024-10-12T16:59:59.583432Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_4421/2457281465.py:1: UserWarning: Could not infer format, so each element will be parsed individually, falling back to `dateutil`. To ensure parsing is consistent and as-expected, please specify a format.\n",
      "  index = pd.to_datetime(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Year</th>\n",
       "      <th>qtr</th>\n",
       "      <th>realgdp</th>\n",
       "      <th>realcons</th>\n",
       "      <th>realinvs realgovt realdpi cpi_u M1</th>\n",
       "      <th>tbilrate</th>\n",
       "      <th>unemp</th>\n",
       "      <th>pop</th>\n",
       "      <th>infl</th>\n",
       "      <th>realint</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1950-01-01</th>\n",
       "      <td>1950.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1610.5</td>\n",
       "      <td>1058.9</td>\n",
       "      <td>198.1   361.0  1186.1  70.6   110.20</td>\n",
       "      <td>1.12</td>\n",
       "      <td>6.4</td>\n",
       "      <td>149.461</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1950-04-01</th>\n",
       "      <td>1950.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1658.8</td>\n",
       "      <td>1075.9</td>\n",
       "      <td>220.4   366.4  1178.1  71.4   111.75</td>\n",
       "      <td>1.17</td>\n",
       "      <td>5.6</td>\n",
       "      <td>150.260</td>\n",
       "      <td>4.5071</td>\n",
       "      <td>-3.3404</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1950-07-01</th>\n",
       "      <td>1950.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1723.0</td>\n",
       "      <td>1131.0</td>\n",
       "      <td>239.7   359.6  1196.5  73.2   112.95</td>\n",
       "      <td>1.23</td>\n",
       "      <td>4.6</td>\n",
       "      <td>151.064</td>\n",
       "      <td>9.9590</td>\n",
       "      <td>-8.7290</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1950-10-01</th>\n",
       "      <td>1950.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>1753.9</td>\n",
       "      <td>1097.6</td>\n",
       "      <td>271.8   382.5  1210.0  74.9   113.93</td>\n",
       "      <td>1.35</td>\n",
       "      <td>4.2</td>\n",
       "      <td>151.871</td>\n",
       "      <td>9.1834</td>\n",
       "      <td>-7.8301</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1951-01-01</th>\n",
       "      <td>1951.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1773.5</td>\n",
       "      <td>1122.8</td>\n",
       "      <td>242.9   421.9  1207.9  77.3   115.08</td>\n",
       "      <td>1.40</td>\n",
       "      <td>3.5</td>\n",
       "      <td>152.393</td>\n",
       "      <td>12.6160</td>\n",
       "      <td>-11.2160</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              Year  qtr  realgdp  realcons  \\\n",
       "1950-01-01  1950.0  1.0   1610.5    1058.9   \n",
       "1950-04-01  1950.0  2.0   1658.8    1075.9   \n",
       "1950-07-01  1950.0  3.0   1723.0    1131.0   \n",
       "1950-10-01  1950.0  4.0   1753.9    1097.6   \n",
       "1951-01-01  1951.0  1.0   1773.5    1122.8   \n",
       "\n",
       "              realinvs realgovt realdpi cpi_u M1  tbilrate  unemp      pop  \\\n",
       "1950-01-01  198.1   361.0  1186.1  70.6   110.20      1.12    6.4  149.461   \n",
       "1950-04-01  220.4   366.4  1178.1  71.4   111.75      1.17    5.6  150.260   \n",
       "1950-07-01  239.7   359.6  1196.5  73.2   112.95      1.23    4.6  151.064   \n",
       "1950-10-01  271.8   382.5  1210.0  74.9   113.93      1.35    4.2  151.871   \n",
       "1951-01-01  242.9   421.9  1207.9  77.3   115.08      1.40    3.5  152.393   \n",
       "\n",
       "               infl  realint  \n",
       "1950-01-01   0.0000   0.0000  \n",
       "1950-04-01   4.5071  -3.3404  \n",
       "1950-07-01   9.9590  -8.7290  \n",
       "1950-10-01   9.1834  -7.8301  \n",
       "1951-01-01  12.6160 -11.2160  "
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "index = pd.to_datetime(\n",
    "    greene.Year.astype(\"int\").astype(\"str\")\n",
    "    + \"Q\"\n",
    "    + greene.qtr.astype(\"int\").astype(\"str\")\n",
    ")\n",
    "greene.index = index\n",
    "greene.index.freq = greene.index.inferred_freq\n",
    "greene.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2b7f7b30-72a5-4263-92f4-4365f9d0cbfb",
   "metadata": {},
   "source": [
    "We defined `g` as the log of real gdp and `c` as the log of real consumption."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "78428267-7756-434f-899a-f40ae180e7e4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-12T16:59:59.587303Z",
     "iopub.status.busy": "2024-10-12T16:59:59.586438Z",
     "iopub.status.idle": "2024-10-12T16:59:59.603685Z",
     "shell.execute_reply": "2024-10-12T16:59:59.603090Z"
    }
   },
   "outputs": [],
   "source": [
    "greene[\"c\"] = np.log(greene.realcons)\n",
    "greene[\"g\"] = np.log(greene.realgdp)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9def354e-f815-40e2-a1b0-f1e3f0f89d0d",
   "metadata": {},
   "source": [
    "### Lag Length Selection\n",
    "\n",
    "The selected model contains 5 lags of consumption and 2 of growth (0 and 1). Here we include seasonal terms although these are not significant."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "d5160337-96e1-429c-8cee-7dd096e1ee04",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-12T16:59:59.606951Z",
     "iopub.status.busy": "2024-10-12T16:59:59.606124Z",
     "iopub.status.idle": "2024-10-12T16:59:59.703087Z",
     "shell.execute_reply": "2024-10-12T16:59:59.693411Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(5, 1)"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sel_res = ardl_select_order(\n",
    "    greene.c, 8, greene[[\"g\"]], 8, trend=\"c\", seasonal=True, ic=\"aic\"\n",
    ")\n",
    "ardl = sel_res.model\n",
    "ardl.ardl_order"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "deba851b-1617-4ab2-acc5-0909d1835edc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-12T16:59:59.706230Z",
     "iopub.status.busy": "2024-10-12T16:59:59.705806Z",
     "iopub.status.idle": "2024-10-12T16:59:59.782378Z",
     "shell.execute_reply": "2024-10-12T16:59:59.781799Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>ARDL Model Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>         <td>c</td>        <th>  No. Observations:  </th>    <td>204</td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>         <td>Seas. ARDL(5, 1)</td> <th>  Log Likelihood     </th>  <td>747.939</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>         <td>Conditional MLE</td> <th>  S.D. of innovations</th>   <td>0.006</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>          <td>Sat, 12 Oct 2024</td> <th>  AIC                </th> <td>-1471.878</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>              <td>16:59:59</td>     <th>  BIC                </th> <td>-1432.358</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Sample:</th>           <td>04-01-1951</td>    <th>  HQIC               </th> <td>-1455.883</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th></th>                 <td>- 10-01-2000</td>   <th>                     </th>     <td> </td>    \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "     <td></td>       <th>coef</th>     <th>std err</th>      <th>z</th>      <th>P>|z|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th>  <td>   -0.0586</td> <td>    0.028</td> <td>   -2.103</td> <td> 0.037</td> <td>   -0.113</td> <td>   -0.004</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>s(2,4)</th> <td>   -0.0001</td> <td>    0.001</td> <td>   -0.087</td> <td> 0.930</td> <td>   -0.002</td> <td>    0.002</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>s(3,4)</th> <td>    0.0012</td> <td>    0.001</td> <td>    1.026</td> <td> 0.306</td> <td>   -0.001</td> <td>    0.004</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>s(4,4)</th> <td>    0.0003</td> <td>    0.001</td> <td>    0.296</td> <td> 0.768</td> <td>   -0.002</td> <td>    0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>c.L1</th>   <td>    0.8545</td> <td>    0.064</td> <td>   13.263</td> <td> 0.000</td> <td>    0.727</td> <td>    0.982</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>c.L2</th>   <td>    0.2588</td> <td>    0.082</td> <td>    3.151</td> <td> 0.002</td> <td>    0.097</td> <td>    0.421</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>c.L3</th>   <td>   -0.1566</td> <td>    0.072</td> <td>   -2.190</td> <td> 0.030</td> <td>   -0.298</td> <td>   -0.016</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>c.L4</th>   <td>   -0.1941</td> <td>    0.070</td> <td>   -2.754</td> <td> 0.006</td> <td>   -0.333</td> <td>   -0.055</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>c.L5</th>   <td>    0.1695</td> <td>    0.048</td> <td>    3.495</td> <td> 0.001</td> <td>    0.074</td> <td>    0.265</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>g.L0</th>   <td>    0.5476</td> <td>    0.048</td> <td>   11.350</td> <td> 0.000</td> <td>    0.452</td> <td>    0.643</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>g.L1</th>   <td>   -0.4757</td> <td>    0.051</td> <td>   -9.311</td> <td> 0.000</td> <td>   -0.576</td> <td>   -0.375</td>\n",
       "</tr>\n",
       "</table>"
      ],
      "text/latex": [
       "\\begin{center}\n",
       "\\begin{tabular}{lclc}\n",
       "\\toprule\n",
       "\\textbf{Dep. Variable:} &        c         & \\textbf{  No. Observations:  } &    204      \\\\\n",
       "\\textbf{Model:}         & Seas. ARDL(5, 1) & \\textbf{  Log Likelihood     } &  747.939    \\\\\n",
       "\\textbf{Method:}        & Conditional MLE  & \\textbf{  S.D. of innovations} &   0.006     \\\\\n",
       "\\textbf{Date:}          & Sat, 12 Oct 2024 & \\textbf{  AIC                } & -1471.878   \\\\\n",
       "\\textbf{Time:}          &     16:59:59     & \\textbf{  BIC                } & -1432.358   \\\\\n",
       "\\textbf{Sample:}        &    04-01-1951    & \\textbf{  HQIC               } & -1455.883   \\\\\n",
       "\\textbf{}               &   - 10-01-2000   & \\textbf{                     } &             \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "\\begin{tabular}{lcccccc}\n",
       "                & \\textbf{coef} & \\textbf{std err} & \\textbf{z} & \\textbf{P$> |$z$|$} & \\textbf{[0.025} & \\textbf{0.975]}  \\\\\n",
       "\\midrule\n",
       "\\textbf{const}  &      -0.0586  &        0.028     &    -2.103  &         0.037        &       -0.113    &       -0.004     \\\\\n",
       "\\textbf{s(2,4)} &      -0.0001  &        0.001     &    -0.087  &         0.930        &       -0.002    &        0.002     \\\\\n",
       "\\textbf{s(3,4)} &       0.0012  &        0.001     &     1.026  &         0.306        &       -0.001    &        0.004     \\\\\n",
       "\\textbf{s(4,4)} &       0.0003  &        0.001     &     0.296  &         0.768        &       -0.002    &        0.003     \\\\\n",
       "\\textbf{c.L1}   &       0.8545  &        0.064     &    13.263  &         0.000        &        0.727    &        0.982     \\\\\n",
       "\\textbf{c.L2}   &       0.2588  &        0.082     &     3.151  &         0.002        &        0.097    &        0.421     \\\\\n",
       "\\textbf{c.L3}   &      -0.1566  &        0.072     &    -2.190  &         0.030        &       -0.298    &       -0.016     \\\\\n",
       "\\textbf{c.L4}   &      -0.1941  &        0.070     &    -2.754  &         0.006        &       -0.333    &       -0.055     \\\\\n",
       "\\textbf{c.L5}   &       0.1695  &        0.048     &     3.495  &         0.001        &        0.074    &        0.265     \\\\\n",
       "\\textbf{g.L0}   &       0.5476  &        0.048     &    11.350  &         0.000        &        0.452    &        0.643     \\\\\n",
       "\\textbf{g.L1}   &      -0.4757  &        0.051     &    -9.311  &         0.000        &       -0.576    &       -0.375     \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "%\\caption{ARDL Model Results}\n",
       "\\end{center}"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                              ARDL Model Results                              \n",
       "==============================================================================\n",
       "Dep. Variable:                      c   No. Observations:                  204\n",
       "Model:               Seas. ARDL(5, 1)   Log Likelihood                 747.939\n",
       "Method:               Conditional MLE   S.D. of innovations              0.006\n",
       "Date:                Sat, 12 Oct 2024   AIC                          -1471.878\n",
       "Time:                        16:59:59   BIC                          -1432.358\n",
       "Sample:                    04-01-1951   HQIC                         -1455.883\n",
       "                         - 10-01-2000                                         \n",
       "==============================================================================\n",
       "                 coef    std err          z      P>|z|      [0.025      0.975]\n",
       "------------------------------------------------------------------------------\n",
       "const         -0.0586      0.028     -2.103      0.037      -0.113      -0.004\n",
       "s(2,4)        -0.0001      0.001     -0.087      0.930      -0.002       0.002\n",
       "s(3,4)         0.0012      0.001      1.026      0.306      -0.001       0.004\n",
       "s(4,4)         0.0003      0.001      0.296      0.768      -0.002       0.003\n",
       "c.L1           0.8545      0.064     13.263      0.000       0.727       0.982\n",
       "c.L2           0.2588      0.082      3.151      0.002       0.097       0.421\n",
       "c.L3          -0.1566      0.072     -2.190      0.030      -0.298      -0.016\n",
       "c.L4          -0.1941      0.070     -2.754      0.006      -0.333      -0.055\n",
       "c.L5           0.1695      0.048      3.495      0.001       0.074       0.265\n",
       "g.L0           0.5476      0.048     11.350      0.000       0.452       0.643\n",
       "g.L1          -0.4757      0.051     -9.311      0.000      -0.576      -0.375\n",
       "==============================================================================\n",
       "\"\"\""
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "res = ardl.fit(use_t=True)\n",
    "res.summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1bc10eb0-4a92-4885-a774-91d3192b1200",
   "metadata": {},
   "source": [
    "`from_ardl` is a simple way to get the equivalent UECM specification. Here we rerun the selection without the seasonal terms."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "d4f97468-beaa-47d0-9078-e7eee3d3da64",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-12T16:59:59.785613Z",
     "iopub.status.busy": "2024-10-12T16:59:59.784788Z",
     "iopub.status.idle": "2024-10-12T16:59:59.924691Z",
     "shell.execute_reply": "2024-10-12T16:59:59.923937Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>UECM Model Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>        <td>D.c</td>       <th>  No. Observations:  </th>    <td>204</td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>            <td>UECM(5, 1)</td>    <th>  Log Likelihood     </th>  <td>747.131</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>         <td>Conditional MLE</td> <th>  S.D. of innovations</th>   <td>7.909</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>          <td>Sat, 12 Oct 2024</td> <th>  AIC                </th> <td>-1476.262</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>              <td>16:59:59</td>     <th>  BIC                </th> <td>-1446.622</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Sample:</th>           <td>04-01-1951</td>    <th>  HQIC               </th> <td>-1464.266</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th></th>                 <td>- 10-01-2000</td>   <th>                     </th>     <td> </td>    \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "     <td></td>       <th>coef</th>     <th>std err</th>      <th>z</th>      <th>P>|z|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th>  <td>   -0.0586</td> <td>    0.028</td> <td>   -2.115</td> <td> 0.036</td> <td>   -0.113</td> <td>   -0.004</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>c.L1</th>   <td>   -0.0684</td> <td>    0.028</td> <td>   -2.406</td> <td> 0.017</td> <td>   -0.125</td> <td>   -0.012</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>g.L1</th>   <td>    0.0725</td> <td>    0.030</td> <td>    2.400</td> <td> 0.017</td> <td>    0.013</td> <td>    0.132</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>D.c.L1</th> <td>   -0.0767</td> <td>    0.059</td> <td>   -1.302</td> <td> 0.195</td> <td>   -0.193</td> <td>    0.040</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>D.c.L2</th> <td>    0.1842</td> <td>    0.053</td> <td>    3.495</td> <td> 0.001</td> <td>    0.080</td> <td>    0.288</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>D.c.L3</th> <td>    0.0198</td> <td>    0.049</td> <td>    0.404</td> <td> 0.687</td> <td>   -0.077</td> <td>    0.116</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>D.c.L4</th> <td>   -0.1664</td> <td>    0.048</td> <td>   -3.460</td> <td> 0.001</td> <td>   -0.261</td> <td>   -0.072</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>D.g.L0</th> <td>    0.5440</td> <td>    0.048</td> <td>   11.372</td> <td> 0.000</td> <td>    0.450</td> <td>    0.638</td>\n",
       "</tr>\n",
       "</table>"
      ],
      "text/latex": [
       "\\begin{center}\n",
       "\\begin{tabular}{lclc}\n",
       "\\toprule\n",
       "\\textbf{Dep. Variable:} &       D.c        & \\textbf{  No. Observations:  } &    204      \\\\\n",
       "\\textbf{Model:}         &    UECM(5, 1)    & \\textbf{  Log Likelihood     } &  747.131    \\\\\n",
       "\\textbf{Method:}        & Conditional MLE  & \\textbf{  S.D. of innovations} &   7.909     \\\\\n",
       "\\textbf{Date:}          & Sat, 12 Oct 2024 & \\textbf{  AIC                } & -1476.262   \\\\\n",
       "\\textbf{Time:}          &     16:59:59     & \\textbf{  BIC                } & -1446.622   \\\\\n",
       "\\textbf{Sample:}        &    04-01-1951    & \\textbf{  HQIC               } & -1464.266   \\\\\n",
       "\\textbf{}               &   - 10-01-2000   & \\textbf{                     } &             \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "\\begin{tabular}{lcccccc}\n",
       "                & \\textbf{coef} & \\textbf{std err} & \\textbf{z} & \\textbf{P$> |$z$|$} & \\textbf{[0.025} & \\textbf{0.975]}  \\\\\n",
       "\\midrule\n",
       "\\textbf{const}  &      -0.0586  &        0.028     &    -2.115  &         0.036        &       -0.113    &       -0.004     \\\\\n",
       "\\textbf{c.L1}   &      -0.0684  &        0.028     &    -2.406  &         0.017        &       -0.125    &       -0.012     \\\\\n",
       "\\textbf{g.L1}   &       0.0725  &        0.030     &     2.400  &         0.017        &        0.013    &        0.132     \\\\\n",
       "\\textbf{D.c.L1} &      -0.0767  &        0.059     &    -1.302  &         0.195        &       -0.193    &        0.040     \\\\\n",
       "\\textbf{D.c.L2} &       0.1842  &        0.053     &     3.495  &         0.001        &        0.080    &        0.288     \\\\\n",
       "\\textbf{D.c.L3} &       0.0198  &        0.049     &     0.404  &         0.687        &       -0.077    &        0.116     \\\\\n",
       "\\textbf{D.c.L4} &      -0.1664  &        0.048     &    -3.460  &         0.001        &       -0.261    &       -0.072     \\\\\n",
       "\\textbf{D.g.L0} &       0.5440  &        0.048     &    11.372  &         0.000        &        0.450    &        0.638     \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "%\\caption{UECM Model Results}\n",
       "\\end{center}"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                              UECM Model Results                              \n",
       "==============================================================================\n",
       "Dep. Variable:                    D.c   No. Observations:                  204\n",
       "Model:                     UECM(5, 1)   Log Likelihood                 747.131\n",
       "Method:               Conditional MLE   S.D. of innovations              7.909\n",
       "Date:                Sat, 12 Oct 2024   AIC                          -1476.262\n",
       "Time:                        16:59:59   BIC                          -1446.622\n",
       "Sample:                    04-01-1951   HQIC                         -1464.266\n",
       "                         - 10-01-2000                                         \n",
       "==============================================================================\n",
       "                 coef    std err          z      P>|z|      [0.025      0.975]\n",
       "------------------------------------------------------------------------------\n",
       "const         -0.0586      0.028     -2.115      0.036      -0.113      -0.004\n",
       "c.L1          -0.0684      0.028     -2.406      0.017      -0.125      -0.012\n",
       "g.L1           0.0725      0.030      2.400      0.017       0.013       0.132\n",
       "D.c.L1        -0.0767      0.059     -1.302      0.195      -0.193       0.040\n",
       "D.c.L2         0.1842      0.053      3.495      0.001       0.080       0.288\n",
       "D.c.L3         0.0198      0.049      0.404      0.687      -0.077       0.116\n",
       "D.c.L4        -0.1664      0.048     -3.460      0.001      -0.261      -0.072\n",
       "D.g.L0         0.5440      0.048     11.372      0.000       0.450       0.638\n",
       "==============================================================================\n",
       "\"\"\""
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sel_res = ardl_select_order(greene.c, 8, greene[[\"g\"]], 8, trend=\"c\", ic=\"aic\")\n",
    "\n",
    "uecm = UECM.from_ardl(sel_res.model)\n",
    "uecm_res = uecm.fit()\n",
    "uecm_res.summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "71443176-fca6-4105-80c8-eb18261f9724",
   "metadata": {},
   "source": [
    "We see that for every % increase in consumption, we need a 1.05% increase in gdp. In other words, the saving rate is estimated to be around 5%."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "43a66215-0416-4c6e-8c9f-423d87944a47",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-12T16:59:59.927692Z",
     "iopub.status.busy": "2024-10-12T16:59:59.927013Z",
     "iopub.status.idle": "2024-10-12T16:59:59.957789Z",
     "shell.execute_reply": "2024-10-12T16:59:59.957180Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>Cointegrating Vector</caption>\n",
       "<tr>\n",
       "    <td></td>       <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th> <td>    0.8572</td> <td>    0.112</td> <td>    7.632</td> <td> 0.000</td> <td>    0.636</td> <td>    1.079</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>c.L1</th>  <td>    1.0000</td> <td>        0</td> <td>      nan</td> <td>   nan</td> <td>    1.000</td> <td>    1.000</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>g.L1</th>  <td>   -1.0590</td> <td>    0.013</td> <td>  -83.157</td> <td> 0.000</td> <td>   -1.084</td> <td>   -1.034</td>\n",
       "</tr>\n",
       "</table>"
      ],
      "text/latex": [
       "\\begin{center}\n",
       "\\begin{tabular}{lcccccc}\n",
       "\\toprule\n",
       "               & \\textbf{coef} & \\textbf{std err} & \\textbf{t} & \\textbf{P$> |$t$|$} & \\textbf{[0.025} & \\textbf{0.975]}  \\\\\n",
       "\\midrule\n",
       "\\textbf{const} &       0.8572  &        0.112     &     7.632  &         0.000        &        0.636    &        1.079     \\\\\n",
       "\\textbf{c.L1}  &       1.0000  &            0     &       nan  &           nan        &        1.000    &        1.000     \\\\\n",
       "\\textbf{g.L1}  &      -1.0590  &        0.013     &   -83.157  &         0.000        &       -1.084    &       -1.034     \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "%\\caption{Cointegrating Vector}\n",
       "\\end{center}"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                             Cointegrating Vector                             \n",
       "==============================================================================\n",
       "                 coef    std err          t      P>|t|      [0.025      0.975]\n",
       "------------------------------------------------------------------------------\n",
       "const          0.8572      0.112      7.632      0.000       0.636       1.079\n",
       "c.L1           1.0000          0        nan        nan       1.000       1.000\n",
       "g.L1          -1.0590      0.013    -83.157      0.000      -1.084      -1.034\n",
       "==============================================================================\n",
       "\"\"\""
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "uecm_res.ci_summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "9e97dfd1-0c68-42db-b5f9-5038dd5719d5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-12T16:59:59.960207Z",
     "iopub.status.busy": "2024-10-12T16:59:59.959755Z",
     "iopub.status.idle": "2024-10-12T17:00:00.775868Z",
     "shell.execute_reply": "2024-10-12T17:00:00.775083Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1600x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "_ = uecm_res.ci_resids.plot(title=\"Cointegrating Error\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0e8eb317-74fc-4028-8cce-c17a311dff40",
   "metadata": {},
   "source": [
    "### Direct Specification of `UECM` models\n",
    "\n",
    "`UECM` can be used to directly specify model lag lengths."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "a4180f7b-65e8-4389-b68a-a7567aca759e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-12T17:00:00.778783Z",
     "iopub.status.busy": "2024-10-12T17:00:00.778364Z",
     "iopub.status.idle": "2024-10-12T17:00:00.859733Z",
     "shell.execute_reply": "2024-10-12T17:00:00.859080Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>UECM Model Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>        <td>D.c</td>       <th>  No. Observations:  </th>    <td>204</td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>            <td>UECM(2, 1)</td>    <th>  Log Likelihood     </th>  <td>724.499</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>         <td>Conditional MLE</td> <th>  S.D. of innovations</th>   <td>7.897</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>          <td>Sat, 12 Oct 2024</td> <th>  AIC                </th> <td>-1436.998</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>              <td>17:00:00</td>     <th>  BIC                </th> <td>-1417.149</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Sample:</th>           <td>07-01-1950</td>    <th>  HQIC               </th> <td>-1428.967</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th></th>                 <td>- 10-01-2000</td>   <th>                     </th>     <td> </td>    \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "     <td></td>       <th>coef</th>     <th>std err</th>      <th>z</th>      <th>P>|z|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th>  <td>   -0.0778</td> <td>    0.030</td> <td>   -2.601</td> <td> 0.010</td> <td>   -0.137</td> <td>   -0.019</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>c.L1</th>   <td>   -0.0885</td> <td>    0.031</td> <td>   -2.854</td> <td> 0.005</td> <td>   -0.150</td> <td>   -0.027</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>g.L1</th>   <td>    0.0939</td> <td>    0.033</td> <td>    2.857</td> <td> 0.005</td> <td>    0.029</td> <td>    0.159</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>D.c.L1</th> <td>   -0.1926</td> <td>    0.058</td> <td>   -3.340</td> <td> 0.001</td> <td>   -0.306</td> <td>   -0.079</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>D.g.L0</th> <td>    0.6395</td> <td>    0.053</td> <td>   12.050</td> <td> 0.000</td> <td>    0.535</td> <td>    0.744</td>\n",
       "</tr>\n",
       "</table>"
      ],
      "text/latex": [
       "\\begin{center}\n",
       "\\begin{tabular}{lclc}\n",
       "\\toprule\n",
       "\\textbf{Dep. Variable:} &       D.c        & \\textbf{  No. Observations:  } &    204      \\\\\n",
       "\\textbf{Model:}         &    UECM(2, 1)    & \\textbf{  Log Likelihood     } &  724.499    \\\\\n",
       "\\textbf{Method:}        & Conditional MLE  & \\textbf{  S.D. of innovations} &   7.897     \\\\\n",
       "\\textbf{Date:}          & Sat, 12 Oct 2024 & \\textbf{  AIC                } & -1436.998   \\\\\n",
       "\\textbf{Time:}          &     17:00:00     & \\textbf{  BIC                } & -1417.149   \\\\\n",
       "\\textbf{Sample:}        &    07-01-1950    & \\textbf{  HQIC               } & -1428.967   \\\\\n",
       "\\textbf{}               &   - 10-01-2000   & \\textbf{                     } &             \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "\\begin{tabular}{lcccccc}\n",
       "                & \\textbf{coef} & \\textbf{std err} & \\textbf{z} & \\textbf{P$> |$z$|$} & \\textbf{[0.025} & \\textbf{0.975]}  \\\\\n",
       "\\midrule\n",
       "\\textbf{const}  &      -0.0778  &        0.030     &    -2.601  &         0.010        &       -0.137    &       -0.019     \\\\\n",
       "\\textbf{c.L1}   &      -0.0885  &        0.031     &    -2.854  &         0.005        &       -0.150    &       -0.027     \\\\\n",
       "\\textbf{g.L1}   &       0.0939  &        0.033     &     2.857  &         0.005        &        0.029    &        0.159     \\\\\n",
       "\\textbf{D.c.L1} &      -0.1926  &        0.058     &    -3.340  &         0.001        &       -0.306    &       -0.079     \\\\\n",
       "\\textbf{D.g.L0} &       0.6395  &        0.053     &    12.050  &         0.000        &        0.535    &        0.744     \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "%\\caption{UECM Model Results}\n",
       "\\end{center}"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                              UECM Model Results                              \n",
       "==============================================================================\n",
       "Dep. Variable:                    D.c   No. Observations:                  204\n",
       "Model:                     UECM(2, 1)   Log Likelihood                 724.499\n",
       "Method:               Conditional MLE   S.D. of innovations              7.897\n",
       "Date:                Sat, 12 Oct 2024   AIC                          -1436.998\n",
       "Time:                        17:00:00   BIC                          -1417.149\n",
       "Sample:                    07-01-1950   HQIC                         -1428.967\n",
       "                         - 10-01-2000                                         \n",
       "==============================================================================\n",
       "                 coef    std err          z      P>|z|      [0.025      0.975]\n",
       "------------------------------------------------------------------------------\n",
       "const         -0.0778      0.030     -2.601      0.010      -0.137      -0.019\n",
       "c.L1          -0.0885      0.031     -2.854      0.005      -0.150      -0.027\n",
       "g.L1           0.0939      0.033      2.857      0.005       0.029       0.159\n",
       "D.c.L1        -0.1926      0.058     -3.340      0.001      -0.306      -0.079\n",
       "D.g.L0         0.6395      0.053     12.050      0.000       0.535       0.744\n",
       "==============================================================================\n",
       "\"\"\""
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "uecm = UECM(greene.c, 2, greene[[\"g\"]], 1, trend=\"c\")\n",
    "uecm_res = uecm.fit()\n",
    "uecm_res.summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f9259982-b1e9-4384-bd2e-f7c41a7e1165",
   "metadata": {},
   "source": [
    "The changes in the lag structure make little difference in the estimated long-run relationship."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "90124be5-398c-4261-ac16-415454d7f468",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-12T17:00:00.868028Z",
     "iopub.status.busy": "2024-10-12T17:00:00.867615Z",
     "iopub.status.idle": "2024-10-12T17:00:00.896465Z",
     "shell.execute_reply": "2024-10-12T17:00:00.895850Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>Cointegrating Vector</caption>\n",
       "<tr>\n",
       "    <td></td>       <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th> <td>    0.8789</td> <td>    0.096</td> <td>    9.183</td> <td> 0.000</td> <td>    0.690</td> <td>    1.068</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>c.L1</th>  <td>    1.0000</td> <td>        0</td> <td>      nan</td> <td>   nan</td> <td>    1.000</td> <td>    1.000</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>g.L1</th>  <td>   -1.0605</td> <td>    0.011</td> <td>  -94.148</td> <td> 0.000</td> <td>   -1.083</td> <td>   -1.038</td>\n",
       "</tr>\n",
       "</table>"
      ],
      "text/latex": [
       "\\begin{center}\n",
       "\\begin{tabular}{lcccccc}\n",
       "\\toprule\n",
       "               & \\textbf{coef} & \\textbf{std err} & \\textbf{t} & \\textbf{P$> |$t$|$} & \\textbf{[0.025} & \\textbf{0.975]}  \\\\\n",
       "\\midrule\n",
       "\\textbf{const} &       0.8789  &        0.096     &     9.183  &         0.000        &        0.690    &        1.068     \\\\\n",
       "\\textbf{c.L1}  &       1.0000  &            0     &       nan  &           nan        &        1.000    &        1.000     \\\\\n",
       "\\textbf{g.L1}  &      -1.0605  &        0.011     &   -94.148  &         0.000        &       -1.083    &       -1.038     \\\\\n",
       "\\bottomrule\n",
       "\\end{tabular}\n",
       "%\\caption{Cointegrating Vector}\n",
       "\\end{center}"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                             Cointegrating Vector                             \n",
       "==============================================================================\n",
       "                 coef    std err          t      P>|t|      [0.025      0.975]\n",
       "------------------------------------------------------------------------------\n",
       "const          0.8789      0.096      9.183      0.000       0.690       1.068\n",
       "c.L1           1.0000          0        nan        nan       1.000       1.000\n",
       "g.L1          -1.0605      0.011    -94.148      0.000      -1.083      -1.038\n",
       "==============================================================================\n",
       "\"\"\""
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "uecm_res.ci_summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "86c7dfb3-e2e6-48d6-9ae4-c9ad8404cf84",
   "metadata": {},
   "source": [
    "## Bounds Testing\n",
    "\n",
    "`UECMResults` expose the bounds test of Pesaran, Shin, and Smith (2001).  This test facilitates testing whether there is a level relationship between a set of variables without identifying which variables are I(1). This test provides two sets of critical and p-values.  If the test statistic is below the critical value for the lower bound, then there appears to be no levels relationship irrespective of the order or integration in the $X$ variables.  If it is above the upper bound, then there appears to be a levels relationship again, irrespective of the order of integration of the $X$ variables. There are 5 cases covered in the paper that include different combinations of deterministic regressors in the model or the test.\n",
    "\n",
    "\n",
    "$$\\Delta Y_{t}=\\delta_{0} + \\delta_{1}t + Z_{t-1}\\beta + \\sum_{j=0}^{P}\\Delta X_{t-j}\\Gamma + \\epsilon_{t}$$\n",
    "\n",
    "where $Z_{t-1}$ includes both $Y_{t-1}$ and $X_{t-1}$.\n",
    "\n",
    "The cases determine which deterministic terms are included in the model and which are tested as part of the test.\n",
    "\n",
    "1. No deterministic terms\n",
    "2. Constant included in both the model and the test\n",
    "3. Constant included in the model but not in the test\n",
    "4. Constant and trend included in the model, only trend included in the test\n",
    "5. Constant and trend included in the model, neither included in the test\n",
    "\n",
    "Here we run the test on the Danish money demand data set. Here we see the test statistic is above the 95% critical value for both the lower and upper.\n",
    "\n",
    "\n",
    "Pesaran, M. H., Shin, Y., & Smith, R. J. (2001). Bounds testing approaches to the analysis of level relationships. Journal of applied econometrics, 16(3), 289-326."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "a05b5719-4d4c-4dbf-888a-06b2d6f08183",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-12T17:00:00.898960Z",
     "iopub.status.busy": "2024-10-12T17:00:00.898503Z",
     "iopub.status.idle": "2024-10-12T17:00:00.935692Z",
     "shell.execute_reply": "2024-10-12T17:00:00.935077Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "BoundsTestResult\n",
       "Stat: 5.07063\n",
       "Upper P-value: 0.0068\n",
       "Lower P-value: 0.000751\n",
       "Null: No Cointegration\n",
       "Alternative: Possible Cointegration"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ecm = UECM(data.lrm, 3, data[[\"lry\", \"ibo\", \"ide\"]], 3, trend=\"c\")\n",
    "ecm_fit = ecm.fit()\n",
    "bounds_test = ecm_fit.bounds_test(case=4)\n",
    "bounds_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "ba3abe46-ea62-4ee8-833a-d7a8acb57197",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-12T17:00:00.938130Z",
     "iopub.status.busy": "2024-10-12T17:00:00.937677Z",
     "iopub.status.idle": "2024-10-12T17:00:00.957976Z",
     "shell.execute_reply": "2024-10-12T17:00:00.957367Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>lower</th>\n",
       "      <th>upper</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>percentile</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>90.0</th>\n",
       "      <td>2.690222</td>\n",
       "      <td>3.523115</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95.0</th>\n",
       "      <td>3.069910</td>\n",
       "      <td>3.957893</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99.0</th>\n",
       "      <td>3.877333</td>\n",
       "      <td>4.867071</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99.9</th>\n",
       "      <td>4.940583</td>\n",
       "      <td>6.040331</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               lower     upper\n",
       "percentile                    \n",
       "90.0        2.690222  3.523115\n",
       "95.0        3.069910  3.957893\n",
       "99.0        3.877333  4.867071\n",
       "99.9        4.940583  6.040331"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bounds_test.crit_vals"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "16640819-83e7-451b-8fe9-a76cc5598204",
   "metadata": {},
   "source": [
    "Case 3 also rejects the null of no levels relationship."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "717c3deb-fac2-40a2-b719-be3f8b28d747",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-10-12T17:00:00.960469Z",
     "iopub.status.busy": "2024-10-12T17:00:00.960018Z",
     "iopub.status.idle": "2024-10-12T17:00:01.003710Z",
     "shell.execute_reply": "2024-10-12T17:00:01.003098Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "BoundsTestResult\n",
       "Stat: 5.99305\n",
       "Upper P-value: 0.00205\n",
       "Lower P-value: 0.000138\n",
       "Null: No Cointegration\n",
       "Alternative: Possible Cointegration"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ecm = UECM(data.lrm, 3, data[[\"lry\", \"ibo\", \"ide\"]], 3, trend=\"c\")\n",
    "ecm_fit = ecm.fit()\n",
    "bounds_test = ecm_fit.bounds_test(case=3)\n",
    "bounds_test"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.15"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
